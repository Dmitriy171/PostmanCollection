{
	"info": {
		"_postman_id": "4ef3245a-515c-4988-bba2-ea4be400b5d0",
		"name": "PharmaciesReport",
		"description": "Pharmacies",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test",
			"item": [
				{
					"name": "Test pharmacy",
					"item": [
						{
							"name": "Creating Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "931fa461-c11c-4dfd-adee-ab40a0af4f94",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//pm.environment.set(\"pharmacyPrId\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"PharmaIdCr\", pm.response.json().data.item.id);\r",
											"\r",
											"pm.environment.set(\"RegionId\", pm.response.json().data.item.region.id);\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "11464e88-5820-472c-9dda-0b77ab523f24",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"phone\": \"{{rphone}}\",\n  \"regionId\": 6,\n  \"location\": {\n    \"lat\": 0,\n    \"lng\": 0,\n    \"address\": \"ул. Ньютона, 103\"\n  },\n  \"logoUuid\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy"
									]
								},
								"description": "Creating Pharmacy."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fb271c7-091c-459c-990b-b606d7323f59",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"        pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											"pm.test(\"regionId=6\", function () {\r",
											"        pm.expect(jsonData.data.item.region.id).to.eql(6);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"id": "f240aaa3-dc4f-44f3-93e8-e611ccb5be18",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								},
								"description": "Retrieving Pharmacy data."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Uploading_User_image_file.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a0b71a0-1608-4119-9d5f-8b3c9d6a3506",
										"exec": [
											"pm.environment.set(\"imglogo\", pm.response.json().data.item.uuid);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/D:/ProjecTs/Pharma/IMG Pharma/Pharmacy.png"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"image"
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Pharmacy.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "deb853b9-3744-45fa-bbf8-74af47f0ca2e",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ca257449-b479-426d-97bf-5c9efad43b29",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"phone\": \"{{rphone}}\",\n  \"regionId\": 4,\n  \"location\": {\n    \"lat\": 0,\n    \"lng\": 0,\n    \"address\": \"ул. Калатушкина, 666\"\n  },\n  \"logoUuid\": \"{{imglogo}}\"\n           \n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Pharmacy."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy edited",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy data. Сhange",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0dbfdbb5-d7cf-485c-b811-7d8866d24108",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"regionId=4\", function () {\r",
											"        pm.expect(jsonData.data.item.region.id).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"       pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"id": "cd95a8f6-3c65-4866-a187-905b9cee6635",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								},
								"description": "Retrieving Pharmacy data."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Pharmacy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83cf2ae5-9112-422f-aadd-54facd485a4b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const pharma = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"PharmaIdCr\")));\r",
											"const pharmaid = pharma ? pharma.id : 'not found';\r",
											"\r",
											"console.log(pharma);\r",
											"console.log(pharmaid);\r",
											"\r",
											"pm.test(\"Compare pharma_id\", function () {\r",
											"    pm.expect(pharmaid).to.eql(parseInt(pm.environment.get(\"PharmaIdCr\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacies"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "order[address]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "order[user_count]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "id",
											"value": "19",
											"description": "id",
											"disabled": true
										},
										{
											"key": "name",
											"value": "Pharmacy asd3",
											"description": "Pharmacy name",
											"disabled": true
										},
										{
											"key": "address",
											"value": "ул. Ньютона",
											"description": "Pharmacy address",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "63740984315",
											"description": "Pharmacy phone number",
											"disabled": true
										},
										{
											"key": "enterprise_admin",
											"value": "",
											"description": "Pharmacy enterprise admin name",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "12",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of Pharmacy."
							},
							"response": [
								{
									"name": "Pharmacies list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacies?order[id]=<string>&order[name]=<string>&order[address]=<string>&order[user_count]=<string>&id=<integer>&name=<string>&address=<string>&phone_number=<string>&enterprise_admin=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacies"
											],
											"query": [
												{
													"key": "order[id]",
													"value": "<string>"
												},
												{
													"key": "order[name]",
													"value": "<string>"
												},
												{
													"key": "order[address]",
													"value": "<string>"
												},
												{
													"key": "order[user_count]",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "address",
													"value": "<string>"
												},
												{
													"key": "phone_number",
													"value": "<string>"
												},
												{
													"key": "enterprise_admin",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacies?order[id]=<string>&order[name]=<string>&order[address]=<string>&order[user_count]=<string>&id=<integer>&name=<string>&address=<string>&phone_number=<string>&enterprise_admin=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacies"
											],
											"query": [
												{
													"key": "order[id]",
													"value": "<string>"
												},
												{
													"key": "order[name]",
													"value": "<string>"
												},
												{
													"key": "order[address]",
													"value": "<string>"
												},
												{
													"key": "order[user_count]",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "address",
													"value": "<string>"
												},
												{
													"key": "phone_number",
													"value": "<string>"
												},
												{
													"key": "enterprise_admin",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User registration. EnterpriseAdmin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a7ad81f-994f-43ac-ba73-3a28e9193b4c",
										"exec": [
											"pm.environment.set(\"email_EnterpriseAdmin\", pm.response.json().data.item.email);\r",
											"pm.environment.set(\"EnterpriseAdmin_id\", pm.response.json().data.item.id);\r",
											"\r",
											"\r",
											"//enterprise_admin\r",
											"//manager\r",
											"//enterprise_manager\r",
											"//doctor\r",
											"//courier"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"firstName\": \"{{$randomFirstName}}\",\n\"lastName\": \"{{$randomLastName}}\",\n\"email\": \"{{$randomEmail}}\",\n\"password\": \"{{password}}\",\n\"type\": \"enterprise_manager\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"registration",
										"type",
										":type"
									],
									"variable": [
										{
											"id": "14c098cb-3c98-4143-b46b-7a4a72bc838f",
											"key": "type",
											"value": "enterprise_manager",
											"type": "string",
											"description": "(Required) user type"
										}
									]
								},
								"description": "Creating User."
							},
							"response": [
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add User to Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e806c9b-5df4-4733-96f0-3c95d010acc4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"add-user",
										":userEmail"
									],
									"variable": [
										{
											"id": "c2fbb391-4c6f-4a69-abf3-ed158db3e276",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "1b96d69f-4f51-4e94-aab7-bd29be917ffa",
											"key": "userEmail",
											"value": "{{email_EnterpriseAdmin}}",
											"type": "string"
										}
									]
								},
								"description": "Add User to Pharmacy."
							},
							"response": [
								{
									"name": "User added to Pharmacy",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy users.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd27c1c6-1fb8-487a-b374-a82c088e91ab",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare EnterpriseAdmin_id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].id).to.eql(parseInt(pm.environment.get(\"EnterpriseAdmin_id\")));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"users"
									],
									"variable": [
										{
											"id": "ec803f8d-8ed0-4452-b7c8-c3d92a7c7175",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove User from Pharmacy.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/remove-user/:userEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"remove-user",
										":userEmail"
									],
									"variable": [
										{
											"id": "d0435da7-5c63-452d-ba5b-19b5e6e42107",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "9795cda9-8fdc-42d9-88bd-495db1718552",
											"key": "userEmail",
											"value": "{{email_EnterpriseAdmin}}",
											"type": "string"
										}
									]
								},
								"description": "Remove User from Pharmacy."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/remove-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"remove-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User removed from pharmacy",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/remove-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"remove-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/remove-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"remove-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy users. List empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "18e75445-e17b-454c-9d12-ef1d4ad524e1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Сart is empty\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var res = (_.isEmpty(jsonData.data.items));\r",
											"    pm.expect(res).to.be.true\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"users"
									],
									"variable": [
										{
											"id": "ec10012a-3c31-4e2d-8899-6bb517ede263",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy product. Required fields Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da9491bd-cbee-4dc2-9d64-aca561dc055a",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"pharmacyPrIdNReq\", pm.response.json().data.item.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 2,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таблетки 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"sacasc234\",\r\n  \"description\": \"Test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": null,\r\n  \"pictureUuids\": [\r\n    \r\n    ],\r\n  \"barCodes\": [\r\n    \r\n  ],\r\n  \"activeSubstances\": [\r\n   \r\n  ],\r\n  \"kfgCodes\": [\r\n    \r\n  ],\r\n  \"nozologyCodes\": [\r\n    \r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "a16e94ce-499c-4a41-9400-d3091807738e",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving Pharmacy products.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "63ad22a3-1320-4a74-8ea4-74962257520a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare global-product_id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNReq\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"products"
									],
									"variable": [
										{
											"id": "282fcae7-851d-4d2d-a067-fec87026a061",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Close Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fc0ff324-1a1d-4867-9154-79ad4a83b093",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"close"
									],
									"variable": [
										{
											"id": "148325ed-2148-4593-afa0-a626102c1997",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Close Pharmacy."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"close"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy closed",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"close"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"close"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy data. isEnabled=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b368af3-6509-41c4-8b70-67d080521744",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"isEnabled=false\", function () {\r",
											"        pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
											"});\r",
											"pm.test(\"regionId=4\", function () {\r",
											"        pm.expect(jsonData.data.item.region.id).to.eql(4);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"id": "42942a8d-123c-4e7f-8b11-8b203f0f44d9",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								},
								"description": "Retrieving Pharmacy data."
							},
							"response": [
								{
									"name": "Pharmacy information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Open Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ac654ab-02a8-465c-98dd-a640f4fbffc1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/open",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"open"
									],
									"variable": [
										{
											"id": "8fbc4d72-2d21-4da9-b10b-28951c60ab3a",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Open Pharmacy."
							},
							"response": [
								{
									"name": "Pharmacy opened",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/open",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"open"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/open",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"open"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/open",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"open"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy data. isEnabled=true",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92128232-180c-419f-b11b-eeb76682ce0e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"        pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"id": "746bcd16-41e5-468d-828b-ffe0987dba12",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								},
								"description": "Retrieving Pharmacy data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy products.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5800c2a1-ee4b-4073-a86f-4c9a88c95ce9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"products"
									],
									"variable": [
										{
											"id": "6c377875-7de7-47a9-9dc3-efecaaacad9e",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test pharmacy-product/{id}",
					"item": [
						{
							"name": "Picture",
							"item": [
								{
									"name": "Uploading_User_image_file.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "59d08e92-88d6-4a45-801d-c7143c1d5942",
												"exec": [
													"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (31).jpg"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "944a7d3b-364f-428e-914c-1733935f5a78",
												"exec": [
													"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (30).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "10f70fb4-8775-4b72-9246-83ff00e88d67",
												"exec": [
													"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (32).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab3e286e-c0f0-4b42-8b61-eaeac3ed421d",
												"exec": [
													"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (33).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "285093cf-bc30-4148-8db7-bbf06dfbc2c7",
												"exec": [
													"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (34).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "584dc8ba-3c8c-424f-b2fe-6c4225d3478a",
												"exec": [
													"//postman.setNextRequest(\"Uploading_User_image_file.\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "69184239-ebb9-4d8d-b2f6-62fe222d8145",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"pharmacyPrId\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": 749,\r\n  \"price\": 61.321166,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true, \r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658406\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 4,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"id": "e50d6423-55ba-4f1d-a4d5-ff0e399395c0",
													"key": "id",
													"value": "{{PharmaIdCr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Creating Pharmacy product.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "91289574-cbff-4e98-bb04-43f063bf0112",
										"exec": [
											"//postman.setNextRequest(\"Uploading_User_image_file.\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "08703b3c-dfc0-41ea-b1db-500e613b5bd6",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"pharmacyPrId\", pm.response.json().data.item.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": 749,\r\n  \"price\": 61.321166,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true, \r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658406\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 4,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "03df164d-38d9-47e1-be36-762a24925083",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy product. NULL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f313b8e-86ac-404f-97b3-4e23b90b62b8",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"pharmacyPrIdNullFull\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"pharmacyGlPrIdNullFull\", pm.response.json().data.item.globalProduct.id);\r",
											"console.log(pm.environment.get(\"pharmacyPrIdNullFull\", ));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Pharmacy product.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c17cd897-7e7b-47b2-b116-605490efb352",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id",
										"disable"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pharmacyPrIdNullFull}}",
											"type": "string",
											"description": "(Required) Pharmacy product id"
										}
									]
								},
								"description": "Disable Pharmacy product."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy disabled",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving pharmacy product. Disable",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f140be0-5d72-45f1-b2cd-07ee2cb548d4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Enabled- false\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
											"});\r",
											"pm.test(\"Enabled- false\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isApproved).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pharmacyPrIdNullFull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Pharmacy product.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fa110a2-4588-413c-884c-cc56a0de1392",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id",
										"enable"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pharmacyPrIdNullFull}}",
											"type": "string",
											"description": "(Required) Pharmacy product id"
										}
									]
								},
								"description": "Enable Pharmacy product."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy enabled",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving pharmacy product. Enable",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "050f12c8-039f-4c2a-b5a5-ad2b0c0d6d91",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Enabled- true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pharmacyPrIdNullFull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy product. Required fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d317d9b3-d8fc-4b77-ad8f-2a56d8947059",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"pharmacyGlPrId\", pm.response.json().data.item.globalProduct.id);\r",
											"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
											"\r",
											"\r",
											"console.log(pm.environment.get(\"date\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "63a321d7-8ddb-45c7-b384-23d36afc2978",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 2.6,\r\n  \"count\": 14,\r\n  \"isEnabled\": false,\r\n  \"isApproved\": false,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таблетки 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"Test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": null,\r\n  \"pictureUuids\": [\r\n    \r\n    ],\r\n  \"barCodes\": [\r\n    \r\n  ],\r\n  \"activeSubstances\": [\r\n   \r\n  ],\r\n  \"kfgCodes\": [\r\n    \r\n  ],\r\n  \"nozologyCodes\": [\r\n    \r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "92dcd1f1-c69e-4a74-92f6-2a5c33915210",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving pharmacy product. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b86628d-c520-4ec1-814a-0d72dc4f1a8f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare id pharmacyGlPrId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.globalProduct.id).to.eql(parseInt(pm.environment.get(\"pharmacyGlPrId\")));\r",
											"});\r",
											"pm.test(\"Enabled- false\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
											"});\r",
											"pm.test(\"Approved- false\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isApproved).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving collection of Pharmacy with products by Global product.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f4255c6-20fd-498e-960c-ca5712464a64",
										"exec": [
											"pm.environment.set(\"pharmacyProductId\", pm.response.json().data.items[0].pharmacyProducts[0].pharmacyProductId);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"console.log (pm.environment.get(\"pharmacyProductId\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": "Bearer_eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTkyMjg0MjMsImV4cCI6MTYwMTgyMDQyMywicm9sZXMiOlsiUk9MRV9ET0NUT1IiLCJST0xFX1VTRVIiXSwidXNlcm5hbWUiOiJNYXJjb3NfUmF0aEBnbWFpbC5jb20ifQ.dHO_W1rTYWspVKiN1u2bMp0vG6G4cuYYylA0Crmnuxw-VfB8GNR1rscu59LPHJ1aMGwu7EyS1-DfIFtXF12Gnspk0mvvIH9QXmzNxzm696tLnjgEXDD2UZDOxuLtSocnFFq9-CZ0IO8OT8eoqExQr4cLxWstTPjun8KjQsvnpFniVGd0Rnm_ZtWXzqNNZWlhg6k2N8xzY4FbRqqYcxwVhMAzSJoTfFdasjOL1LvBDaC2gi2qH69DjAcbbn2wsFOFJViFbfv9ilQblAC3AsgVD3sTOld5K1RkpKEKhLuVjG66tM7LjYyhXJAOKbRUUirF5rn8FSrMiUg1SljiwGqopnbAlE3g_GBH9MozjbgMcjjNC6H4EZe3aAHL2ivoz0BNHvw-EgAmy1h4ufqcb1eBPm-f5WPuy25HAoXJky61AGtE72VK6Jv-enFCrexX5HBZO-ojMZTEkxEu0vh6y39eh_PIv7pGzWCCoV_eEH2HlXbAXefkeZ5YI_-_prncuBe0m5qvaJtmixv1b1poJve-k0P2HF5GxQ2yiVTtSGlZW7RJcZTgrVhAJahx1smusmolxE7DldgGZZGRpYOB2C3x7EZxBLyxkrp4B1uQCkB_l4INUwiCDXvrMYD1q4-BEo_fxywF0GHktZdlZHIi_ATxM-a_qYo3CMs2-rNELjfcZJw",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/public/pharmacies/global-product/:id/pharmacy-products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"public",
										"pharmacies",
										"global-product",
										":id",
										"pharmacy-products"
									],
									"query": [
										{
											"key": "regionId",
											"value": "62",
											"description": "Region id",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "1",
											"description": "Page items count",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "483b4925-8420-4525-a895-e116df1f8966",
											"key": "id",
											"value": "749",
											"type": "string"
										}
									]
								},
								"description": "Retrieving collection of Pharmacy with products by Global product"
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/pharmacies/global-product/:id/pharmacy-products?regionId=<integer>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"pharmacies",
												"global-product",
												":id",
												"pharmacy-products"
											],
											"query": [
												{
													"key": "regionId",
													"value": "<integer>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy product list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/pharmacies/global-product/:id/pharmacy-products?regionId=<integer>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"pharmacies",
												"global-product",
												":id",
												"pharmacy-products"
											],
											"query": [
												{
													"key": "regionId",
													"value": "<integer>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/pharmacies/global-product/:id/pharmacy-products?regionId=<integer>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"pharmacies",
												"global-product",
												":id",
												"pharmacy-products"
											],
											"query": [
												{
													"key": "regionId",
													"value": "<integer>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Pharmacy product. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b77fead6-55d5-4a2f-988f-be8e9a7c04c7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": {{global-product_id}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕП\",\r\n  \"engName\": \"DEPAKI\",\r\n  \"releaseForm\": \"таб. пролонгир.100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 10,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "dd717a62-e111-4879-bdc8-09b42ba79c8d",
											"key": "id",
											"value": "{{pharmacyPrId}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Pharmacy product. Required fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9eee7bda-1669-478a-99aa-e4b1ee1bbd39",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1ec451eb-2940-4be2-ace2-8fb43ab8274f",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": {{pharmacyGlPrId}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"RusNameTest\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таблетки 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"Test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": null,\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \r\n  ],\r\n  \"activeSubstances\": [\r\n   \r\n  ],\r\n  \"kfgCodes\": [\r\n    \r\n  ],\r\n  \"nozologyCodes\": [\r\n    \r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "d1bd97ce-aeac-4518-9484-b0ca8f51ba07",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Pharmacy product. Null",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78d593df-3338-410d-bb63-21fddb0d8515",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dd6c6619-6ee2-43cb-a19f-eafdff876577",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 10,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "3773a010-571f-4626-96a1-a14ca00eb795",
											"key": "id",
											"value": "{{pharmacyPrIdNullFull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Pharmacy product. Enabled/aproved false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "04b1a593-fbc0-47e0-a234-84767a37c011",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0a701634-937f-4f9e-b678-5d51754a6317",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": {{global-product_id}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 15,\r\n  \"isEnabled\": false,\r\n  \"isApproved\": false,\r\n  \"rusName\": \"ДЕП\",\r\n  \"engName\": \"DEPAKI\",\r\n  \"releaseForm\": \"таб. пролонгир.100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 12,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pharmacyPrId}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving pharmacy product. Disable Pharmacy product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81d5aae4-c869-4240-b266-a903fb69b98a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Enabled- false\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
											"});\r",
											"pm.test(\"Enabled- false\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isApproved).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pharmacyPrId}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy product. Required fields Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6f53256-6712-4ae7-85b9-a8c7963f638f",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"pharmacyGlPrId\", pm.response.json().data.item.globalProduct.id);\r",
											"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
											"\r",
											"\r",
											"console.log(pm.environment.get(\"date\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7ede194d-4c62-41ec-a6e3-24f3f479d175",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 2.6,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таблетки 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"Test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": null,\r\n  \"pictureUuids\": [\r\n    \r\n    ],\r\n  \"barCodes\": [\r\n    \r\n  ],\r\n  \"activeSubstances\": [\r\n   \r\n  ],\r\n  \"kfgCodes\": [\r\n    \r\n  ],\r\n  \"nozologyCodes\": [\r\n    \r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "aa813ad0-5a29-4568-b1ef-08866a4b3b4a",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test pharmacy-product/{id} Copy",
					"item": [
						{
							"name": "Picture",
							"item": [
								{
									"name": "Uploading_User_image_file.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1fb7f4bc-665d-43ae-9a71-979677421147",
												"exec": [
													"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (31).jpg"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e0592ab4-5a70-4dd9-b35b-f95cfc48e672",
												"exec": [
													"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (30).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d26e919c-7398-44d5-a631-307116344052",
												"exec": [
													"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (32).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e74c6a0-ad8b-4413-b4a9-a1bff51ba30d",
												"exec": [
													"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (33).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5a797140-94a6-446c-b991-2590772fedd5",
												"exec": [
													"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (34).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c083e15b-664c-4323-8fce-55afd988c1ef",
												"exec": [
													"//postman.setNextRequest(\"Uploading_User_image_file.\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6945c5b4-5346-4e75-91fa-476158b70fe0",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"pharmacyPrId\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": 749,\r\n  \"price\": 61.321166,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true, \r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658406\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 4,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"id": "e50d6423-55ba-4f1d-a4d5-ff0e399395c0",
													"key": "id",
													"value": "{{PharmaIdCr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Disable Pharmacy product.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id",
										"disable"
									],
									"variable": [
										{
											"id": "12609256-887c-497a-9bbf-cdeb781b3774",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string",
											"description": "(Required) Pharmacy product id"
										}
									]
								},
								"description": "Disable Pharmacy product."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy disabled",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving pharmacy product. Disable",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3797bdb-025e-482f-89cc-4078f9abedc4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Enabled- false\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "10daac11-d88c-4723-a494-6f106a55dcfa",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Pharmacy product.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e125ca53-5886-4c9f-8789-c7f1d0ae2dc5",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id",
										"enable"
									],
									"variable": [
										{
											"id": "bc40d989-051a-43cc-8e08-52984d06d45a",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string",
											"description": "(Required) Pharmacy product id"
										}
									]
								},
								"description": "Enable Pharmacy product."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy enabled",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving pharmacy product. Enable",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "957c7d1f-983a-413f-9a53-5cc313e0e5c9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Enabled- true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "637edcec-1327-48ac-8f65-5ecb40abffd1",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving pharmacy product. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "de7aa972-cc1f-4acb-960f-b551925b816e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare id globalProduct=749\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.globalProduct.id).to.eql(parseInt(pm.environment.get(\"global-product_id\")));\r",
											"});\r",
											"pm.test(\"Enabled- false\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
											"});\r",
											"pm.test(\"Approved- false\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isApproved).to.eql(false);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "f6dd3bbb-261e-44ae-8462-5d3d811a7752",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving collection of Pharmacy with products by Global product.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7748fe73-ab9d-4ddd-9a1a-b12018961fbb",
										"exec": [
											"pm.environment.set(\"pharmacyProductId\", pm.response.json().data.items[0].pharmacyProducts[0].pharmacyProductId);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"console.log (pm.environment.get(\"pharmacyProductId\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": "Bearer_eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE1OTkyMjg0MjMsImV4cCI6MTYwMTgyMDQyMywicm9sZXMiOlsiUk9MRV9ET0NUT1IiLCJST0xFX1VTRVIiXSwidXNlcm5hbWUiOiJNYXJjb3NfUmF0aEBnbWFpbC5jb20ifQ.dHO_W1rTYWspVKiN1u2bMp0vG6G4cuYYylA0Crmnuxw-VfB8GNR1rscu59LPHJ1aMGwu7EyS1-DfIFtXF12Gnspk0mvvIH9QXmzNxzm696tLnjgEXDD2UZDOxuLtSocnFFq9-CZ0IO8OT8eoqExQr4cLxWstTPjun8KjQsvnpFniVGd0Rnm_ZtWXzqNNZWlhg6k2N8xzY4FbRqqYcxwVhMAzSJoTfFdasjOL1LvBDaC2gi2qH69DjAcbbn2wsFOFJViFbfv9ilQblAC3AsgVD3sTOld5K1RkpKEKhLuVjG66tM7LjYyhXJAOKbRUUirF5rn8FSrMiUg1SljiwGqopnbAlE3g_GBH9MozjbgMcjjNC6H4EZe3aAHL2ivoz0BNHvw-EgAmy1h4ufqcb1eBPm-f5WPuy25HAoXJky61AGtE72VK6Jv-enFCrexX5HBZO-ojMZTEkxEu0vh6y39eh_PIv7pGzWCCoV_eEH2HlXbAXefkeZ5YI_-_prncuBe0m5qvaJtmixv1b1poJve-k0P2HF5GxQ2yiVTtSGlZW7RJcZTgrVhAJahx1smusmolxE7DldgGZZGRpYOB2C3x7EZxBLyxkrp4B1uQCkB_l4INUwiCDXvrMYD1q4-BEo_fxywF0GHktZdlZHIi_ATxM-a_qYo3CMs2-rNELjfcZJw",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/public/pharmacies/global-product/:id/pharmacy-products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"public",
										"pharmacies",
										"global-product",
										":id",
										"pharmacy-products"
									],
									"query": [
										{
											"key": "regionId",
											"value": "62",
											"description": "Region id",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "1",
											"description": "Page items count",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "6d2bbca2-5a39-489d-a50c-aeed7f0b6013",
											"key": "id",
											"value": "749",
											"type": "string"
										}
									]
								},
								"description": "Retrieving collection of Pharmacy with products by Global product"
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/pharmacies/global-product/:id/pharmacy-products?regionId=<integer>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"pharmacies",
												"global-product",
												":id",
												"pharmacy-products"
											],
											"query": [
												{
													"key": "regionId",
													"value": "<integer>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy product list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/pharmacies/global-product/:id/pharmacy-products?regionId=<integer>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"pharmacies",
												"global-product",
												":id",
												"pharmacy-products"
											],
											"query": [
												{
													"key": "regionId",
													"value": "<integer>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/pharmacies/global-product/:id/pharmacy-products?regionId=<integer>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"pharmacies",
												"global-product",
												":id",
												"pharmacy-products"
											],
											"query": [
												{
													"key": "regionId",
													"value": "<integer>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Pharmacy product.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cbda8502-9f66-420c-b733-bcf711187bfc",
										"exec": [
											"//postman.setNextRequest(\"Uploading_User_image_file.\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "069406c5-210e-43d9-945b-ce5475089b03",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"pharmacyPrId\", pm.response.json().data.item.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": 749,\r\n  \"price\": 61.321166,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true, \r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658406\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 4,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "e6c6cd39-5fa4-4bd0-baa8-6a6503b6d683",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Pharmacy product. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a97f5b57-28cb-4823-a16c-5a19008c179a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": {{global-product_id}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕП\",\r\n  \"engName\": \"DEPAKI\",\r\n  \"releaseForm\": \"таб. пролонгир.100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 10,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "353958db-3167-448b-be80-3260441201c4",
											"key": "id",
											"value": "{{pharmacyPrId}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy product. NULL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7e4a2cf-77ed-4a61-b028-509b61bd9022",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"pharmacyPrIdNullFull\", pm.response.json().data.item.id);\r",
											"console.log(pm.environment.get(\"pharmacyPrIdNullFull\", ));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "44ce523e-2ef5-480d-8c5f-e13adf000613",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy product. Required fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fae2e76-e285-436c-ac6b-35631fc0ac5d",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"pharmacyGlPrId\", pm.response.json().data.item.globalProduct.id);\r",
											"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
											"\r",
											"\r",
											"console.log(pm.environment.get(\"date\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4914232d-61fa-4088-892d-cdc1a6e1f9aa",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 2.6,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таблетки 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"Test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": null,\r\n  \"pictureUuids\": [\r\n    \r\n    ],\r\n  \"barCodes\": [\r\n    \r\n  ],\r\n  \"activeSubstances\": [\r\n   \r\n  ],\r\n  \"kfgCodes\": [\r\n    \r\n  ],\r\n  \"nozologyCodes\": [\r\n    \r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "51a72b14-a99e-491a-acfd-6ea5017966a6",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Pharmacy product. Required fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c8fc6e7-1935-4114-a37e-42421c752d23",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aff10b2f-9d62-4c33-ad2a-bc90cc7bc714",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": {{pharmacyGlPrId}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"RusNameTest\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таблетки 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"Test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": null,\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \r\n  ],\r\n  \"activeSubstances\": [\r\n   \r\n  ],\r\n  \"kfgCodes\": [\r\n    \r\n  ],\r\n  \"nozologyCodes\": [\r\n    \r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "d3e4941e-499c-4231-97db-e57a4989d2aa",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Pharmacy product. Null",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b69cb242-596c-48b4-8e25-84ebe02cbd54",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "412697c4-1704-43d5-b89b-48bd9e7f7520",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 10,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "f00c2b7e-841f-4da8-a3e6-4727c2f2426a",
											"key": "id",
											"value": "{{pharmacyPrIdNullFull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Pharmacy product. Enabled/aproved false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84473fb2-fc56-4c7f-a606-f176d8cafb72",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "acac0748-cafb-4107-a348-3422548e4361",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": {{global-product_id}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 15,\r\n  \"isEnabled\": false,\r\n  \"isApproved\": false,\r\n  \"rusName\": \"ДЕП\",\r\n  \"engName\": \"DEPAKI\",\r\n  \"releaseForm\": \"таб. пролонгир.100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 12,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "e02dea71-8764-4b28-98f6-6dd60bb761a8",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy product. Required fields Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d84d58de-1ccf-42f5-b438-e528040b2e85",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"pharmacyGlPrId\", pm.response.json().data.item.globalProduct.id);\r",
											"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
											"\r",
											"\r",
											"console.log(pm.environment.get(\"date\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "79516bcc-a9af-4281-9235-4ee378fd3f51",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 2.6,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таблетки 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"Test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": null,\r\n  \"pictureUuids\": [\r\n    \r\n    ],\r\n  \"barCodes\": [\r\n    \r\n  ],\r\n  \"activeSubstances\": [\r\n   \r\n  ],\r\n  \"kfgCodes\": [\r\n    \r\n  ],\r\n  \"nozologyCodes\": [\r\n    \r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "2fa12e91-2621-41af-a44f-2c63d20abb2c",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test customer wishlist",
					"item": [
						{
							"name": "Customer registration.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36984074-44a3-4ac3-8bed-b9485d54bf0b",
										"exec": [
											"pm.environment.set(\"phone_customer\", pm.response.json().data.item.phone);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b2642410-8e84-433e-9fd5-3847287897e0",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"registration"
									]
								},
								"description": "Creating Customer, generating code for it and sending sms."
							},
							"response": [
								{
									"name": "Customer created and sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer authentication.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a677b0b-29bf-428d-a3f9-42afbdabcbde",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{phone_customer}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"auth"
									]
								},
								"description": "Generating code for Customer and sending sms."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer login. Phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a20e5609-5e1a-4519-85a5-a1336bd2e305",
										"exec": [
											"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
											"pm.environment.set(\"uuid_customer\", pm.response.json().data.item.uuid);\r",
											"pm.environment.set(\"refreshToken_customer\", pm.response.json().data.refreshToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"login"
									]
								},
								"description": "Customer login."
							},
							"response": [
								{
									"name": "Returns tokens",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Uploading Customer image file.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb19fd58-8807-4c9f-81c3-b1dc23b9b92a",
										"exec": [
											"pm.environment.set(\"uuidImageCustomer\", pm.response.json().data.item.uuid);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "file (maxSize <= 10Mb, mimeTypes - image/png,image/jpg,image/jpeg)",
											"type": "file",
											"src": "/D:/ProjecTs/Pharma/IMG Pharma/wow.png"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"image"
									]
								},
								"description": "Uploading Customer image file."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"image"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if access denied",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"image"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "File created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"image"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updating Customer data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36e3dff5-e593-4c2f-95f9-1af712ec40ce",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"avatarUuid\":\"{{uuidImageCustomer}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								},
								"description": "Updating Customer data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"avatarUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer edit self information",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"avatarUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving self Customer data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5dd33b98-38b9-4e42-9fd8-d30bbaa2f5a4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare uuid avatar\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"uuidImageCustomer\"));\r",
											"});\r",
											"pm.test(\"Compare uuid customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.uuid).to.eql(pm.environment.get(\"uuid_customer\"));\r",
											"});\r",
											"pm.test(\"Compare phone customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.phone).to.eql(pm.environment.get(\"phone_customer\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								},
								"description": "Retrieving self Customer data."
							},
							"response": [
								{
									"name": "Customer self information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Adding global product to Customer wishlist.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19e55588-1788-4188-9051-bb0aa7cbcc3a",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/wishlist/global-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"wishlist",
										"global-product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pharmacyGlPrId}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving Customer wishlist.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2fa69a5f-5a5c-4b62-bb2d-e9dc27e5fc76",
										"exec": [
											"pm.test(\"Compare global-product_id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].globalProductId).to.eql(parseInt(pm.environment.get(\"pharmacyGlPrId\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/wishlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"wishlist"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "10",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Removing global product from Customer wishlist.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1dba984e-7b48-4926-a5d2-42412d2cb020",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/wishlist/global-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"wishlist",
										"global-product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pharmacyGlPrId}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving Customer wishlist. 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "faf9d3ed-db84-4c05-a2d7-f10135c18977",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Сart is empty\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var res = (_.isEmpty(jsonData.data.items));\r",
											"    pm.expect(res).to.be.true\r",
											"})\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/wishlist",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"wishlist"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "10",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer logout.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b7a5a46-fe7f-4aa4-b1cd-d3142eb662ec",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refreshToken\": \"{{refreshToken_customer}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"logout"
									]
								},
								"description": "Customer logout."
							},
							"response": [
								{
									"name": "Customer logout",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"logout"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"logout"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test add to cart",
					"item": [
						{
							"name": "Customer registration.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f560658-593d-4d39-a371-c2eb98a5cfdf",
										"exec": [
											"pm.environment.set(\"phone\", pm.response.json().data.item.phone);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7dab2da9-848f-48ad-a446-d473985c8801",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"registration"
									]
								},
								"description": "Creating Customer, generating code for it and sending sms."
							},
							"response": [
								{
									"name": "Customer created and sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer authentication.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf7933a9-caa7-480d-becd-281be9eb3b44",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{phone}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"auth"
									]
								},
								"description": "Generating code for Customer and sending sms."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer login. Phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "818198cc-cdc7-4594-a2af-2fbd689ddba0",
										"exec": [
											"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
											"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
											"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"login"
									]
								},
								"description": "Customer login."
							},
							"response": [
								{
									"name": "Returns tokens",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updating Customer region.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "854807bf-f1fd-4481-9b8b-204aeded782d",
										"exec": [
											"pm.environment.set(\"random_regionId\", _.random(3, 20));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "13370aa2-be4f-419e-9139-504c8a110e21",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare id region\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.region.id).to.eql(pm.environment.get(\"random_regionId\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"regionId\": {{random_regionId}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer/region",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer",
										"region"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving self Customer data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d9ee808-d2f1-4234-bee5-b88b75e509d0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare id region\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.region.id).to.eql(pm.environment.get(\"random_regionId\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								},
								"description": "Retrieving self Customer data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer self information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Adding pharmacy product to Customer product cart.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62506ba6-a0a8-494c-9bdd-a6ff9b196c5b",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"product-cart",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "1a4edf6c-c249-4c17-b341-3216a73ba625",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string",
											"description": "(Required) Pharmacy product id"
										}
									]
								},
								"description": "Adding pharmacy product to Customer product cart."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"pharmacy-product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy product added to Customer product cart",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"pharmacy-product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"pharmacy-product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Customer product cart.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31344452-b0ff-488c-ac59-1a64228aa84b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare id pharmacyPrIdNull\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].pharmacyProducts[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});\r",
											"\r",
											"pm.test(\"Count eql 1\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].pharmacyProducts[0].productCount).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"productCartId\", pm.response.json().data.items[0].pharmacyProducts[0].productCartPharmacyProduct.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/product-cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"product-cart"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Page items count",
											"disabled": true
										},
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Retrieving Customer product cart."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer wishlist",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updating product cart pharmacy product count.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7b57333f-673e-4447-8f47-58ac7a541b9f",
										"exec": [
											"pm.environment.set(\"random_count\", _.random(1, 12));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9e2e35c8-6eae-4ecd-ad1f-cfb3d0211e6e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"console.log(pm.environment.get(\"random_count\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"count\": {{random_count}}\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/product-cart/product-cart-pharmacy-product/:id/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"product-cart",
										"product-cart-pharmacy-product",
										":id",
										"count"
									],
									"variable": [
										{
											"id": "e3225259-cecf-43b6-97cc-255a57b71c8b",
											"key": "id",
											"value": "{{productCartId}}",
											"type": "string",
											"description": "(Required) Product cart pharmacy product id"
										}
									]
								},
								"description": "Updating product cart pharmacy product count."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"count\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/product-cart-pharmacy-product/:id/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"product-cart-pharmacy-product",
												":id",
												"count"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"count\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/product-cart-pharmacy-product/:id/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"product-cart-pharmacy-product",
												":id",
												"count"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Product cart pharmacy product count updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"count\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/product-cart-pharmacy-product/:id/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"product-cart-pharmacy-product",
												":id",
												"count"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Customer product cart 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9acb8b7-d4ae-40c6-b962-0e35554f547c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare count\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].pharmacyProducts[0].productCount).to.eql(parseInt(pm.environment.get(\"random_count\")));\r",
											"});\r",
											"pm.test(\"Compare id pharmacyPrIdNull\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].pharmacyProducts[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/product-cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"product-cart"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving Customer product cart."
							},
							"response": [
								{
									"name": "Customer wishlist",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removing pharmacy product from Customer product cart.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b81f083-87b0-4742-8d4e-744af0ddc9fb",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"product-cart",
										"pharmacy-product",
										":id"
									],
									"variable": [
										{
											"id": "e9f7dfed-2be4-43e1-9d64-fc06e2af33fa",
											"key": "id",
											"value": "{{pharmacyPrIdNull}}",
											"type": "string",
											"description": "(Required) Pharmacy product id"
										}
									]
								},
								"description": "Removing pharmacy product from Customer product cart."
							},
							"response": [
								{
									"name": "Pharmacy product removed from Customer product cart.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"pharmacy-product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"pharmacy-product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"pharmacy-product",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Customer product cart 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbf63667-f241-41f8-b6e9-671ad8a15d24",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Сart is empty\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var res = (_.isEmpty(jsonData.data.items));\r",
											"    pm.expect(res).to.be.true\r",
											"})\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/product-cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"product-cart"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving Customer product cart."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer wishlist",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test order",
					"item": [
						{
							"name": "Creating Order-pickup.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88e39cda-af3a-4336-9fda-6fa0f971a60e",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"orderIdPic\", pm.response.json().data.item.orderId);\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Compare pharmacyPrIdNull\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductOrderDataList[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect(parseInt((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount))).to.eql(parseInt(jsonData.data.item.pharmacyProductsTotalPrice));\r",
											"});\r",
											"pm.environment.set(\"Order_cost\", pm.response.json().data.item.pharmacyProductsTotalPrice);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": {{PharmaIdCr}},\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"pickup\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"addressCreateData\": null \n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.4354353,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Order-pickup. Error 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9d277c4-e2b5-4cfd-9d64-0fa54ab32f76",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Message done\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Your data is incorrect. Please, check your data\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": {{PharmaIdCr}},\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"pickup\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"addressCreateData\": null \n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    \n  ],\n  \"deliveryPrice\": 50\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Customer orders.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3bc27d20-d8c2-412a-a0ff-ed86858c61d3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Compare orderId\", function () {\r",
											"    pm.expect(jsonData.data.items[0].orderId).to.eql(parseInt(pm.environment.get(\"orderIdPic\")));\r",
											"});\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.items[0].status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Delivery=pickup\", function () {\r",
											"    pm.expect(jsonData.data.items[0].deliveryInfo.type).to.eql(\"pickup\");\r",
											"});\r",
											"pm.test(\"Order cost\", function () {\r",
											"   pm.expect(jsonData.data.items[0].pharmacyProductsTotalPrice).to.eql(parseFloat(pm.environment.get(\"Order_cost\")));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"orders"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>",
											"description": "Order status",
											"disabled": true
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of Customer orders."
							},
							"response": [
								{
									"name": "Customer order list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/orders?status=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"orders"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/orders?status=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"orders"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/orders?status=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"orders"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Customer order card by order.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "084e6f14-f278-410a-84a1-a2af72801496",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Compare orderId\", function () {\r",
											"    pm.expect(jsonData.data.item.orderId).to.eql(parseInt(pm.environment.get(\"orderIdPic\")));\r",
											"});\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Delivery=pickup\", function () {\r",
											"    pm.expect(jsonData.data.item.deliveryInfo.type).to.eql(\"pickup\");\r",
											"});\r",
											"pm.test(\"Order cost\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductsTotalPrice).to.eql(parseFloat(pm.environment.get(\"Order_cost\")));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order/:id/order-card",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order",
										":id",
										"order-card"
									],
									"variable": [
										{
											"id": "120f05de-d804-42d5-a4e4-7a489bfbeef5",
											"key": "id",
											"value": "{{orderIdPic}}",
											"type": "string",
											"description": "(Required) Order id"
										}
									]
								},
								"description": "Retrieving Customer order card by order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order card",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of statuses by delivery type. pickup",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d4763b07-b8a4-4b58-968a-8c0e6863807b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=pickup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										"statuses"
									],
									"query": [
										{
											"key": "delivery_type",
											"value": "pickup",
											"description": "Order delivery type"
										},
										{
											"key": "page",
											"value": "",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of statuses by delivery type."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												"statuses"
											],
											"query": [
												{
													"key": "delivery_type",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												"statuses"
											],
											"query": [
												{
													"key": "delivery_type",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												"statuses"
											],
											"query": [
												{
													"key": "delivery_type",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. Pickup",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f31e9c43-2500-4099-aec6-189fc6a60424",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderIdPic}},\n  \"status\": \"new\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n   \"type\": \"pickup\",\n    \"comment\": \"{{$randomPhrase}}\",\n    \"addressCreateData\": null \n  },\n  \"paymentType\": \"string\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "40bd8d84-1457-43bf-aee7-74b89a96f2f5",
											"key": "id",
											"value": "{{orderIdPic}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Canceling Order. Pickup",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2696c929-695a-423f-93da-3fe1c410ea75",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order",
										":id",
										"cancel"
									],
									"variable": [
										{
											"id": "47426786-289e-41e0-8e81-c7fea6c3c68b",
											"key": "id",
											"value": "{{orderIdPic}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Order-pickup. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dee013f0-a517-4e8a-a9f9-6f8862e90b0f",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"orderIdPic\", pm.response.json().data.item.orderId);\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Compare pharmacyPrIdNull\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductOrderDataList[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect(parseInt((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount))).to.eql(parseInt(jsonData.data.item.pharmacyProductsTotalPrice));\r",
											"});\r",
											"pm.environment.set(\"Order_cost\", pm.response.json().data.item.pharmacyProductsTotalPrice);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": {{PharmaIdCr}},\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"pickup\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"addressCreateData\": null \n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.4354353,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. Delivery_address Status in_progress",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8773438-5c01-46a3-b2e7-1839e2c0bfba",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare status in_progress\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"in_progress\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderIdPic}},\n  \"status\": \"in_progress\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n    \"type\": \"pickup\",\n    \"comment\": \"{{$randomPhrase}}\",\n    \"addressCreateData\": null \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "88676ff5-c146-4d92-8b39-c5b1efeba8e3",
											"key": "id",
											"value": "{{orderIdPic}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. PickUp Status ready",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d8cac5b-85a6-46c0-807d-63853bc24ffd",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare status ready\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"ready\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderIdPic}},\n  \"status\": \"ready\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n    \"type\": \"pickup\",\n    \"comment\": \"{{$randomPhrase}}\",\n    \"addressCreateData\": null \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "a7dcfd4c-6325-434d-8322-b018b2cff2ab",
											"key": "id",
											"value": "{{orderIdPic}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. PickUp Status done",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "791cedfb-cda8-4523-8c07-e5f801292854",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare status done\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"done\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderIdPic}},\n  \"status\": \"done\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n    \"type\": \"pickup\",\n    \"comment\": \"{{$randomPhrase}}\",\n    \"addressCreateData\": null \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "d3d83557-198d-48f6-a623-1991e653d760",
											"key": "id",
											"value": "{{orderIdPic}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. PickUp Status canceled 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0106234b-9ad8-470d-b8f2-17afbc47b784",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderIdPic}},\n  \"status\": \"canceled\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n    \"type\": \"pickup\",\n    \"comment\": \"{{$randomPhrase}}\",\n    \"addressCreateData\": null \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "86d783e6-6d2d-4d80-8754-a3a7c9afa0c8",
											"key": "id",
											"value": "{{orderIdPic}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Order-pickup. Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29ce25f4-8f60-48ff-8fad-01ab0bb962b8",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"orderIdPic\", pm.response.json().data.item.orderId);\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Compare pharmacyPrIdNull\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductOrderDataList[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect(parseInt((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount))).to.eql(parseInt(jsonData.data.item.pharmacyProductsTotalPrice));\r",
											"});\r",
											"pm.environment.set(\"Order_cost\", pm.response.json().data.item.pharmacyProductsTotalPrice);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": {{PharmaIdCr}},\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"pickup\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"addressCreateData\": null \n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.4354353,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. PickUp Status canceled Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2eedd806-97f8-4086-a9ed-d55af3569ed3",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare status canceled\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"canceled\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderIdPic}},\n  \"status\": \"canceled\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n    \"type\": \"pickup\",\n    \"comment\": \"{{$randomPhrase}}\",\n    \"addressCreateData\": null \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "24264680-6d9e-4b06-910e-53c97ab5e3a2",
											"key": "id",
											"value": "{{orderIdPic}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Order- delivery_adress",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b6f3809-372b-4acb-840a-dfa6406327ea",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"orderIdDel\", pm.response.json().data.item.orderId);\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Compare pharmacyPrIdNull\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductOrderDataList[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount)).to.eql(jsonData.data.item.pharmacyProductsTotalPrice);\r",
											"});\r",
											"pm.environment.set(\"Order_cost\", pm.response.json().data.item.pharmacyProductsTotalPrice);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": {{PharmaIdCr}},\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"delivery_address\",\n     \"comment\": \"{{$randomPhrase}}\",\n     \"address\": {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     }\n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 50\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Customer orders. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "27b3af66-4af4-4edf-855f-8863dd59b46a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Compare orderId\", function () {\r",
											"    pm.expect(jsonData.data.items[0].orderId).to.eql(parseInt(pm.environment.get(\"orderIdDel\")));\r",
											"});\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.items[0].status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Delivery=pickup\", function () {\r",
											"    pm.expect(jsonData.data.items[0].deliveryInfo.type).to.eql(\"delivery_address\");\r",
											"});\r",
											"pm.test(\"Order cost\", function () {\r",
											"   pm.expect(jsonData.data.items[0].pharmacyProductsTotalPrice).to.eql(parseFloat(pm.environment.get(\"Order_cost\")));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"orders"
									],
									"query": [
										{
											"key": "status",
											"value": "<string>",
											"description": "Order status",
											"disabled": true
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of Customer orders."
							},
							"response": [
								{
									"name": "Customer order list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/orders?status=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"orders"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/orders?status=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"orders"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/orders?status=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"orders"
											],
											"query": [
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Customer order card by order. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e385d862-b02e-4434-bf1a-6453645c8a16",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Compare orderId\", function () {\r",
											"    pm.expect(jsonData.data.item.orderId).to.eql(parseInt(pm.environment.get(\"orderIdDel\")));\r",
											"});\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Delivery=pickup\", function () {\r",
											"    pm.expect(jsonData.data.item.deliveryInfo.type).to.eql(\"delivery_address\");\r",
											"});\r",
											"pm.test(\"Order cost\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductsTotalPrice).to.eql(parseFloat(pm.environment.get(\"Order_cost\")));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order/:id/order-card",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order",
										":id",
										"order-card"
									],
									"variable": [
										{
											"id": "ca569a7e-31e3-4123-9d1d-48a0017891d4",
											"key": "id",
											"value": "{{orderIdDel}}",
											"type": "string",
											"description": "(Required) Order id"
										}
									]
								},
								"description": "Retrieving Customer order card by order."
							},
							"response": [
								{
									"name": "Order card",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. Delivery_address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db6388fb-7af4-41e6-adf2-228a12ccdbba",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderIdDel}},\n  \"status\": \"new\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n   \"type\": \"delivery_address\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"address\":  {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     } \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 41\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "3f943043-2385-4134-b0ed-56bdd838b51e",
											"key": "id",
											"value": "{{orderIdDel}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of orders. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "689fca4c-f4d9-481e-83e4-1da478d52459",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"orders"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "order[total_price]",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "3",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_progress",
											"disabled": true
										},
										{
											"key": "status",
											"value": "done",
											"disabled": true
										},
										{
											"key": "status",
											"value": "canceled",
											"disabled": true
										},
										{
											"key": "status",
											"value": "new",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ready",
											"disabled": true
										},
										{
											"key": "status",
											"value": "to_delivery",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_delivery",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "delivery_address",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "pickup",
											"disabled": true
										},
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving order card by customer order. Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id/order-card?status=in_progress&delivery_type=delivery_address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id",
										"order-card"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[total_price]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_progress"
										},
										{
											"key": "status",
											"value": "done",
											"disabled": true
										},
										{
											"key": "status",
											"value": "canceled",
											"disabled": true
										},
										{
											"key": "status",
											"value": "new",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ready",
											"disabled": true
										},
										{
											"key": "status",
											"value": "to_delivery",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_delivery",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "delivery_address"
										},
										{
											"key": "delivery_type",
											"value": "pickup",
											"disabled": true
										},
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "9f5d491c-fb11-412f-8340-4c0f2339fa67",
											"key": "id",
											"value": "8",
											"type": "string",
											"description": "(Required) Order id"
										}
									]
								},
								"description": "Retrieving order card by customer order."
							},
							"response": [
								{
									"name": "Order card",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of statuses by delivery type. delivery_address",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=delivery_address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										"statuses"
									],
									"query": [
										{
											"key": "delivery_type",
											"value": "puckup",
											"description": "Order delivery type",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "delivery_address",
											"description": "Order delivery type"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of statuses by delivery type."
							},
							"response": [
								{
									"name": "Order list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												"statuses"
											],
											"query": [
												{
													"key": "delivery_type",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												"statuses"
											],
											"query": [
												{
													"key": "delivery_type",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												"statuses"
											],
											"query": [
												{
													"key": "delivery_type",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Canceling Order.delivery_adress",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d8e370c-19c7-4bfc-978b-37495ac1181a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order",
										":id",
										"cancel"
									],
									"variable": [
										{
											"id": "77e630ff-2b72-41c9-9a3d-6313fb8b64fd",
											"key": "id",
											"value": "{{orderIdDel}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Order- delivery_adress Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb0fb4f6-e2c2-402e-a438-f501899f2ed9",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"orderId\", pm.response.json().data.item.orderId);\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Compare pharmacyPrIdNull\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductOrderDataList[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount)).to.eql(jsonData.data.item.pharmacyProductsTotalPrice);\r",
											"});\r",
											"pm.environment.set(\"Order_cost\", pm.response.json().data.item.pharmacyProductsTotalPrice);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": {{PharmaIdCr}},\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"delivery_address\",\n     \"comment\": \"{{$randomPhrase}}\",\n     \"address\": {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     }\n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 50\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. PickUp Status in_progress",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c25737e9-d176-4145-9c1d-3890c3aa7b4f",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare status in_progress\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"in_progress\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderId}},\n  \"status\": \"in_progress\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n   \"type\": \"delivery_address\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"address\":  {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     } \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 41\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "61223df4-3200-47a1-99b0-695744dd144a",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. Delivery_address Status to_delivery",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6d82394-652d-46c2-9fc5-a6c53cda7c0c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderId}},\n  \"status\": \"to_delivery\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n   \"type\": \"delivery_address\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"address\":  {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     } \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 41\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "444ffb87-ac64-4f99-adaa-93d88cc8e1b7",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. Delivery_address Status in_delivery",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "985d78ab-839a-46a8-be92-0c242cde44a7",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare status in_delivery\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"in_delivery\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderId}},\n  \"status\": \"in_delivery\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n   \"type\": \"delivery_address\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"address\":  {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     } \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 41\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "e2abdb5e-cb2b-4c1b-8e35-fb916b944fb0",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. Delivery_address Status done",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4cfa5d6d-86ae-49cb-a69e-72f964490866",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare status done\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"done\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderId}},\n  \"status\": \"done\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n   \"type\": \"delivery_address\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"address\":  {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     } \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 41\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "a4ebad4a-56e9-4141-8a9f-b968fdb8d42f",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. Delivery_address Status canceled 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2d7658e-3978-4215-b45e-07a691bd6af1",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderId}},\n  \"status\": \"canceled\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n   \"type\": \"delivery_address\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"address\":  {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     } \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 41\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "9c7dabfe-b9cf-4322-a77c-0560d3977e63",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Order- delivery_adress Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07918d41-4f21-480e-85db-ffb58607ae2c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"orderId\", pm.response.json().data.item.orderId);\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Compare pharmacyPrIdNull\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductOrderDataList[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount)).to.eql(jsonData.data.item.pharmacyProductsTotalPrice);\r",
											"});\r",
											"pm.environment.set(\"Order_cost\", pm.response.json().data.item.pharmacyProductsTotalPrice);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": {{PharmaIdCr}},\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"delivery_address\",\n     \"comment\": \"{{$randomPhrase}}\",\n     \"address\": {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     }\n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 50\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. Delivery_address Status canceled",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f2fb0edc-d9d5-4233-bf20-e0f959ea9087",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare status done\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"canceled\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderId}},\n  \"status\": \"canceled\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n   \"type\": \"delivery_address\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"address\":  {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     } \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 41\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "cb290797-afe4-4244-98d2-d09e767024aa",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Order- delivery_adress Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "abe18a30-d584-405b-b89b-cccc1d32915a",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"orderId\", pm.response.json().data.item.orderId);\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"pm.test(\"Compare pharmacyPrIdNull\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductOrderDataList[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount)).to.eql(jsonData.data.item.pharmacyProductsTotalPrice);\r",
											"});\r",
											"pm.environment.set(\"Order_cost\", pm.response.json().data.item.pharmacyProductsTotalPrice);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": {{PharmaIdCr}},\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"delivery_address\",\n     \"comment\": \"{{$randomPhrase}}\",\n     \"address\": {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     }\n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 50\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Editing Order. PickUp Status in_progress Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9caf4de3-778c-4871-8757-d6f279940b07",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare status in_progress\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"in_progress\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orderId\": {{orderId}},\n  \"status\": \"in_progress\",\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n   \"type\": \"delivery_address\",\n      \"comment\": \"{{$randomPhrase}}\",\n      \"address\":  {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     } \n  },\n  \"paymentType\": \"pocket money\",\n  \"pharmacyProductOrderCreateDataList\": [\n      {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 41\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "f3cf7828-9158-44b4-bb5c-4d1ac4aed26d",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Canceling Order.delivery_adress Error 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b13f649-cdad-4eb1-9e2a-756f3b2d6095",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order/:id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order",
										":id",
										"cancel"
									],
									"variable": [
										{
											"id": "033d9764-5d4f-4d9a-8350-8578b6b5dad9",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test order User",
					"item": [
						{
							"name": "Retrieving collection of statuses by delivery type.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "610664f2-aa8a-4517-91b3-e222502c80e8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=delivery_address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										"statuses"
									],
									"query": [
										{
											"key": "delivery_type",
											"value": "delivery_address",
											"description": "Order delivery type"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of statuses by delivery type."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												"statuses"
											],
											"query": [
												{
													"key": "delivery_type",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												"statuses"
											],
											"query": [
												{
													"key": "delivery_type",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/statuses?delivery_type=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												"statuses"
											],
											"query": [
												{
													"key": "delivery_type",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving order card by customer order.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20032b7f-1681-482c-9adc-8b6dfae63de9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"in_progress\");\r",
											"});\r",
											"pm.test(\"Compare pharmacyPrIdNull\", function () {\r",
											"   pm.expect(jsonData.data.item.pharmacyProductOrderDataList[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNull\")));\r",
											"});\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount)).to.eql(jsonData.data.item.pharmacyProductsTotalPrice);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id/order-card?status=in_progress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id",
										"order-card"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[total_price]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_progress"
										},
										{
											"key": "status",
											"value": "done",
											"disabled": true
										},
										{
											"key": "status",
											"value": "canceled",
											"disabled": true
										},
										{
											"key": "status",
											"value": "new",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ready",
											"disabled": true
										},
										{
											"key": "status",
											"value": "to_delivery",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_delivery",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "delivery_address",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "pickup",
											"disabled": true
										},
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "79fb8429-e80d-4e7f-827c-b1de5ba151ad",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string",
											"description": "(Required) Order id"
										}
									]
								},
								"description": "Retrieving order card by customer order."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Order card",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id/order-card",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id",
												"order-card"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of orders.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d2df8a4-ab24-4ead-be97-c5597c337b32",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare orderId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].orderId).to.eql(parseInt(pm.environment.get(\"orderId\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/orders?pharmacy_id={{PharmaIdCr}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"orders"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "order[total_price]",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "{{PharmaIdCr}}"
										},
										{
											"key": "status",
											"value": "in_progress",
											"disabled": true
										},
										{
											"key": "status",
											"value": "done",
											"disabled": true
										},
										{
											"key": "status",
											"value": "canceled",
											"disabled": true
										},
										{
											"key": "status",
											"value": "new",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ready",
											"disabled": true
										},
										{
											"key": "status",
											"value": "to_delivery",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_delivery",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "delivery_address",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "pickup",
											"disabled": true
										},
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Order-pickup.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2df18932-ad58-46f4-bd84-f0c06c6b6a75",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"orderId\": {{orderId}},\n    \"status\": \"done\",\n    \"contactInfo\": {\n        \"name\": \"{{$randomFullName}}\",\n        \"phone\": \"{{rphone}}\",\n        \"email\": \"{{$randomEmail}}\"\n    },\n    \"deliveryInfo\": {\n          \"type\": \"pickup\",\n        \"comment\": \"{{$randomPhrase}}\",\n        \"address\": null \n    },\n    \"paymentType\": \"1\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": {{pharmacyPrIdNull}},\n            \"requestedPrice\": 12,\n            \"count\": {{random_count}}\n        },\n        {\n            \"pharmacyProductId\": {{pharmacyPrIdNull}},\n            \"requestedPrice\": 1,\n            \"count\": {{random_count}}\n        }\n    ],\n    \"deliveryPrice\": 0\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/order/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"order",
										":id"
									],
									"variable": [
										{
											"id": "f84b515b-a70c-4e32-a6f9-ab6e6dc85593",
											"key": "id",
											"value": "{{orderId}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Order."
							},
							"response": [
								{
									"name": "Order edited",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"orderId\": \"<integer>\",\n    \"status\": \"<string>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"paymentType\": \"<string>\",\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<float>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/order/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"order",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy orders.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "985fdc7e-e43b-4b8c-bd17-5bc4e7a28590",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const pharma = jsonData.data.items.find(u => u.orderId === parseInt(pm.environment.get(\"orderIdDel\")));\r",
											"const pharmaid = pharma ? pharma.orderId : 'not found';\r",
											"\r",
											"const pharmaK = jsonData.data.items.find(u => u.orderId === parseInt(pm.environment.get(\"orderIdPic\")));\r",
											"const pharmaidK = pharmaK ? pharmaK.orderId : 'not found';\r",
											"\r",
											"pm.test(\"Compare order_id PickUp\", function () {\r",
											"    pm.expect(pharmaidK).to.eql(parseInt(pm.environment.get(\"orderIdPic\")));\r",
											"});\r",
											"pm.test(\"Compare order_id Dilivery\", function () {\r",
											"    pm.expect(pharmaid).to.eql(parseInt(pm.environment.get(\"orderIdDel\")));\r",
											"});\r",
											"\r",
											"console.log (pharma)\r",
											"console.log (pharmaid)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"orders"
									],
									"variable": [
										{
											"id": "84632ea3-e539-405a-9c3d-4be950524f2a",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7e276aa4-3be0-43d4-a1f5-534475b45c29",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "610e8f70-d94d-4fa2-81e1-2c049f4a9c94",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "product-cart Copy",
					"item": [
						{
							"name": "pharmacy-product/{id}",
							"item": [
								{
									"name": "Adding pharmacy product to Customer product cart.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"pharmacy-product",
												":id"
											],
											"variable": [
												{
													"id": "bac7edba-8eca-465c-8099-b244b756b06b",
													"key": "id",
													"value": "1665",
													"type": "string",
													"description": "(Required) Pharmacy product id"
												}
											]
										},
										"description": "Adding pharmacy product to Customer product cart."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"product-cart",
														"pharmacy-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"product-cart",
														"pharmacy-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Pharmacy product added to Customer product cart",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"product-cart",
														"pharmacy-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Removing pharmacy product from Customer product cart.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"pharmacy-product",
												":id"
											],
											"variable": [
												{
													"id": "d757671c-d0d9-4527-85f4-c7d322fa57ef",
													"key": "id",
													"value": "1665",
													"type": "string",
													"description": "(Required) Pharmacy product id"
												}
											]
										},
										"description": "Removing pharmacy product from Customer product cart."
									},
									"response": [
										{
											"name": "Pharmacy product removed from Customer product cart.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"product-cart",
														"pharmacy-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"product-cart",
														"pharmacy-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/product-cart/pharmacy-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"product-cart",
														"pharmacy-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Retrieving Customer product cart.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/product-cart",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"product-cart"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving Customer product cart."
							},
							"response": [
								{
									"name": "Customer wishlist",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updating product cart pharmacy product count.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"count\": 2200000\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/product-cart/product-cart-pharmacy-product/:id/count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"product-cart",
										"product-cart-pharmacy-product",
										":id",
										"count"
									],
									"variable": [
										{
											"id": "7d557808-d652-4afa-aa1c-e9344ff9a880",
											"key": "id",
											"value": "14",
											"type": "string",
											"description": "(Required) Product cart pharmacy product id"
										}
									]
								},
								"description": "Updating product cart pharmacy product count."
							},
							"response": [
								{
									"name": "Product cart pharmacy product count updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"count\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/product-cart-pharmacy-product/:id/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"product-cart-pharmacy-product",
												":id",
												"count"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"count\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/product-cart-pharmacy-product/:id/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"product-cart-pharmacy-product",
												":id",
												"count"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"count\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/product-cart/product-cart-pharmacy-product/:id/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"product-cart",
												"product-cart-pharmacy-product",
												":id",
												"count"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Chat",
					"item": [
						{
							"name": "Load img",
							"item": [
								{
									"name": "User login super-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bfc8747c-1f2d-4a6b-b930-dd77761cdfa5",
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uploading_User_image_file.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d01d0743-e2ef-4012-a2eb-e6a96e6f5414",
												"exec": [
													"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (31).jpg"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efa5700e-b03b-473a-80cf-d73bab588d64",
												"exec": [
													"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (30).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "979ee6aa-4a12-4ba1-8a5d-86b27151b2e3",
												"exec": [
													"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (32).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ff0ade01-f8ca-4a82-b890-207c81e9cf1c",
												"exec": [
													"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (33).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ca2ec79-44e1-48ed-aee2-dec7935ccea0",
												"exec": [
													"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (34).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f639cefe-3474-4e25-8d0f-18f74ca895d1",
												"exec": [
													"//postman.setNextRequest(\"Uploading_User_image_file.\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3007358c-06fe-4a85-967f-f978b2064291",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"pharmacyPrId\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": 749,\r\n  \"price\": 61.321166,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true, \r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658406\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 4,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"id": "e50d6423-55ba-4f1d-a4d5-ff0e399395c0",
													"key": "id",
													"value": "{{PharmaIdCr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Pharmacist",
							"item": [
								{
									"name": "Customer registration.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7a83e111-fa1a-4212-b0e2-9cffdca9b81f",
												"exec": [
													"pm.environment.set(\"phone\", pm.response.json().data.item.phone);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a55177e8-644d-49de-b6c3-3b84f85f3858",
												"exec": [
													"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
													"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
													"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
													"var shuffle = _.shuffle(phn);\r",
													"pm.environment.set(\"rphone\", shuffle[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										},
										"description": "Creating Customer, generating code for it and sending sms."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"registration"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Customer created and sent verification code",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"registration"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Customer login. Phone",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2c8e83b2-ff93-46ec-a5f5-7f5dfb311511",
												"exec": [
													"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										},
										"description": "Customer login."
									},
									"response": [
										{
											"name": "Returns tokens",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "523e5c90-dc80-4932-b32a-5d408c3fc147",
												"exec": [
													"pm.environment.set(\"token_pharmacist\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"pharmacist1@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat by Customer.Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a0d6d309-c47c-49e6-ba2d-6ba1148a84e7",
												"exec": [
													"pm.environment.set(\"ChatIdPharmac\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ChatTopicNamePharmac\", pm.response.json().data.item.topicName);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"pharmacist\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat"
											]
										},
										"description": "Customer initialize chat with doctor."
									},
									"response": [
										{
											"name": "Chat created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "95b47484-6b09-4c00-9229-a9102b822857",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "5ae85fda-b3c1-43bc-b927-b730383f49b4",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message.Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "969c2eaf-941f-4edb-b47e-07f7e73a6b75",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "ac7c6d94-5832-49c5-b581-ad3fb6f59a7c",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e0682b8-6ecd-4da5-894c-7a3ccbb5680a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Compare message text\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.items[1].text).to.eql(pm.environment.get(\"TextMesPh\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												},
												{
													"key": "afterMessageNumber",
													"value": "0",
													"disabled": true
												},
												{
													"key": "beforeMessageNumber",
													"value": "9",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "c41232fe-260d-4c04-acb4-395f8c34e43e",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User closing chat. Error 403",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ca1ca62c-2dd2-4a27-8d61-cda1d38927b1",
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"chat",
												":id",
												"close"
											],
											"variable": [
												{
													"id": "7688d394-4bdc-436a-9321-73eb20b0e92a",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "User closing chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat close requested",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Pharmac",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8227aecb-e7be-436b-9985-e5d87c8ace20",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesCust}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "e9206c21-97e4-4358-b3e6-6dc6ca8ed4ef",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages. Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "81974018-eb4a-4755-ac3f-174c88da5d38",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Compare message text\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.items[2].text).to.eql(pm.environment.get(\"TextMesCust\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "d8710aa2-e122-4333-ab18-60fffbf0d776",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message.Customer Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26e852a7-3cd9-46b8-8469-4bf320a91b6c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "b62f9e3a-a003-49da-b94e-ef2a5c756820",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Pharmac Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d32a1ad8-516d-4f92-b106-eb7cc332c993",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesCust}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "d332d773-028b-41c5-b025-d03a0a975a31",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User closing chat.Pharmacist Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7da78501-f9e1-4c53-a618-f29d3cfe56f1",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"chat",
												":id",
												"close"
											],
											"variable": [
												{
													"id": "2df01d03-e3c7-40fc-86f8-8b8f362c8e62",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "User closing chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat close requested",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Customer continued chat. Copy",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat/:id/continue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat",
												":id",
												"continue"
											],
											"variable": [
												{
													"id": "d4ea298e-c80a-47c3-9d5f-002e53ccb2d5",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating chat message.Customer Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3e4b6919-6497-4b31-84bb-1ddbe4b19e9f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "0cc949f5-f711-442e-b45f-659433de0a40",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Pharmac Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbdb8f63-e935-4579-98ec-39b7ae28ef41",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesCust}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "112aca6d-fd22-4814-b891-952a6360df2f",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message.Customer Copy 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "64e48047-6a9f-4ac2-9246-f9bbdc7e45d5",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "8c3aca23-7d5d-4f53-b30e-a45767a671e6",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Pharmac Copy 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0894676f-5913-446c-89f7-86d009fa0d68",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesCust}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "4d44579b-f1d2-419b-b828-e9de0ec773f2",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message.Customer Copy 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e31d6af1-75d4-4b62-a58c-24444119ce8f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "efe9940b-ddd7-4969-a16c-8f6b244d0760",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Pharmac Copy 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "88981a45-93ad-4bba-b456-2d001403ea26",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesCust}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "8f2e70e4-e8b2-4fa5-9f15-ec25033774af",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message.Customer Copy 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9a2af2ae-5ce6-419d-96fc-ce60bd5b252b",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "bb80d562-1cbc-45df-bee8-ecc4b25c64ca",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Pharmac Copy 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fc12be0d-fb53-4b39-93b3-94a5221ab35d",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesCust}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "420bb691-8e8a-4b2f-91b3-31893497edf1",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages. Customer Check all masseges",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73825ab1-5014-4f4d-9bce-26f69f6b1337",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Items length is equal to 13\",  function () {\r",
													"    pm.expect(jsonData.data.items.length).to.eql(13);\r",
													"});\r",
													"console.log(pm.response.json().data.items.length);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "f43ff87a-d06d-45f5-a057-da5c6c8a8143",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages. Pharmacist Check all masseges Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de28d8e3-49f9-4ab1-b1dd-7e2e52ec29d4",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Items length is equal to 13\",  function () {\r",
													"    pm.expect(jsonData.data.items.length).to.eql(13);\r",
													"});\r",
													"\r",
													"console.log(pm.response.json().data.items.length);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "f4b408ce-f09f-41ba-ba95-d8a51b8022fe",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of User or Customer Chat. Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e752d17-e671-45f9-88c0-da955e4fe259",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Compare chat id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.items[0].id).to.eql(parseInt(pm.environment.get(\"ChatIdPharmac\")));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chats"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											]
										},
										"description": "Retrieving collection of User or Customer Chat."
									},
									"response": [
										{
											"name": "Chat list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chats?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chats"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chats?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chats"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of User or Customer Chat. Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "615653b0-7b1f-4d05-8c00-ca975d25e838",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Compare chat id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.items[0].id).to.eql(parseInt(pm.environment.get(\"ChatIdPharmac\")));\r",
													"});\r",
													"console.log(pm.response.json().data.items.length);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chats"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											]
										},
										"description": "Retrieving collection of User or Customer Chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chats?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chats"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chats?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chats"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uploading Customer image file. Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "30fe4b5a-62d7-4d85-a9fb-dcc29c0277f9",
												"exec": [
													"pm.environment.set(\"uuid_img\", pm.response.json().data.item.uuid);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/Новая папка/razrabotka.jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Application Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5bf47e58-66a7-4c42-aaa1-9a638ecb2b2b",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"UrlIm\", pm.response.json().data.item.file.url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/application/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"application",
												":uuid"
											],
											"variable": [
												{
													"id": "3da1cdf5-e61a-4ed4-abc5-d47993fcf961",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string"
												},
												{
													"id": "67e0d49c-8785-4607-9eb9-41bc00dd3562",
													"key": "uuid",
													"value": "{{uuid_img}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of chat messages. Customer Check all masseges Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9b50ad7a-a2ba-463d-8f4b-7819bc1480f9",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response.json().data.items.length);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "b94c7f47-61e7-4cab-8b4f-d3fb84121c07",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uploading Customer image file. Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a254f973-fe2e-44c3-ba07-557b247385a6",
												"exec": [
													"pm.environment.set(\"uuid_img\", pm.response.json().data.item.uuid);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/Новая папка/razrabotka.jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Application Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0531a06d-42ba-4c4a-bf55-371a17b0cc01",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/application/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"application",
												":uuid"
											],
											"variable": [
												{
													"id": "63ccc6a3-fc31-4ca9-8b31-51a1884d0b4b",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string"
												},
												{
													"id": "2f4c2d03-2be0-430e-bfc6-70f4f6285e75",
													"key": "uuid",
													"value": "{{uuid_img}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of chat messages. Pharmacist Check all masseges Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f16ae856-07a3-4c07-aa19-62be8ca0c706",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.response.json().data.items.length);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "be98bc13-1a5c-43d0-90e2-68476b911421",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Pharmacy product. Required fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7afdf14a-5dda-4425-8147-01b43af0d1d4",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"pharmacyGlPrId\", pm.response.json().data.item.globalProduct.id);\r",
													"pm.environment.set(\"pharmacyPrIdNullReq\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 202.6,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таблетки 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"П N013563/01\",\r\n  \"description\": \"Test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": null,\r\n  \"pictureUuids\": [\r\n    \r\n    ],\r\n  \"barCodes\": [\r\n    \r\n  ],\r\n  \"activeSubstances\": [\r\n   \r\n  ],\r\n  \"kfgCodes\": [\r\n    \r\n  ],\r\n  \"nozologyCodes\": [\r\n    \r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"id": "a34f7d25-1eb5-4467-bdfa-8e6994840557",
													"key": "id",
													"value": "3",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Attach a global-product Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83b0f235-0935-446b-a61c-9b6e8d786df9",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/global-product/:product_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"global-product",
												":product_id"
											],
											"variable": [
												{
													"id": "da6f1c0b-27f4-4046-84ca-d7b8eca3f021",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string"
												},
												{
													"id": "c259bec4-3cc8-49e5-bd40-73b88a2b6d08",
													"key": "product_id",
													"value": "{{pharmacyGlPrId}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "User closing chat.Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e0e1a4d0-9aa8-4bdb-9ac8-fb9a541ce403",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"chat",
												":id",
												"close"
											],
											"variable": [
												{
													"id": "1100e1c1-fbbf-4c8f-851b-ff853db005b8",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "User closing chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat close requested",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Customer closing chat. Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d308fe8d-f8d2-4e29-b52d-bdf8e87ba77f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat",
												":id",
												"close"
											],
											"variable": [
												{
													"id": "b5692a50-2e45-4629-940c-fbf017209737",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Customer closing chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat closed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Customer continued chat.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0441e5d8-4582-4d1a-a5ed-36a788a0bd23",
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat/:id/continue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat",
												":id",
												"continue"
											],
											"variable": [
												{
													"id": "2d6902da-d1ad-4cc9-836a-f9797b38c202",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Customer chat evaluating.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c017bc6e-d9e9-431b-accf-4accbcc1edf9",
												"exec": [
													"pm.environment.set(\"random_evaluate\", _.random(1, 5))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6b3f5347-5153-4555-afc3-d0d8a35a8ff8",
												"exec": [
													"console.log(pm.environment.get(\"random_evaluate\"))\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"evaluatingRating\": 4,\r\n  \"evaluatingTags\": [\r\n    \"{{$randomLoremWords}}\"\r\n  ],\r\n  \"evaluatingComment\": \"{{$randomLoremSentence}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat/:id/evaluate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat",
												":id",
												"evaluate"
											],
											"variable": [
												{
													"id": "41a65084-2182-4670-8283-4014ca1fc95b",
													"key": "id",
													"value": "{{ChatIdPharmac}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "self Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8ac4ea5-1a0e-46b1-8b21-345bbbc9fbdb",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of User last opened chats.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "812435f4-a8ba-43e9-9046-b0dd066e9ac5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/chat/last-opened-chats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"chat",
												"last-opened-chats"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "4",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of user last chat global products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9685bb92-ccee-4e99-b946-0e7858e02190",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Compare Global product id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.items[0].globalProductId).to.eql(parseInt(pm.environment.get(\"pharmacyGlPrId\")));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/chat/last-global-products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"chat",
												"last-global-products"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Doctor",
							"item": [
								{
									"name": "Load img",
									"item": [
										{
											"name": "User login super-admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c3b423a-6f34-40d0-a4be-f8d3858bf413",
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().data.token);\r",
															"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
															"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												},
												"description": "User login."
											},
											"response": [
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if authentication failing",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns tokens and user",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if request parameters is not valid",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Uploading_User_image_file.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ad36bf8b-afcc-4782-80a6-b92f8df13484",
														"exec": [
															"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (31).jpg"
														},
														{
															"key": "",
															"value": "",
															"type": "text",
															"disabled": true
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "237105da-e66a-4a9c-a497-98b4ffbbe607",
														"exec": [
															"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (30).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "95fc95f5-d1a5-442c-8211-524f1bd8ac93",
														"exec": [
															"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (32).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "37486043-d402-47ed-91a0-a4a1883e7585",
														"exec": [
															"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (33).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 5",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "08e0512f-4f79-4634-87f5-37d17b6cb8ce",
														"exec": [
															"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (34).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Customer registration.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4d7f1d4-5d24-411f-bd4a-9c8f3eb2c8ea",
												"exec": [
													"pm.environment.set(\"phone\", pm.response.json().data.item.phone);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "37ceeb26-8fdf-4e18-8362-e1793b57afad",
												"exec": [
													"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
													"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
													"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
													"var shuffle = _.shuffle(phn);\r",
													"pm.environment.set(\"rphone\", shuffle[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										},
										"description": "Creating Customer, generating code for it and sending sms."
									},
									"response": [
										{
											"name": "Customer created and sent verification code",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"registration"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"registration"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Customer login. Phone",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "745175ec-a5a9-4dd9-a0e6-ca849d689869",
												"exec": [
													"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"pm.environment.set(\"id_customer\", pm.response.json().data.item.id);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										},
										"description": "Customer login."
									},
									"response": [
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8556b2ac-bf89-4228-af44-c9c2744d5888",
												"exec": [
													"pm.environment.set(\"token_doctor\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"doctor1@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat by Customer.Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "446f61f4-370b-4ff0-ba54-3d6d459c5c05",
												"exec": [
													"pm.environment.set(\"ChatIdDoctor\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ChatTopicNameDoctor\", pm.response.json().data.item.topicName);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"doctor\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat"
											]
										},
										"description": "Customer initialize chat with doctor."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b0e678c-43a0-4cb8-9307-e9c3cdecd9b9",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "5a50d412-550b-4b13-a24e-d418d27deb3d",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message.Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "07d26cdb-52aa-48ff-a966-c24ab1fc83ab",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "5c4ed90e-dfd3-4ce3-989b-8aa0439a45dc",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages. Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de9e7a3a-abe1-4539-98ea-e9d2d2eb3f9a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "813ad565-9bf5-4d6a-a50b-764383277592",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User closing chat. Erro 403",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d9991f66-4160-4ba4-bb11-95a6b00f28ae",
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"chat",
												":id",
												"close"
											],
											"variable": [
												{
													"id": "a274d975-a7ed-4894-a20a-18f0c1ea11b0",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "User closing chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat close requested",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "54da0a5f-8e3c-4754-84e6-d4e2f26f1359",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesDoct}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "66c11214-37e8-4fd3-afb1-610d7f607421",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages. Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "279f9b30-cdf5-488e-9f13-e06eea6ec5b5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "1d3f21b1-8fdf-4471-be9d-a32a9adf24b3",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User closing chat.Pharmacist Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c65078ba-4913-41c5-896f-0010153f9d91",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"chat",
												":id",
												"close"
											],
											"variable": [
												{
													"id": "4312bdb3-9a65-4bb3-a1b5-655d4ec263d9",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "User closing chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat close requested",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Customer continued chat. Copy",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat/:id/continue",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat",
												":id",
												"continue"
											],
											"variable": [
												{
													"id": "59df7e5f-ff08-4c67-89f7-7dfba8b6aacc",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating chat message. Customer Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a227338d-7ec9-4f60-951e-9f389e9fe648",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "9af702a9-bc78-4899-a4a4-0e287f7d06ee",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Doctor Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "33e6c195-dbb5-451e-8317-4353c892d519",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesDoct}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "ee88638f-457c-4825-941a-e4215b2f070a",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Customer Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a6120e5f-72eb-4ee8-871a-4d776bff5ee2",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "185304f8-2988-40a1-a468-2400b285eaae",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Doctor Copy 2",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesDoct}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "d894b341-92e6-4372-91f1-eacda597b040",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Customer Copy 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bfa9b40f-2045-41b0-af76-2485e903188e",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "32ab3d9d-5e3c-4b20-97ce-48d8f188e1df",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Doctor Copy 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fe7e2e58-23e6-48e8-b087-e11b0d970071",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesDoct}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "c9f735cf-4af8-4127-9eb2-f7b02f7745e9",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Customer 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bea20464-de6d-42b6-8173-709554bc43d2",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "3b665caf-5bbe-414a-9353-89d45f854f72",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Recipe.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f893b01a-725d-43aa-8741-1c896eaf2cf6",
												"exec": [
													"var moment = require('moment')\r",
													"\r",
													"var createdAt = moment().format('DD.MM.YYYY')\r",
													"var validTill = moment().add(30, 'days').format('DD.MM.YYYY')\r",
													"\r",
													"pm.environment.set(\"createdAt\", createdAt);\r",
													"pm.environment.set(\"validTill\", validTill);\r",
													"\r",
													"console.log(createdAt)\r",
													"console.log(validTill)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "93d23522-9d6a-4914-9373-4f1609c2bb89",
												"exec": [
													"pm.environment.set(\"id_recipe\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_recipe\", pm.response.json().data.item.image.uuid);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": {{id_customer}},\n    \"diagnosis\": \"ВЕГЕТОСОСУДИСТАЯ ДИСТОНИЯ\",\n    \"createdAt\": \"{{createdAt}}\",\n    \"validTill\": \"{{validTill}}\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": 1810,\n            \"count\": 4\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe"
											]
										},
										"description": "Creating Recipe."
									},
									"response": [
										{
											"name": "Recipe created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat recipe message.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/recipe/:recipe_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"recipe",
												":recipe_id"
											],
											"variable": [
												{
													"id": "6d357961-057d-406d-a527-45e7902ffbf0",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string"
												},
												{
													"id": "b72bd1e8-deb1-4b21-bc36-179f6dc1f6a1",
													"key": "recipe_id",
													"value": "{{id_recipe}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating chat message. Doctor Copy 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "17f0ac90-7997-4306-8d24-0ad1b8b8b92e",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesDoct}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "43372f50-5151-40dc-b7e3-2cc3a6c5b364",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Customer Copy 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b40e6b64-0fca-4f37-b0d5-dd421776c46f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "8c3a2ea4-6164-4400-9399-27586ef1cd71",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Doctor Copy 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0c32d365-fac6-460c-b324-8d3eafaaaa89",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesDoct}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "c6306fc2-c77e-4f50-a6aa-32cb72f2a501",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Customer Copy 6",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "509dd8e9-59ca-4a9c-a590-8d82f1907a35",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesPh}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "82b796ce-cfad-4e35-832e-9a93b4d83813",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat message. Doctor Copy 7",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06fab2df-104c-419f-8a03-74040ffb5ac1",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"text\": \"{{TextMesDoct}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"message"
											],
											"variable": [
												{
													"id": "f5897884-c6df-45e7-ae18-f830c1953694",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Creating chat message."
									},
									"response": [
										{
											"name": "Message sended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/message",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"message"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages. Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09b259c6-1ce3-439d-97df-4b8e74385174",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Items length is equal to 16\",  function () {\r",
													"    pm.expect(jsonData.data.items.length).to.eql(16);\r",
													"pm.response.json().data.items.length = 12;\r",
													"});\r",
													"console.log(pm.response.json().data.items.length);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												},
												{
													"key": "afterMessageNumber",
													"value": "4",
													"disabled": true
												},
												{
													"key": "beforeMessageNumber",
													"value": "14",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of chat messages. Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ec706d7-54c6-4ab2-9767-fe4440a34cda",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Items length is equal to 16\",  function () {\r",
													"    pm.expect(jsonData.data.items.length).to.eql(16);\r",
													"  });  \r",
													"console.log(pm.response.json().data.items.length);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												},
												{
													"key": "order",
													"value": "asc",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string"
												}
											]
										},
										"description": "Retrieving collection of chat messages."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Message list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chat/:id/messages?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chat",
														":id",
														"messages"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of User or Customer Chat.Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ecfbd46a-82c1-4a89-8e7a-fb126140c309",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Compare chat id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.items[0].id).to.eql(parseInt(pm.environment.get(\"ChatIdDoctor\")));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chats?all=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chats"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												},
												{
													"key": "all",
													"value": "true"
												}
											]
										},
										"description": "Retrieving collection of User or Customer Chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chats?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chats"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chats?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chats"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of User or Customer Chat. Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ec8c41d5-cd4e-4804-ad9b-64ecfb1d2aae",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Compare chat id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.items[0].id).to.eql(parseInt(pm.environment.get(\"ChatIdDoctor\")));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chats"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Page number",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Page items count",
													"disabled": true
												},
												{
													"key": "active",
													"value": "false",
													"disabled": true
												},
												{
													"key": "all",
													"value": "true",
													"disabled": true
												}
											]
										},
										"description": "Retrieving collection of User or Customer Chat."
									},
									"response": [
										{
											"name": "Chat list",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chats?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chats"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/chat/chats?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"chat",
														"chats"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uploading Customer image file. Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "acb0eb2d-31fa-4229-a637-53b669e6dc17",
												"exec": [
													"pm.environment.set(\"uuid_img\", pm.response.json().data.item.uuid);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/Новая папка/razrabotka.jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Application Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6150d656-78a6-43b2-8fca-780e7a8e70c0",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"UrlIm\", pm.response.json().data.item.file.url);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/application/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"application",
												":uuid"
											],
											"variable": [
												{
													"id": "c53c52d0-914d-4598-b58c-116a1a3d0573",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string"
												},
												{
													"id": "90f1f4fb-07a2-405f-a5d6-6c72a0b1d328",
													"key": "uuid",
													"value": "{{uuid_img}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading Customer image file. Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "49339746-d713-4948-941f-a8fd878e98c9",
												"exec": [
													"pm.environment.set(\"uuid_img\", pm.response.json().data.item.uuid);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/Новая папка/razrabotka.jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Application Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9a73bee2-c33b-47de-9f63-2733831b173a",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/application/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"application",
												":uuid"
											],
											"variable": [
												{
													"id": "f1208e03-7576-4cc0-80a1-50bca99dd831",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string"
												},
												{
													"id": "87510da1-5129-4feb-a228-31015692368f",
													"key": "uuid",
													"value": "{{uuid_img}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Global product. Full",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "62c286da-3c19-4afe-b195-2f0401515a00",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGPPr\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ruNameGlPr\", pm.response.json().data.item.rusName);\r",
													"console.log(pm.environment.get(\"date\"))\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f4068bfb-d0d9-464f-95e5-0ad7fcda1f7a",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Цитрат калия\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"VALPROCOM\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": \"04.005\",\n    \"pictureUuids\": [\n    \"{{pharmacyImage1}}\",\n    \"{{pharmacyImage2}}\",\n    \"{{pharmacyImage3}}\",\n    \"{{pharmacyImage4}}\",\n    \"{{pharmacyImage5}}\"\n       \n    ],\n    \"barCodes\": [\n        \"5995327206042\",\n        \"4260085520282\",\n        \"8901086130273\"\n    ],\n    \"activeSubstances\": [\n        \"sulfadoxine\",\n        \"tocopherol\",\n        \"triphosadenine\"\n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \"A54\",\n        \"A56\",\n        \"A69.1\"\n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Attach a global-product Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6ae51140-41f9-4d34-b633-f42784f1c15e",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/global-product/:product_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"global-product",
												":product_id"
											],
											"variable": [
												{
													"id": "2ad67d9b-a583-4bf6-90bc-9b3407334f5d",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string"
												},
												{
													"id": "1a180afe-c64b-4c00-9b80-21a43f7739ae",
													"key": "product_id",
													"value": "{{IdNewGPPr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "User closing chat. Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "274e2884-7285-4e72-8f74-1724c99c06b9",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"chat",
												":id",
												"close"
											],
											"variable": [
												{
													"id": "79d7e343-bcd8-4543-834b-360fef38e7af",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "User closing chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat close requested",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Customer closing chat. Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "732ad87f-3087-4424-a574-4424209f88d7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat",
												":id",
												"close"
											],
											"variable": [
												{
													"id": "ef176d65-d415-4bc4-98e1-9132643aba14",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string",
													"description": "(Required) Chat id"
												}
											]
										},
										"description": "Customer closing chat."
									},
									"response": [
										{
											"name": "Wrong User",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat closed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat/:id/close",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat",
														":id",
														"close"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test User",
					"item": [
						{
							"name": "Pharmacist",
							"item": [
								{
									"name": "User login super-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4948e90a-d7e8-4ab4-b5e4-65831437f0df",
												"exec": [
													"pm.environment.set(\"token_super_admin\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User registration. Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d1a0796-75ad-4564-84de-639e2ad84e71",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"email_pharmacist\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"uuid_pharmacist\", pm.response.json().data.item.uuid);\r",
													"\r",
													"//enterprise_admin\r",
													"//manager\r",
													"//enterprise_manager\r",
													"//doctor\r",
													"//courier"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f1a0eddf-61dd-4667-aa12-bfd5edcf6bb8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"firstName\": \"{{$randomFirstName}}\",\n\"lastName\": \"{{$randomLastName}}\",\n\"email\": \"{{$randomEmail}}\",\n\"password\": \"{{password}}\",\n\"type\": \"pharmacist\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"id": "8b57b5ea-1252-4be5-bda8-9ac55155c006",
													"key": "type",
													"value": "pharmacist",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06ecdc86-e2a5-4b3b-80bf-e16452b071f1",
												"exec": [
													"pm.environment.set(\"token_pharmacist\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_pharmacist\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_pharmacist\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"email_pharmacist\", pm.response.json().data.item.email);\r",
													"\r",
													"//pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_pharmacist}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uploading_User_image_file.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5f6b2f8d-235c-4409-98d9-f4d653329fc4",
												"exec": [
													"pm.environment.set(\"UserAva\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/20190214174624-8569.png"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Updating User data.Pharmacist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "97a7c495-6d5c-4da1-8579-1df27dc39f65",
												"exec": [
													"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
													"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
													"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
													"var shuffle = _.shuffle(phn);\r",
													"pm.environment.set(\"rphone\", shuffle[0]);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "17c76434-59fd-466d-b6a0-4650db85e0be",
												"exec": [
													"pm.environment.set(\"email_pharmacist\", pm.response.json().data.item.email);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.environment.get(\"rphone\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rphone}}\",\r\n  \"aboutMe\": \"{{$randomPhrase}}\",\r\n  \"avatarUuid\": \"{{UserAva}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "2192c2f8-6f02-4189-a608-d0222e749407",
													"key": "uuid",
													"value": "{{uuid_pharmacist}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "User login Pharmacist Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b47ef5f5-8c34-478d-9926-f2cb089d3bdd",
												"exec": [
													"pm.environment.set(\"token_pharmacist\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_pharmacist\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_pharmacist\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"email_pharmacist\", pm.response.json().data.item.email);\r",
													"\r",
													"//pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_pharmacist}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "self User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1573701d-8c00-4328-9287-ec61c9c71d19",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving User data by uuid.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fbe392d9-f50a-4d00-9c07-f81694d7b6ab",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});\r",
													"pm.test(\"Compare email\", function () {\r",
													"    pm.expect(jsonData.data.item.email).to.eql(pm.environment.get(\"email_pharmacist\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "42ab80fc-35b5-4158-895d-4a83b07b6e6d",
													"key": "uuid",
													"value": "{{uuid_pharmacist}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Doctor",
							"item": [
								{
									"name": "User login super-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "14ea23ba-6a48-41e0-9e55-a8c285fc9ac6",
												"exec": [
													"pm.environment.set(\"token_super_admin\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User registration. Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73d57dfe-9f50-4824-9a6e-8f7e5c949cdb",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"email_doctor\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"uuid_doctor\", pm.response.json().data.item.uuid);\r",
													"\r",
													"//enterprise_admin\r",
													"//manager\r",
													"//enterprise_manager\r",
													"//doctor\r",
													"//courier"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"firstName\": \"{{$randomFirstName}}\",\n\"lastName\": \"{{$randomLastName}}\",\n\"email\": \"{{$randomEmail}}\",\n\"password\": \"{{password}}\",\n\"type\": \"doctor\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"id": "31183b72-4737-4dee-a587-b0dc344408ee",
													"key": "type",
													"value": "doctor",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1e5b76d7-0db1-4758-a2c9-07602f059218",
												"exec": [
													"pm.environment.set(\"token_doctor\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_doctor\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_doctor\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"email_doctor\", pm.response.json().data.item.email);\r",
													"\r",
													"//pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_doctor}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uploading_User_image_file.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "286f226b-da59-4512-a7b8-43323c182d6e",
												"exec": [
													"pm.environment.set(\"UserAva\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/unnamed.jpg"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Updating User data.Doctor",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "acb8c635-a838-46c4-aa0a-c7b13062b1c3",
												"exec": [
													"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
													"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
													"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
													"var shuffle = _.shuffle(phn);\r",
													"pm.environment.set(\"rphone\", shuffle[0]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3938c3f8-fde4-4424-9c38-5270a336646c",
												"exec": [
													"pm.environment.set(\"email_doctor\", pm.response.json().data.item.email);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.environment.get(\"rphone\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rphone}}\",\r\n  \"aboutMe\": \"{{$randomPhrase}}\",\r\n  \"avatarUuid\": \"{{UserAva}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "07c67005-2c53-4b7c-a9f7-c7a0dfbaa5a3",
													"key": "uuid",
													"value": "{{uuid_doctor}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "User login Doctor Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f60c2e73-310e-4c21-a656-c7ed463b7de8",
												"exec": [
													"pm.environment.set(\"token_doctor\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_doctor\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_doctor\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"email_doctor\", pm.response.json().data.item.email);\r",
													"\r",
													"//pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_doctor}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "self User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50a38f04-9edc-4e6c-bb2d-20781a649a72",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving User data by uuid.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "baa9e4fe-d848-4d2e-a9af-f3573555cfab",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});\r",
													"pm.test(\"Compare email\", function () {\r",
													"    pm.expect(jsonData.data.item.email).to.eql(pm.environment.get(\"email_doctor\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "6a6098b9-6733-4739-b9f7-202351628ae3",
													"key": "uuid",
													"value": "{{uuid_doctor}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Super-admin2",
							"item": [
								{
									"name": "User login super-admin2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8261aa01-f045-4f2d-94e9-4d83df3324e7",
												"exec": [
													"pm.environment.set(\"token_super_admin2\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_super_admin2\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_super_admin2\", pm.response.json().data.refreshToken);\r",
													"pm.environment.set(\"token_super_admin2\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_super_admin2\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"email_super_admin2\", pm.response.json().data.item.email);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_super_admin2}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uploading_User_image_file.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3add8746-53ba-40a4-94d7-6a37ee720cdd",
												"exec": [
													"pm.environment.set(\"UserAva\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin2}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/Новая папка/wow.png"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Updating User data.super_admin2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "202dd41e-9d46-4936-bec3-0055bbaf17df",
												"exec": [
													"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
													"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
													"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
													"var shuffle = _.shuffle(phn);\r",
													"pm.environment.set(\"rphone\", shuffle[0]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4e4f365c-78d8-46ee-bb1f-4fd0b98e927c",
												"exec": [
													"pm.environment.set(\"email_super_admin2\", pm.response.json().data.item.email);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.environment.get(\"rphone\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin2}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rphone}}\",\r\n  \"aboutMe\": \"{{$randomPhrase}}\",\r\n  \"avatarUuid\": \"{{UserAva}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "5e71b188-5741-4280-983d-067e2e6d2568",
													"key": "uuid",
													"value": "{{uuid_super_admin2}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "User login super_admin2 Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "da97b2f2-1b04-4daf-aca3-0c98fce6f311",
												"exec": [
													"pm.environment.set(\"token_super_admin2\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_super_admin2\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_super_admin2\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"email_super_admin2\", pm.response.json().data.item.email);\r",
													"\r",
													"//pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_super_admin2}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "self User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1bb9669c-64c0-46d3-b738-856bff503822",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin2}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving User data by uuid.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d81c9eca-fb0c-40be-973c-e084cae10769",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});\r",
													"pm.test(\"Compare email\", function () {\r",
													"    pm.expect(jsonData.data.item.email).to.eql(pm.environment.get(\"email_doctor\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "df080db7-df2a-49a9-a0df-6f79deaf6a91",
													"key": "uuid",
													"value": "{{uuid_super_admin2}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Retrieving collection of Pharmacist data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45cd24ea-023a-49af-a2f9-cb4000f779e2",
										"exec": [
											"pm.environment.set(\"uuid_unk\", pm.response.json().data.items[0].uuid);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const pharmacist = jsonData.data.items.find(u => u.email === pm.environment.get(\"email_pharmacist\"));\r",
											"const pharmacist_email = pharmacist ? pharmacist.email : 'not found';\r",
											"\r",
											"console.log(pharmacist);\r",
											"console.log(pharmacist_email);\r",
											"\r",
											"pm.test(\"Compare pharmacist_email\", function () {\r",
											"    pm.expect(pharmacist_email).to.eql(pm.environment.get(\"email_pharmacist\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_super_admin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving collection of Doctor data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ef1c11cb-0179-4d0e-9dd2-b46b90f0c475",
										"exec": [
											"pm.environment.set(\"uuid_unk\", pm.response.json().data.items[0].uuid);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const doctor = jsonData.data.items.find(u => u.email === pm.environment.get(\"email_doctor\"));\r",
											"const email_doctor = doctor ? doctor.email : 'not found';\r",
											"\r",
											"console.log(doctor);\r",
											"console.log(email_doctor);\r",
											"\r",
											"pm.test(\"Compare doctor_email\", function () {\r",
											"    pm.expect(email_doctor).to.eql(pm.environment.get(\"email_doctor\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_super_admin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/doctors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"doctors"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test global product",
					"item": [
						{
							"name": "Super-admin",
							"item": [
								{
									"name": "Load img",
									"item": [
										{
											"name": "User login super-admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0ca82bd-6925-449b-8657-02af8c65a198",
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().data.token);\r",
															"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
															"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												},
												"description": "User login."
											},
											"response": [
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if authentication failing",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if request parameters is not valid",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns tokens and user",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Uploading_User_image_file.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "773c456d-3517-46da-b364-e7ef85cb2eee",
														"exec": [
															"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (31).jpg"
														},
														{
															"key": "",
															"value": "",
															"type": "text",
															"disabled": true
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "81482241-f48d-424b-a6c9-2072a1beb2a9",
														"exec": [
															"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (30).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "21b0c921-6192-473c-978d-cdce818fc9bc",
														"exec": [
															"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (32).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c8130ee9-326f-4eb4-94aa-a4769bac5fc1",
														"exec": [
															"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (33).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 5",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "81ba59c2-5966-4a2d-936d-31a05199c5f9",
														"exec": [
															"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (34).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "User login super-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9446e62c-dfba-4c7f-bccb-bfd7f0cd4695",
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. Required fields",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "748a0ee4-d33d-4bd4-a9cb-4a76d7cce59f",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e04103dc-e473-4902-8ed3-b40e1edae5b2",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"kkn131/wqde\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Editing Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ff6c49e3-9082-4835-b4cb-bd34a79b3997",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}} ",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Вальпро́евая кислота́ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 450 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"A06A\",\n    \"manufacturerName\": \"SANOFI WINTHROP\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"fdbfdb/fewf32\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "3c67a011-675b-409c-9cdc-e74911f42215",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Editing Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product edited",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Editing Global product. Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e511d26-5b27-4150-9238-338802d70f1e",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}} ",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Вальпро́евая кислdота́ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 450 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"A06A\",\n    \"manufacturerName\": \"SANOFI WINTHROP\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"fdbfdb/fewf32\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": false,\n    \"engNameIsCustom\": false,\n    \"barCodesIsCustom\": false,\n    \"activeSubstancesIsCustom\": false,\n    \"nozologiesIsCustom\": false,\n    \"kfgsIsCustom\": false,\n    \"releaseFormIsCustom\": false,\n    \"registrationDateIsCustom\": false,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "50205b0d-5186-4964-90be-feafd63da493",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Editing Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product edited",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bc57ea35-f24c-4f0c-bd4c-a46ad794aeea",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);\r",
													"console.log(pm.environment.get(\"date\"))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ff875120-4c94-43e4-82bc-60256e7be426",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 742,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": false,\n    \"engNameIsCustom\": false,\n    \"barCodesIsCustom\": false,\n    \"activeSubstancesIsCustom\": false,\n    \"nozologiesIsCustom\": false,\n    \"kfgsIsCustom\": false,\n    \"releaseFormIsCustom\": false,\n    \"registrationDateIsCustom\": false,\n    \"registrationNumberIsCustom\": false,\n    \"descriptionIsCustom\": false,\n    \"categoryIsCustom\": false,\n    \"fgtIsCustom\": false,\n    \"picturesIsCustom\": false,\n    \"manufacturerIsCustom\": false\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. Full",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3dcc6884-9f33-4946-80f1-d4152fe38e30",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGPPr\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ruNameGlPr\", pm.response.json().data.item.rusName);\r",
													"console.log(pm.environment.get(\"date\"))\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "85bf0eff-4428-4e47-8d30-effd124d8a39",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Цитрат калия\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"VALPROCOM\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": \"04.005\",\n    \"pictureUuids\": [\n    \"{{pharmacyImage1}}\",\n    \"{{pharmacyImage2}}\",\n    \"{{pharmacyImage3}}\",\n    \"{{pharmacyImage4}}\",\n    \"{{pharmacyImage5}}\"\n       \n    ],\n    \"barCodes\": [\n        \"5995327206042\",\n        \"4260085520282\",\n        \"8901086130273\"\n    ],\n    \"activeSubstances\": [\n        \"sulfadoxine\",\n        \"tocopherol\",\n        \"triphosadenine\"\n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \"A54\",\n        \"A56\",\n        \"A69.1\"\n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Disable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06870120-045b-46c9-a01c-407d6f0bf612",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"id": "ac4c4451-2330-40a6-adc3-7e00ad410685",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Disable Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product disabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check disable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d43f4475-d002-405d-8c36-909c8d75c28f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=false\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "52021624-394d-411b-9a28-8e8ae27a5f41",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6774911f-7c14-4595-bf93-d5ad22ccc5d7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"id": "7bbe0059-af6f-4a00-8769-8acff572f0ad",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Enable Global product."
									},
									"response": [
										{
											"name": "Global product enabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check Enable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bfbe866d-09fb-40bf-b2a9-d5e5c2f50098",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=true\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "8964d347-b771-425a-8232-86c372f7230b",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of Prototype products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "26482daf-1576-4296-81e8-99cf8c3a878a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/prototype-products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"prototype-products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product by GlPrprototype Full fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ca0c03fd-c2dd-4cc8-a1c9-8e0447944fbc",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": {{IdNewGPPr}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": false,\r\n  \"engNameIsCustom\": false,\r\n  \"barCodesIsCustom\": false,\r\n  \"activeSubstancesIsCustom\": false,\r\n  \"nozologiesIsCustom\": false,\r\n  \"kfgsIsCustom\": false,\r\n  \"releaseFormIsCustom\": false,\r\n  \"registrationDateIsCustom\": false,\r\n  \"registrationNumberIsCustom\": false,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": false,\r\n  \"fgtIsCustom\": false,\r\n  \"picturesIsCustom\": false,\r\n  \"manufacturerIsCustom\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{PharmaIdCr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving global products card.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "813b3714-d74f-4d46-a946-7f55fab4d566",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true,
											"user-agent": true
										}
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept-language",
												"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,kn;q=0.6,fr;q=0.5",
												"type": "text"
											},
											{
												"key": "cache-control",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "pragma",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "referer",
												"value": "https://api.pharmacies.fmc-dev.com/api/v1/doc",
												"type": "text"
											},
											{
												"key": "sec-fetch-dest",
												"value": "empty",
												"type": "text"
											},
											{
												"key": "sec-fetch-mode",
												"value": "cors",
												"type": "text"
											},
											{
												"key": "sec-fetch-site",
												"value": "same-origin",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36",
												"type": "text"
											},
											{
												"key": "scheme",
												"value": "https",
												"type": "text"
											},
											{
												"key": "cookie",
												"value": "_ym_d=1600325189; _ym_uid=159911821299971824; _ga=GA1.2.364649818.1600325190; _gid=GA1.2.2069105132.1600325190; _gcl_au=1.1.666428308.1600343177; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1",
												"type": "text"
											},
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "efb7dfce-0757-47ee-98fe-d70ba061ba66",
													"key": "id",
													"value": "{{IdNewGPPr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving products search data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c661a462-4f6e-43f7-b921-c4fa930170cf",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.globalProductId === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.globalProductId : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/search?name={{ruNameGlPr}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"search"
											],
											"query": [
												{
													"key": "regionId",
													"value": "21",
													"disabled": true
												},
												{
													"key": "categoryCode",
													"value": "D07AC14",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{ruNameGlPr}}"
												},
												{
													"key": "barCode",
													"value": "4260085520282",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of Global products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a3a57e86-eb96-4b19-b5d2-e7651397bbed",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.id : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-products"
											],
											"query": [
												{
													"key": "page",
													"value": "",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "",
													"disabled": true
												},
												{
													"key": "barCode",
													"value": "8901086130273",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{ruNameGlPr}}",
													"disabled": true
												},
												{
													"key": "all",
													"value": "true",
													"disabled": true
												},
												{
													"key": "id",
													"value": "1982",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Load img",
									"item": [
										{
											"name": "User login admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bd5055ee-9987-4ec2-a059-9b6e86374d3a",
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().data.token);\r",
															"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
															"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"admin1@example.com\",\n    \"password\": \"pw1234\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												},
												"description": "User login."
											},
											"response": [
												{
													"name": "Returns if request parameters is not valid",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns tokens and user",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if authentication failing",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Uploading_User_image_file.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eeee5ce8-dee3-48fd-b4c8-9ef5fb7621b7",
														"exec": [
															"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (31).jpg"
														},
														{
															"key": "",
															"value": "",
															"type": "text",
															"disabled": true
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cd3148c4-0b2f-4a63-bbbf-6d11236c36dc",
														"exec": [
															"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (30).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dd230644-e64d-4a03-ba90-d308d6453561",
														"exec": [
															"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (32).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "31a09161-0ffa-4341-89fd-9428bb0df2a3",
														"exec": [
															"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (33).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 5",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0582d305-a168-47ae-94e9-d038620032b6",
														"exec": [
															"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (34).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "User login admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b5b2d3e8-6443-4c97-884e-9b691425113f",
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. Required fields",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "125ed0f5-41a2-4624-a26e-23e1c8c303f3",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "896efa39-0377-4450-87ae-36575ed74f6f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"kkn131/wqde\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Editing Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "64b20401-c93d-44c8-9f6a-290cd9863220",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Вальпро́евая кислота́ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 450 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"A06A\",\n    \"manufacturerName\": \"SANOFI WINTHROP\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"fdbfdb/fewf32\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "8260b763-324b-400e-b4f8-afd6cbb3aeb4",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Editing Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product edited",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3fc455db-1c94-4e6b-b3c4-508e16f16412",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);\r",
													"console.log(pm.environment.get(\"date\"))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a762dc16-c932-48c5-9850-d9df05803dbb",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 520,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": false,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID Full",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "27c8d449-8f93-4023-93f2-ee014303173e",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGPPr\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ruNameGlPr\", pm.response.json().data.item.rusName);\r",
													"console.log(pm.environment.get(\"date\"))\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ab465480-c705-4f6f-8ee4-74ba6e9926aa",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Цитрат калия\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 520,\n    \"engName\": \"VALPROCOM\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": \"04.005\",\n    \"pictureUuids\": [\n    \"{{pharmacyImage1}}\",\n    \"{{pharmacyImage2}}\",\n    \"{{pharmacyImage3}}\",\n    \"{{pharmacyImage4}}\",\n    \"{{pharmacyImage5}}\"\n       \n    ],\n    \"barCodes\": [\n        \"5995327206042\",\n        \"4260085520282\",\n        \"8901086130273\"\n    ],\n    \"activeSubstances\": [\n        \"sulfadoxine\",\n        \"tocopherol\",\n        \"triphosadenine\"\n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \"A54\",\n        \"A56\",\n        \"A69.1\"\n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Disable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "107810eb-bfe2-4ecc-96c7-53bc5cf1be4a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"id": "6199bef5-1a91-4fc6-a776-fb51393e1fca",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Disable Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product disabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check disable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f8abd511-21d5-4505-bb60-09a5eadf2c2e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=false\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "d84a3b57-0e2c-4e87-9b70-d81092a7a64c",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6f3da0f9-4f30-4ecd-8fd3-0862a64a2aba",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"id": "c0b0d009-1bec-4b13-a81c-152e678f56cc",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Enable Global product."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product enabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check Enable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a6be47a8-5b85-441e-97c7-50d9bd3ebd98",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=true\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "8449f3b5-4833-4775-a486-fb61963f83ef",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of Prototype products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b9148a1f-3d7e-4246-8b14-1a4b8c2b50a1",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/prototype-products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"prototype-products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product by GlPrprototype Full fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf5bd218-a72a-487d-b5ef-98b7f94db54a",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": {{IdNewGPPr}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": false,\r\n  \"engNameIsCustom\": false,\r\n  \"barCodesIsCustom\": false,\r\n  \"activeSubstancesIsCustom\": false,\r\n  \"nozologiesIsCustom\": false,\r\n  \"kfgsIsCustom\": false,\r\n  \"releaseFormIsCustom\": false,\r\n  \"registrationDateIsCustom\": false,\r\n  \"registrationNumberIsCustom\": false,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": false,\r\n  \"fgtIsCustom\": false,\r\n  \"picturesIsCustom\": false,\r\n  \"manufacturerIsCustom\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"id": "fbb35ba3-38de-4c32-9a9c-a8fd7dec3b8a",
													"key": "id",
													"value": "3",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving global products card.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e4cc5fc3-081e-46b7-a2c0-5bbef12ce24a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true,
											"user-agent": true
										}
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept-language",
												"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,kn;q=0.6,fr;q=0.5",
												"type": "text"
											},
											{
												"key": "cache-control",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "pragma",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "referer",
												"value": "https://api.pharmacies.fmc-dev.com/api/v1/doc",
												"type": "text"
											},
											{
												"key": "sec-fetch-dest",
												"value": "empty",
												"type": "text"
											},
											{
												"key": "sec-fetch-mode",
												"value": "cors",
												"type": "text"
											},
											{
												"key": "sec-fetch-site",
												"value": "same-origin",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36",
												"type": "text"
											},
											{
												"key": "scheme",
												"value": "https",
												"type": "text"
											},
											{
												"key": "cookie",
												"value": "_ym_d=1600325189; _ym_uid=159911821299971824; _ga=GA1.2.364649818.1600325190; _gid=GA1.2.2069105132.1600325190; _gcl_au=1.1.666428308.1600343177; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1",
												"type": "text"
											},
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "be4ad10f-4eb1-42f8-ba31-a45e6c293099",
													"key": "id",
													"value": "{{IdNewGPPr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving products search data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a9bde15-0bc8-42a8-825e-927ca4b56bdc",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.globalProductId === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.globalProductId : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/search?name={{ruNameGlPr}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"search"
											],
											"query": [
												{
													"key": "regionId",
													"value": "21",
													"disabled": true
												},
												{
													"key": "categoryCode",
													"value": "D07AC14",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{ruNameGlPr}}"
												},
												{
													"key": "barCode",
													"value": "4260085520282",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of Global products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d5582096-b332-42e7-bb36-c26114dffdac",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.id : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-products?barCode=8901086130273",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-products"
											],
											"query": [
												{
													"key": "page",
													"value": "",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "",
													"disabled": true
												},
												{
													"key": "barCode",
													"value": "8901086130273"
												},
												{
													"key": "name",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Manager",
							"item": [
								{
									"name": "Load img",
									"item": [
										{
											"name": "User login manager",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6164c9e6-833b-45e3-a81f-f660a5be3e68",
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().data.token);\r",
															"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
															"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"manager1@example.com\",\n    \"password\": \"pw1234\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												},
												"description": "User login."
											},
											"response": [
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if authentication failing",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if request parameters is not valid",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns tokens and user",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Uploading_User_image_file.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4cd92951-c825-413e-be9b-5ff28622ed91",
														"exec": [
															"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (31).jpg"
														},
														{
															"key": "",
															"value": "",
															"type": "text",
															"disabled": true
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "39891e9f-9835-4e81-93b3-8325528fe8c3",
														"exec": [
															"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (30).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4896f684-c117-4fdf-9c77-c2f93659a649",
														"exec": [
															"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (32).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b416ef74-d168-4cef-a2fd-0bdc86d2ea92",
														"exec": [
															"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (33).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 5",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0533e399-b00a-4d38-978f-58ed8fe25f8f",
														"exec": [
															"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (34).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "User login manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "36e76e86-cb1f-4d58-8096-1dbc0991f9e2",
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"manager1@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. Required fields",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "538b317b-7c02-4be6-a439-adb10f17e3f7",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a63cf200-a9d0-4e7d-ad7c-f67471c130d8",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"kkn131/wqde\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Editing Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ec81b394-91ac-4e75-bea8-95fadbb2bbd4",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Вальпро́евая кислота́ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 450 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"A06A\",\n    \"manufacturerName\": \"SANOFI WINTHROP\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"fdbfdb/fewf32\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "15c975f4-e683-492c-b7d3-9846c65076bc",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Editing Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product edited",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "960c735b-5dc7-4a55-a24d-0e2e6b3797d7",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);\r",
													"console.log(pm.environment.get(\"date\"))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8e6ddc59-9141-494a-8671-fe2ef38433e6",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 520,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": false,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID Full",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9fa3bd31-a6d2-4a3d-b3c1-c6a3a7793ab4",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGPPr\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ruNameGlPr\", pm.response.json().data.item.rusName);\r",
													"console.log(pm.environment.get(\"date\"))\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c5f201cb-023c-4d92-8365-33e003f3a975",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Цитрат калия\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 520,\n    \"engName\": \"VALPROCOM\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": \"04.005\",\n    \"pictureUuids\": [\n    \"{{pharmacyImage1}}\",\n    \"{{pharmacyImage2}}\",\n    \"{{pharmacyImage3}}\",\n    \"{{pharmacyImage4}}\",\n    \"{{pharmacyImage5}}\"\n       \n    ],\n    \"barCodes\": [\n        \"5995327206042\",\n        \"4260085520282\",\n        \"8901086130273\"\n    ],\n    \"activeSubstances\": [\n        \"sulfadoxine\",\n        \"tocopherol\",\n        \"triphosadenine\"\n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \"A54\",\n        \"A56\",\n        \"A69.1\"\n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Disable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f4515246-459c-4304-9833-f4c7deff610e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"id": "b39a1b7a-3f8f-4a87-bab9-af4e9d1d4af9",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Disable Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product disabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check disable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8e922165-2e91-4ce2-b80d-94bb1e0e0f96",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=false\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "d2bf1632-8082-49bc-b246-c6aaaf2bcf48",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e7bb39f4-2a71-4a7a-894f-22cbb80729c0",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"id": "4a0aba26-a6b3-48a7-b438-6f31611a91ac",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Enable Global product."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product enabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check Enable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "14abf207-6dfe-4ef2-92c6-f911d5967266",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=true\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "828c7c8c-56d3-467d-8c9e-f5a1390b7c26",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of Prototype products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "52a27a9b-becb-4417-aa26-356d1bd1addb",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/prototype-products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"prototype-products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product by GlPrprototype Full fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f2951de7-8a5c-4381-9fdc-566b9f336d6f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": {{IdNewGPPr}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": false,\r\n  \"engNameIsCustom\": false,\r\n  \"barCodesIsCustom\": false,\r\n  \"activeSubstancesIsCustom\": false,\r\n  \"nozologiesIsCustom\": false,\r\n  \"kfgsIsCustom\": false,\r\n  \"releaseFormIsCustom\": false,\r\n  \"registrationDateIsCustom\": false,\r\n  \"registrationNumberIsCustom\": false,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": false,\r\n  \"fgtIsCustom\": false,\r\n  \"picturesIsCustom\": false,\r\n  \"manufacturerIsCustom\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"id": "eb47b3fc-2cf9-4a21-9a94-c3635b22e480",
													"key": "id",
													"value": "3",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving global products card.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "38749d39-2f2b-42c5-bb8c-70618a02643c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true,
											"user-agent": true
										}
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept-language",
												"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,kn;q=0.6,fr;q=0.5",
												"type": "text"
											},
											{
												"key": "cache-control",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "pragma",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "referer",
												"value": "https://api.pharmacies.fmc-dev.com/api/v1/doc",
												"type": "text"
											},
											{
												"key": "sec-fetch-dest",
												"value": "empty",
												"type": "text"
											},
											{
												"key": "sec-fetch-mode",
												"value": "cors",
												"type": "text"
											},
											{
												"key": "sec-fetch-site",
												"value": "same-origin",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36",
												"type": "text"
											},
											{
												"key": "scheme",
												"value": "https",
												"type": "text"
											},
											{
												"key": "cookie",
												"value": "_ym_d=1600325189; _ym_uid=159911821299971824; _ga=GA1.2.364649818.1600325190; _gid=GA1.2.2069105132.1600325190; _gcl_au=1.1.666428308.1600343177; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1",
												"type": "text"
											},
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "2e09f7ac-daea-427e-8bd0-005b06795636",
													"key": "id",
													"value": "{{IdNewGPPr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving products search data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76ce6ed6-d746-46b9-8397-ced18ce2ebc2",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.globalProductId === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.globalProductId : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/search?name={{ruNameGlPr}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"search"
											],
											"query": [
												{
													"key": "regionId",
													"value": "21",
													"disabled": true
												},
												{
													"key": "categoryCode",
													"value": "D07AC14",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{ruNameGlPr}}"
												},
												{
													"key": "barCode",
													"value": "4260085520282",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of Global products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "783ddea1-488c-47c4-a595-2e5f262ea77c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.id : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-products?barCode=8901086130273",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-products"
											],
											"query": [
												{
													"key": "page",
													"value": "",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "",
													"disabled": true
												},
												{
													"key": "barCode",
													"value": "8901086130273"
												},
												{
													"key": "name",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test collection",
					"item": [
						{
							"name": "Customer registration.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "35da42c4-be89-4857-8edc-d45c944abe4a",
										"exec": [
											"pm.environment.set(\"phone_customer\", pm.response.json().data.item.phone);\r",
											"pm.environment.set(\"custId\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"custName\", pm.response.json().data.item.name);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bc224efb-79e5-4903-9f01-be7ef02e1d96",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"registration"
									]
								},
								"description": "Creating Customer, generating code for it and sending sms."
							},
							"response": [
								{
									"name": "Customer created and sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Customer data as user.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe52ee81-bdc0-461c-b77b-0ec9f9d0fc59",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const idCust = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"custId\")));\r",
											"const idCust2 = idCust ? idCust.id : 'not found';\r",
											"console.log (idCust)\r",
											"\r",
											"pm.test(\"Compare customer_id\", function () {\r",
											"    pm.expect(idCust2).to.eql(parseInt(pm.environment.get(\"custId\")));\r",
											"});\r",
											"pm.test(\"Compare customer_name\", function () {\r",
											"    pm.expect(idCust.name).to.eql(pm.environment.get(\"custName\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"customers"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "10",
											"disabled": true
										},
										{
											"key": "id",
											"value": "61",
											"disabled": true
										},
										{
											"key": "name",
											"value": "Lorna.Klein63",
											"disabled": true
										},
										{
											"key": "email",
											"value": "Blanche.OKon@hotmail.com",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "258852677007",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "desc",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Global product. Full",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "317556ea-2a85-4e9f-a15a-74028d4a5833",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"IdNewGPPr\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"ruNameGlPr\", pm.response.json().data.item.rusName);\r",
											"console.log(pm.environment.get(\"date\"))\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "47804e5f-419c-47e9-a5e6-0f7f28b5b6f0",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Цитрат калия\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"VALPROCOM\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": \"04.005\",\n    \"pictureUuids\": [\n    \"{{pharmacyImage1}}\",\n    \"{{pharmacyImage2}}\",\n    \"{{pharmacyImage3}}\",\n    \"{{pharmacyImage4}}\",\n    \"{{pharmacyImage5}}\"\n       \n    ],\n    \"barCodes\": [\n        \"5995327206042\",\n        \"4260085520282\",\n        \"8901086130273\"\n    ],\n    \"activeSubstances\": [\n        \"sulfadoxine\",\n        \"tocopherol\",\n        \"triphosadenine\"\n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \"A54\",\n        \"A56\",\n        \"A69.1\"\n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/global-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"global-product"
									]
								},
								"description": "Creating Global product."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Global product created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Global products.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73880232-adcc-4f51-b5c4-a09c8c976396",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const idGlPr = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
											"const idGlPr2 = idGlPr ? idGlPr.id : 'not found';\r",
											"console.log (idGlPr)\r",
											"\r",
											"pm.test(\"Compare Global product_id\", function () {\r",
											"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
											"});\r",
											"pm.test(\"Compare Global product_name\", function () {\r",
											"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/global-products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"global-products"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										},
										{
											"key": "barCode",
											"value": "8901086130273",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{ruNameGlPr}}",
											"disabled": true
										},
										{
											"key": "all",
											"value": "false",
											"disabled": true
										},
										{
											"key": "id",
											"value": "{{IdNewGPPr}}",
											"disabled": true
										},
										{
											"key": "barCode",
											"value": "4605095001534",
											"disabled": true
										},
										{
											"key": "atc_code",
											"value": "N03AG01",
											"disabled": true
										},
										{
											"key": "active_substance",
											"value": "sulfadoxine",
											"disabled": true
										},
										{
											"key": "enabled",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving products search data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c4408b1-414a-4e15-8ea6-11116dab9fd0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const idGlPr = jsonData.data.items.find(u => u.globalProductId === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
											"const idGlPr2 = idGlPr ? idGlPr.globalProductId : 'not found';\r",
											"console.log (idGlPr)\r",
											"\r",
											"pm.test(\"Compare Global product_id\", function () {\r",
											"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
											"});\r",
											"pm.test(\"Compare Global product_name\", function () {\r",
											"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/public/products/search?name={{ruNameGlPr}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"public",
										"products",
										"search"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										},
										{
											"key": "barCode",
											"value": "8901086130273",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{ruNameGlPr}}"
										},
										{
											"key": "all",
											"value": "false",
											"disabled": true
										},
										{
											"key": "id",
											"value": "{{IdNewGPPr}}",
											"disabled": true
										},
										{
											"key": "barCode",
											"value": "4605095001534",
											"disabled": true
										},
										{
											"key": "atc_code",
											"value": "N03AG01",
											"disabled": true
										},
										{
											"key": "active_substance",
											"value": "sulfadoxine",
											"disabled": true
										},
										{
											"key": "enabled",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User registration. Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60fb36a1-46cf-4312-9feb-bd3ca62049ab",
										"exec": [
											"pm.environment.set(\"idAdmin\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"emailAdmin\", pm.response.json().data.item.email);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Created admin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.type).to.eql(\"admin\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"admin\",\n    \"adminTestFirstField\":\"{{$randomCompanyName}} test\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"registration",
										"type",
										":type"
									],
									"variable": [
										{
											"id": "d4430880-9f35-4675-b603-9b42fdd499a2",
											"key": "type",
											"value": "admin",
											"type": "string",
											"description": "(Required) user type"
										}
									]
								},
								"description": "Creating User."
							},
							"response": [
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Admin data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd7e7c00-825f-4523-9f3d-0bb49399542f",
										"exec": [
											"//count quantity users in response\r",
											"let jsonData = pm.response.json();\r",
											"let items = jsonData.data.items;\r",
											"console.log(items.length);\r",
											"\r",
											"\r",
											"const idAdmin = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"idAdmin\")));\r",
											"const idAdmin2 = idAdmin ? idAdmin.id : 'not found';\r",
											"console.log (idAdmin)\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare Admin_id\", function () {\r",
											"    pm.expect(idAdmin2).to.eql(parseInt(pm.environment.get(\"idAdmin\")));\r",
											"});\r",
											"pm.test(\"Compare Global Admin_email\", function () {\r",
											"    pm.expect(idAdmin.email).to.eql(pm.environment.get(\"emailAdmin\"));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"admins"
									],
									"query": [
										{
											"key": "order[full_name]",
											"value": "asc",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "id",
											"value": "64",
											"description": "Page items count",
											"disabled": true
										},
										{
											"key": "first_name",
											"value": "Theron",
											"disabled": true
										},
										{
											"key": "last_name",
											"value": "Gutmann",
											"disabled": true
										},
										{
											"key": "email",
											"value": "Dandre.Rogahn19@yahoo.com",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "10",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of Admin data."
							},
							"response": [
								{
									"name": "Admins list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/admins?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"admins"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/admins?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"admins"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User registration enterprise_admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "faca4c82-8a7c-4d86-866c-e4c64caa17cf",
										"exec": [
											"pm.test(\"Created type-enterprise_admin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.type).to.eql(\"enterprise_admin\");\r",
											"});\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"idEntAd\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"emailEntAd\", pm.response.json().data.item.email);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"enterprise_admin\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"registration",
										"type",
										":type"
									],
									"variable": [
										{
											"id": "a472d3f1-efe4-44c4-8cec-12cabf74be5e",
											"key": "type",
											"value": "enterprise_admin",
											"type": "string",
											"description": "(Required) user type"
										}
									]
								},
								"description": "Creating User."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add User to Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb2861ee-0016-48c8-8b10-61513b01cb3c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"add-user",
										":userEmail"
									],
									"variable": [
										{
											"id": "a0d450b2-149d-437d-bb1e-b224e0b71be9",
											"key": "id",
											"value": "3",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "97c26c96-702c-49a8-b646-917ae770a135",
											"key": "userEmail",
											"value": "{{emailEntAd}}",
											"type": "string"
										}
									]
								},
								"description": "Add User to Pharmacy."
							},
							"response": [
								{
									"name": "User added to Pharmacy",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of EnterpriseAdmin data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "999136ee-618e-4b03-9a1b-f436fdf750f8",
										"exec": [
											"//count quantity users in response\r",
											"let jsonData = pm.response.json();\r",
											"let items = jsonData.data.items;\r",
											"console.log(items.length);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const idAdmin = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"idEntAd\")));\r",
											"const idAdmin2 = idAdmin ? idAdmin.id : 'not found';\r",
											"console.log (idAdmin)\r",
											"\r",
											"pm.test(\"Compare EntAdmin_id\", function () {\r",
											"    pm.expect(idAdmin2).to.eql(parseInt(pm.environment.get(\"idEntAd\")));\r",
											"});\r",
											"pm.test(\"Compare EntAdmin_email\", function () {\r",
											"    pm.expect(idAdmin.email).to.eql(pm.environment.get(\"emailEntAd\"));\r",
											"});\r",
											"pm.test(\"Compare EntAdmin_pharmacy_id\", function () {\r",
											"    pm.expect(idAdmin.pharmacies[0].id).to.eql(3);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/enterprise-admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"enterprise-admins"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Page items count",
											"disabled": true
										},
										{
											"key": "id",
											"value": "5",
											"disabled": true
										},
										{
											"key": "first_name",
											"value": "Joshuah",
											"disabled": true
										},
										{
											"key": "last_name",
											"value": "Vandervort",
											"disabled": true
										},
										{
											"key": "email",
											"value": "Dasia_Streich96@yahoo.com",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "3",
											"disabled": true
										},
										{
											"key": "pharmacy_name",
											"value": "Pharmacy 3",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of EnterpriseAdmin data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/enterprise-admins?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"enterprise-admins"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Enterprise admins list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/enterprise-admins?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"enterprise-admins"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User registration. Enterprise_manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96f31879-9eeb-4745-a739-37d1d6ea5944",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Created enterprise_manager\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.type).to.eql(\"enterprise_manager\");\r",
											"});\r",
											"\r",
											"pm.environment.set(\"idEntMan\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"emailEntMan\", pm.response.json().data.item.email);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"enterprise_manager\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"registration",
										"type",
										":type"
									],
									"variable": [
										{
											"id": "583dd7e1-af34-406b-a2af-a852b6a5dfa8",
											"key": "type",
											"value": "enterprise_manager",
											"type": "string",
											"description": "(Required) user type"
										}
									]
								},
								"description": "Creating User."
							},
							"response": [
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add EntMan to Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c99b720-adfd-41e9-8a2f-923c8d552c9a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"add-user",
										":userEmail"
									],
									"variable": [
										{
											"id": "e15352f2-645f-443b-9e93-0146f8d0f4b7",
											"key": "id",
											"value": "3",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "00fec3da-4052-4d3f-be64-a9808a36af45",
											"key": "userEmail",
											"value": "{{emailEntMan}}",
											"type": "string"
										}
									]
								},
								"description": "Add User to Pharmacy."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User added to Pharmacy",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of EnterpriseManager data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0beed746-fb84-4a20-9d0b-00f91f469d3b",
										"exec": [
											"let jsonData = pm.response.json();\r",
											"let items = jsonData.data.items;\r",
											"console.log(items.length);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const idAdmin = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"idEntMan\")));\r",
											"const idAdmin2 = idAdmin ? idAdmin.id : 'not found';\r",
											"console.log (idAdmin)\r",
											"\r",
											"pm.test(\"Compare EntMan_id\", function () {\r",
											"    pm.expect(idAdmin2).to.eql(parseInt(pm.environment.get(\"idEntMan\")));\r",
											"});\r",
											"pm.test(\"Compare EntMan_email\", function () {\r",
											"    pm.expect(idAdmin.email).to.eql(pm.environment.get(\"emailEntMan\"));\r",
											"});\r",
											"pm.test(\"Compare EntMan_pharmacy_id\", function () {\r",
											"    pm.expect(idAdmin.pharmacies[0].id).to.eql(3);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/enterprise-managers?page=1&per_page=20&order[id]=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"enterprise-managers"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Page items count"
										},
										{
											"key": "id",
											"value": "72",
											"disabled": true
										},
										{
											"key": "first_name",
											"value": "Bernice",
											"disabled": true
										},
										{
											"key": "last_name",
											"value": "Walker",
											"disabled": true
										},
										{
											"key": "email",
											"value": "Amara_Tremblay@gmail.com",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "3",
											"disabled": true
										},
										{
											"key": "pharmacy_name",
											"value": "Pharmacy 3",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc"
										},
										{
											"key": "order[full_name]",
											"value": "desc",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of EnterpriseManager data."
							},
							"response": [
								{
									"name": "Enreprise managers list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/enterprise-managers?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"enterprise-managers"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/enterprise-managers?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"enterprise-managers"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Order- delivery_adress",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fdc0e52-2df2-4743-b698-7713b9043195",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"orderId\", pm.response.json().data.item.orderId);\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount)).to.eql(jsonData.data.item.pharmacyProductsTotalPrice);\r",
											"});\r",
											"pm.environment.set(\"Order_cost\", (pm.response.json().data.item.pharmacyProductsTotalPrice)+(pm.response.json().data.item.deliveryPrice));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": 3,\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"delivery_address\",\n     \"comment\": \"{{$randomPhrase}}\",\n     \"address\": {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     }\n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 50\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of orders. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6963ffbc-8696-4d63-a563-8266c6f774fc",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const idAdmin = jsonData.data.items.find(u => u.orderId === parseInt(pm.environment.get(\"orderId\")));\r",
											"const idAdmin2 = idAdmin ? idAdmin.orderId : 'not found';\r",
											"console.log (idAdmin)\r",
											"\r",
											"pm.test(\"Compare Order_id\", function () {\r",
											"    pm.expect(idAdmin2).to.eql(parseInt(pm.environment.get(\"orderId\")));\r",
											"});\r",
											"pm.test(\"Compare Order_sum\", function () {\r",
											"    pm.expect(idAdmin.totalPrice).to.eql(pm.environment.get(\"Order_cost\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"orders"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "order[total_price]",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "3",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_progress",
											"disabled": true
										},
										{
											"key": "status",
											"value": "done",
											"disabled": true
										},
										{
											"key": "status",
											"value": "canceled",
											"disabled": true
										},
										{
											"key": "status",
											"value": "new",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ready",
											"disabled": true
										},
										{
											"key": "status",
											"value": "to_delivery",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_delivery",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "delivery_address",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "pickup",
											"disabled": true
										},
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "",
											"disabled": true
										},
										{
											"key": "name",
											"value": "Lorna.Klein63",
											"disabled": true
										},
										{
											"key": "min_total_price",
											"value": "7633.6",
											"disabled": true
										},
										{
											"key": "max_total_price",
											"value": "7633.7",
											"disabled": true
										},
										{
											"key": "id",
											"value": "11",
											"disabled": true
										},
										{
											"key": "phone",
											"value": "258852677007",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b125b61f-f42c-4f18-8e65-f8af772b4ee3",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"PharmaIdCr\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"RegionId\", pm.response.json().data.item.region.id);\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "de1cff91-f689-43f4-8eec-9ec2eb79293c",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"phone\": \"{{rphone}}\",\n  \"regionId\": 6,\n  \"location\": {\n    \"lat\": 0,\n    \"lng\": 0,\n    \"address\": \"ул. Ньютона, 103\"\n  },\n  \"logoUuid\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy"
									]
								},
								"description": "Creating Pharmacy."
							},
							"response": [
								{
									"name": "Pharmacy created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Pharmacy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e1e0bf56-8baa-4f5c-bd81-4c2e6c94a1fb",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const pharma = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"PharmaIdCr\")));\r",
											"const pharmaid = pharma ? pharma.id : 'not found';\r",
											"\r",
											"console.log(pharma);\r",
											"console.log(pharmaid);\r",
											"\r",
											"pm.test(\"Compare pharma_id\", function () {\r",
											"    pm.expect(pharmaid).to.eql(parseInt(pm.environment.get(\"PharmaIdCr\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacies"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "order[address]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "order[user_count]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "id",
											"value": "9",
											"description": "id",
											"disabled": true
										},
										{
											"key": "name",
											"value": "Practical Steel Salad",
											"description": "Pharmacy name",
											"disabled": true
										},
										{
											"key": "address",
											"value": "ул. Ньютона",
											"description": "Pharmacy address",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "256930985096",
											"description": "Pharmacy phone number",
											"disabled": true
										},
										{
											"key": "enterprise_admin",
											"value": "",
											"description": "Pharmacy enterprise admin name",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "12",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of Pharmacy."
							},
							"response": [
								{
									"name": "Pharmacies list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacies?order[id]=<string>&order[name]=<string>&order[address]=<string>&order[user_count]=<string>&id=<integer>&name=<string>&address=<string>&phone_number=<string>&enterprise_admin=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacies"
											],
											"query": [
												{
													"key": "order[id]",
													"value": "<string>"
												},
												{
													"key": "order[name]",
													"value": "<string>"
												},
												{
													"key": "order[address]",
													"value": "<string>"
												},
												{
													"key": "order[user_count]",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "address",
													"value": "<string>"
												},
												{
													"key": "phone_number",
													"value": "<string>"
												},
												{
													"key": "enterprise_admin",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacies?order[id]=<string>&order[name]=<string>&order[address]=<string>&order[user_count]=<string>&id=<integer>&name=<string>&address=<string>&phone_number=<string>&enterprise_admin=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacies"
											],
											"query": [
												{
													"key": "order[id]",
													"value": "<string>"
												},
												{
													"key": "order[name]",
													"value": "<string>"
												},
												{
													"key": "order[address]",
													"value": "<string>"
												},
												{
													"key": "order[user_count]",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "address",
													"value": "<string>"
												},
												{
													"key": "phone_number",
													"value": "<string>"
												},
												{
													"key": "enterprise_admin",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Prototype products.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}​/api/v1/user/prototype-products",
									"host": [
										"{{baseUrl}}​"
									],
									"path": [
										"api",
										"v1",
										"user",
										"prototype-products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving collection of Customer data by phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec44961d-31e5-43a2-aa6d-c50b5ce99ad9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare id_customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].id).to.eql(pm.environment.get(\"custId\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/customers/search-by-name-or-phone?name_or_phone={{phone_customer}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"customers",
										"search-by-name-or-phone"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "name_or_phone",
											"value": "{{phone_customer}}"
										},
										{
											"key": "name_or_phone",
											"value": "{{custName}}",
											"disabled": true
										},
										{
											"key": "page",
											"value": null,
											"disabled": true
										},
										{
											"key": "per_page",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving collection of Customer data by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db1cc442-f556-47aa-b779-dbabf18e3724",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare id_customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].id).to.eql(pm.environment.get(\"custId\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/customers/search-by-name-or-phone?name_or_phone={{custName}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"customers",
										"search-by-name-or-phone"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "name_or_phone",
											"value": "{{phone_customer}}",
											"disabled": true
										},
										{
											"key": "name_or_phone",
											"value": "{{custName}}"
										},
										{
											"key": "page",
											"value": null,
											"disabled": true
										},
										{
											"key": "per_page",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieves collection of Region data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ee4bca9-22f6-4923-ba9e-799cae1caccc",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/public/regions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"public",
										"regions"
									],
									"query": [
										{
											"key": "id",
											"value": "",
											"disabled": true
										},
										{
											"key": "maxLevelCount",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Customer",
					"item": [
						{
							"name": "Customer registration.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0fc273d7-9e5a-4f1b-baaa-823a331bad3b",
										"exec": [
											"pm.environment.set(\"phone_customer\", pm.response.json().data.item.phone);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2c263166-2566-42ad-b575-dd0471e6b011",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"registration"
									]
								},
								"description": "Creating Customer, generating code for it and sending sms."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer created and sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer authentication.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92b4baff-e982-4348-a5ec-148596694182",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{phone_customer}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"auth"
									]
								},
								"description": "Generating code for Customer and sending sms."
							},
							"response": [
								{
									"name": "Sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer login. Phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9cd4b75-66b3-4088-87cd-56497891eac8",
										"exec": [
											"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
											"pm.environment.set(\"uuid_customer\", pm.response.json().data.item.uuid);\r",
											"pm.environment.set(\"refreshToken_customer\", pm.response.json().data.refreshToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"login"
									]
								},
								"description": "Customer login."
							},
							"response": [
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns tokens",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving self Customer data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "390d8725-9d90-421a-b291-0327d573c6d7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								},
								"description": "Retrieving self Customer data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer self information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Uploading Customer image file. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fe7dfff-b1df-4214-8a47-6382d49e5420",
										"exec": [
											"pm.environment.set(\"uuidImageCustomer\", pm.response.json().data.item.uuid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/D:/ProjecTs/Pharma/IMG Pharma/main_frederic.jpg"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"image"
									]
								}
							},
							"response": []
						},
						{
							"name": "Updating Customer data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03a7c56d-4847-4246-a312-98942264b91d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"avatarUuid\":\"{{uuidImageCustomer}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								},
								"description": "Updating Customer data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"avatarUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer edit self information",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"avatarUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Customer data by uuid.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f751dc0-4d2b-4edc-9391-734efaf1747b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer",
										":uuid"
									],
									"variable": [
										{
											"id": "8649b59d-1d3a-4995-82d8-c2c5c91c59fd",
											"key": "uuid",
											"value": "{{uuid_customer}}",
											"type": "string",
											"description": "(Required) customer uuid"
										}
									]
								},
								"description": "Retrieving Customer data by uuid."
							},
							"response": [
								{
									"name": "Customer information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updating Customer region.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"regionId\": 8\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer/region",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer",
										"region"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving self Customer data. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e0e7e6c-6ece-48d8-bd86-1b048bb069ac",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare uuid avatar\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"uuidImageCustomer\"));\r",
											"});\r",
											"pm.test(\"Compare uuid customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.uuid).to.eql(pm.environment.get(\"uuid_customer\"));\r",
											"});\r",
											"pm.test(\"Compare phone customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.phone).to.eql(pm.environment.get(\"phone_customer\"));\r",
											"});\r",
											"pm.test(\"Compare region\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.region.id).to.eql(8);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								},
								"description": "Retrieving self Customer data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer self information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer logout.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8c670398-82cc-40ae-9d46-7de732a1e0e7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refreshToken\": \"{{refreshToken_customer}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"logout"
									]
								},
								"description": "Customer logout."
							},
							"response": [
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"logout"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"logout"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer logout",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test recipe",
					"item": [
						{
							"name": "Recipe for another customer",
							"item": [
								{
									"name": "Customer registration.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d7bac6a7-9a02-45ec-85aa-de8bc39ac71c",
												"exec": [
													"pm.environment.set(\"phone_customer\", pm.response.json().data.item.phone);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6b4399eb-1db2-408b-9d5c-a43fe85f6c73",
												"exec": [
													"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
													"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
													"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
													"var shuffle = _.shuffle(phn);\r",
													"pm.environment.set(\"rphone\", shuffle[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										},
										"description": "Creating Customer, generating code for it and sending sms."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"registration"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Customer created and sent verification code",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"registration"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Customer login. Phone",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6e59f13-50cf-4e09-bbdc-5be590c8e97f",
												"exec": [
													"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_customer\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_customer\", pm.response.json().data.refreshToken);\r",
													"pm.environment.set(\"id_customer\", pm.response.json().data.item.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										},
										"description": "Customer login."
									},
									"response": [
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "933bd827-51b0-4766-830e-bf3ae95865e7",
												"exec": [
													"pm.environment.set(\"token_doctor\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"doctor1@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat by Customer.Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "43d80d87-c278-4ec6-8eae-216a982a3e38",
												"exec": [
													"pm.environment.set(\"ChatIdDoctor\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ChatTopicNameDoctor\", pm.response.json().data.item.topicName);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"doctor\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat"
											]
										},
										"description": "Customer initialize chat with doctor."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Chat created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Recipe.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "81af8135-c7a7-4438-bbdd-bae1c36a68be",
												"exec": [
													"var moment = require('moment')\r",
													"\r",
													"var createdAt = moment().format('DD.MM.YYYY')\r",
													"var validTill = moment().add(30, 'days').format('DD.MM.YYYY')\r",
													"\r",
													"pm.environment.set(\"createdAt\", createdAt);\r",
													"pm.environment.set(\"validTill\", validTill);\r",
													"\r",
													"console.log(createdAt)\r",
													"console.log(validTill)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "44a85eab-7f8f-4c02-8a75-05c98b2280ce",
												"exec": [
													"pm.environment.set(\"id_recipe\", pm.response.json().data.item.id);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": {{id_customer}},\n    \"diagnosis\": \"ВЕГЕТОСОСУДИСТАЯ ДИСТОНИЯ\",\n    \"createdAt\": \"{{createdAt}}\",\n    \"validTill\": \"{{validTill}}\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": 748,\n            \"count\": 4\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe"
											]
										},
										"description": "Creating Recipe."
									},
									"response": [
										{
											"name": "Recipe created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat recipe message.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9d2ad3e7-2618-4164-9e5a-a5ff31c49651",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/recipe/:recipe_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"recipe",
												":recipe_id"
											],
											"variable": [
												{
													"id": "532cb098-7d05-4813-a369-701a9acedfc6",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string"
												},
												{
													"id": "4838c589-f78d-483d-b641-7bf9b6dbc48b",
													"key": "recipe_id",
													"value": "{{id_recipe}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Customer registration. Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "010cb351-11d1-4cb0-a49f-7aca1daf8d1f",
												"exec": [
													"pm.environment.set(\"phone_customer\", pm.response.json().data.item.phone);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "052bb3dc-4396-4521-bd6e-5480de959d62",
												"exec": [
													"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
													"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
													"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
													"var shuffle = _.shuffle(phn);\r",
													"pm.environment.set(\"rphone\", shuffle[0]);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										},
										"description": "Creating Customer, generating code for it and sending sms."
									},
									"response": [
										{
											"name": "Customer created and sent verification code",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"registration"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/registration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"registration"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Customer login. Phone Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d7672998-62b3-4c19-9c9f-9d125fa39cf5",
												"exec": [
													"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_customer\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_customer\", pm.response.json().data.refreshToken);\r",
													"//pm.environment.set(\"id_customer\", pm.response.json().data.item.id);\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										},
										"description": "Customer login."
									},
									"response": [
										{
											"name": "Returns tokens",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat by Customer.Doctor Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bfdcf9dd-6f8b-4b8b-b34f-e86b4514fbe7",
												"exec": [
													"pm.environment.set(\"ChatIdDoctor\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ChatTopicNameDoctor\", pm.response.json().data.item.topicName);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_customer}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"doctor\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat"
											]
										},
										"description": "Customer initialize chat with doctor."
									},
									"response": [
										{
											"name": "Chat created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/customer/chat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"customer",
														"chat"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating chat recipe message. Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c1d096cf-dea0-43ff-a6df-51bc9d8caecc",
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/chat/chat/:id/recipe/:recipe_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"chat",
												"chat",
												":id",
												"recipe",
												":recipe_id"
											],
											"variable": [
												{
													"id": "1599a294-99b1-45c5-a9dd-9952e1a80e1c",
													"key": "id",
													"value": "{{ChatIdDoctor}}",
													"type": "string"
												},
												{
													"id": "243b7228-94f2-441e-8414-99b41f27352c",
													"key": "recipe_id",
													"value": "{{id_recipe}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Retrieving Recipe",
							"item": [
								{
									"name": "Creating Recipe.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "592fd314-8826-498c-b9c9-604ac94d3aba",
												"exec": [
													"var moment = require('moment')\r",
													"\r",
													"var createdAt = moment().format('DD.MM.YYYY')\r",
													"var validTill = moment().add(30, 'days').format('DD.MM.YYYY')\r",
													"\r",
													"pm.environment.set(\"createdAt\", createdAt);\r",
													"pm.environment.set(\"validTill\", validTill);\r",
													"\r",
													"console.log(createdAt)\r",
													"console.log(validTill)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d2e8c7c8-a73c-4938-943c-cc5075ffc491",
												"exec": [
													"pm.environment.set(\"id_recipe\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_recipe\", pm.response.json().data.item.image.uuid);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": {{id_customer}},\n    \"diagnosis\": \"ВЕГЕТОСОСУДИСТАЯ ДИСТОНИЯ\",\n    \"createdAt\": \"{{createdAt}}\",\n    \"validTill\": \"{{validTill}}\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": 1810,\n            \"count\": 4\n        }\n    ]\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe"
											]
										},
										"description": "Creating Recipe."
									},
									"response": [
										{
											"name": "Recipe created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Super-admin login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e0a7f72-fa78-4fa1-aa85-72b6ca9850e9",
												"exec": [
													"pm.environment.set(\"token_user\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"pm.environment.set(\"id_super-admin\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Recipe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2afcd687-9a3a-41ba-9d5b-2f5567fdf197",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status is active\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.status).to.eql(\"active\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{id_recipe}}",
													"type": "string",
													"description": "(Required) recipe id"
												}
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User retrieving collection of Recipe.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77bd478d-cf52-4776-974b-7e5e50699c55",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipes"
											],
											"query": [
												{
													"key": "code",
													"value": "QP77SDH94A",
													"disabled": true
												},
												{
													"key": "order[id]",
													"value": "asc",
													"disabled": true
												}
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Super-admin registration admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d0141189-058f-4cec-acf8-6d2ab939fefa",
												"exec": [
													"pm.test(\"Created admin\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.type).to.eql(\"admin\");\r",
													"});\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"email_admin\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"id_admin\", pm.response.json().data.item.id);\r",
													"//postman.setNextRequest(\"Retrieving collection of Admin data.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"admin\",\n    \"adminTestFirstField\":\"1\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "admin",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4217d520-5d01-4b8e-9a99-31e9f304f72a",
												"exec": [
													"pm.environment.set(\"token_admin\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													" pm.test(\"Compare id_admin\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.id).to.eql(pm.environment.get(\"id_admin\"));\r",
													"});\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{email_admin}}\",\n  \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Recipe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "82e2965e-25f3-43f4-ab6a-d98a9490348f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status is active\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.status).to.eql(\"active\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{id_recipe}}",
													"type": "string",
													"description": "(Required) recipe id"
												}
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User retrieving collection of Recipe.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "841f1191-0be4-4e0b-884c-5218ab62d98b",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipes"
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User registration enterprise_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "27d2e0cb-8d06-4abe-b180-2851c1e24c24",
												"exec": [
													"pm.test(\"Created type-enterprise_admin\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.type).to.eql(\"enterprise_admin\");\r",
													"});\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.environment.set(\"email_enterprise_admin\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"id_enterprise_admin\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"enterprise_admin\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "enterprise_admin",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login enterprise_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aeb0733f-102a-4041-8707-db180700f414",
												"exec": [
													"pm.environment.set(\"token_enterprise_admin\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													" pm.test(\"Compare id_enterprise_admin\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.id).to.eql(pm.environment.get(\"id_enterprise_admin\"));\r",
													"});\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{email_enterprise_admin}}\",\n  \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Recipe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "51becd79-7b75-403b-8192-cb309a809dc9",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status is active\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.status).to.eql(\"active\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_enterprise_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{id_recipe}}",
													"type": "string",
													"description": "(Required) recipe id"
												}
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User retrieving collection of Recipe.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f02b4563-c972-4319-9c24-afe94cb27222",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_enterprise_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipes"
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User registration manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "62951227-144b-45ff-89a2-6bc9a968b35d",
												"exec": [
													"pm.test(\"Created type-manager\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.type).to.eql(\"manager\");\r",
													"});\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.environment.set(\"email_manager\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"id_manager\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"manager\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "manager",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96d863db-1c88-48cb-9dc7-9a17fa4ad185",
												"exec": [
													"pm.environment.set(\"token_manager\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													" pm.test(\"Compare id_manager\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.id).to.eql(pm.environment.get(\"id_manager\"));\r",
													"});\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{email_manager}}\",\n  \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Recipe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0501f232-5a11-4319-b9d4-30aa02459738",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status is active\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.status).to.eql(\"active\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_manager}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{id_recipe}}",
													"type": "string",
													"description": "(Required) recipe id"
												}
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User retrieving collection of Recipe.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9e8d4c4b-ff18-4b97-8d19-d7a200f8a092",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_manager}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipes"
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User registration enterprise-manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "074608ab-97ce-4c37-a959-0ffffdb46218",
												"exec": [
													"pm.test(\"Created type-enterprise_manager\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.type).to.eql(\"enterprise_manager\");\r",
													"});\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"email_Enterprise-manager\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"id_Enterprise-manager\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"enterprise_manager\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"id": "853582b4-3bb9-4263-81b2-bdb82b4732cd",
													"key": "type",
													"value": "enterprise_manager",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login enterprise-manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2dffca78-0cf0-4348-b5ee-79b4d666e7a3",
												"exec": [
													"pm.environment.set(\"token_Enterprise-manager\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													" pm.test(\"Compare Enterprise-manager\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.id).to.eql(pm.environment.get(\"id_Enterprise-manager\"));\r",
													"});\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{email_Enterprise-manager}}\",\n  \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Recipe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "382196b9-6c55-4f05-b89c-cbe47117093e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status is active\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.status).to.eql(\"active\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_Enterprise-manager}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{id_recipe}}",
													"type": "string",
													"description": "(Required) recipe id"
												}
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User retrieving collection of Recipe.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "698ce787-6e22-43bf-90ad-45655aeaa5e6",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_Enterprise-manager}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipes"
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User registration doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2f34c4a7-3ce3-44ec-ab16-56060339523b",
												"exec": [
													"pm.test(\"Created type-doctor\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.type).to.eql(\"doctor\");\r",
													"});\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.environment.set(\"email_doctor\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"id_doctor\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"doctor\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "doctor",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3607e00e-6661-47b4-a545-112b245bd2a8",
												"exec": [
													"pm.environment.set(\"token_doctor\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													" pm.test(\"Compare id_doctor\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.id).to.eql(pm.environment.get(\"id_doctor\"));\r",
													"});\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"{{email_doctor}}\",\n  \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Recipe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "89534df0-ce7e-4a1e-8c39-e86239361546",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status is active\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.status).to.eql(\"active\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{id_recipe}}",
													"type": "string",
													"description": "(Required) recipe id"
												}
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User retrieving collection of Recipe.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6a17b1e-d776-46f8-b8c8-68ac936af0d8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipes"
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User registration. Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e3759fc5-4e53-4106-90ff-837696ea3d22",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"email_pharmacist\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"id_pharmacist\", pm.response.json().data.item.id);\r",
													"//enterprise_admin\r",
													"//manager\r",
													"//enterprise_manager\r",
													"//doctor\r",
													"//courier"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"firstName\": \"{{$randomFirstName}}\",\n\"lastName\": \"{{$randomLastName}}\",\n\"email\": \"{{$randomEmail}}\",\n\"password\": \"{{password}}\",\n\"type\": \"pharmacist\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "pharmacist",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ed98a18-8d71-43b0-b788-5226b2efd99e",
												"exec": [
													"pm.environment.set(\"token_pharmacist\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"\r",
													"pm.test(\"Compare id_pharmacist\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.id).to.eql(pm.environment.get(\"id_pharmacist\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_pharmacist}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Recipe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "abcbce9e-3cee-450a-96bc-65d9fbc5e94a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status is active\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.item.status).to.eql(\"active\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{id_recipe}}",
													"type": "string",
													"description": "(Required) recipe id"
												}
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User retrieving collection of Recipe.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "664fdc08-5ecf-43cd-b2b7-358dff3ac1e8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipes"
											]
										},
										"description": "Retrieving Recipe."
									},
									"response": [
										{
											"name": "Recipe data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"recipe",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Customer registration.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbae07d2-a5ae-4c4e-a225-bec5b6befec6",
										"exec": [
											"pm.environment.set(\"phone_customer\", pm.response.json().data.item.phone);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5223a17f-13b5-4fe3-bd9d-b485634200a1",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"registration"
									]
								},
								"description": "Creating Customer, generating code for it and sending sms."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer created and sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer login. Phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f0dd161-e192-4d19-9a96-3997d1201f13",
										"exec": [
											"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
											"pm.environment.set(\"uuid_customer\", pm.response.json().data.item.uuid);\r",
											"pm.environment.set(\"refreshToken_customer\", pm.response.json().data.refreshToken);\r",
											"pm.environment.set(\"id_customer\", pm.response.json().data.item.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"login"
									]
								},
								"description": "Customer login."
							},
							"response": [
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns tokens",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User login pharmacist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bfb36c32-38f8-4e94-9ad7-8eb010dd3ba7",
										"exec": [
											"pm.environment.set(\"token_pharmacist\", pm.response.json().data.token);\r",
											"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
											"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"pharmacist1@example.com\",\n    \"password\": \"pw1234\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"login"
									]
								},
								"description": "User login."
							},
							"response": [
								{
									"name": "Returns tokens and user",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User login doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9fa6d2fb-715d-421a-8c09-f14e8ab5a0f3",
										"exec": [
											"pm.environment.set(\"token_doctor\", pm.response.json().data.token);\r",
											"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
											"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"doctor1@example.com\",\n    \"password\": \"pw1234\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"login"
									]
								},
								"description": "User login."
							},
							"response": [
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns tokens and user",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating chat by Customer.Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "972a0ff7-1e69-47a2-8b99-05b75a3ada86",
										"exec": [
											"pm.environment.set(\"ChatIdDoctor\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"ChatTopicNameDoctor\", pm.response.json().data.item.topicName);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\": \"doctor\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/chat",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"chat"
									]
								},
								"description": "Customer initialize chat with doctor."
							},
							"response": [
								{
									"name": "Chat created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/chat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"chat"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Recipe.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e1ee027e-ac6a-4c1a-98dc-4147ec372c46",
										"exec": [
											"var moment = require('moment')\r",
											"\r",
											"var createdAt = moment().format('DD.MM.YYYY')\r",
											"var validTill = moment().add(30, 'days').format('DD.MM.YYYY')\r",
											"\r",
											"pm.environment.set(\"createdAt\", createdAt);\r",
											"pm.environment.set(\"validTill\", validTill);\r",
											"\r",
											"console.log(createdAt)\r",
											"console.log(validTill)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5517c3fd-9acc-4924-93f9-4948535cc980",
										"exec": [
											"pm.environment.set(\"id_recipe\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"uuid_recipe\", pm.response.json().data.item.image.uuid);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_doctor}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customerId\": {{id_customer}},\n    \"diagnosis\": \"ВЕГЕТОСОСУДИСТАЯ ДИСТОНИЯ\",\n    \"createdAt\": \"{{createdAt}}\",\n    \"validTill\": \"{{validTill}}\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": 1810,\n            \"count\": 4\n        }\n    ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"recipe"
									]
								},
								"description": "Creating Recipe."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Recipe created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Recipe Status active",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4d059dd8-b58c-4ab2-b921-e898bfe5fbce",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is active\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"active\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_doctor}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"recipe",
										":id"
									],
									"variable": [
										{
											"id": "24aefb49-a8b4-4d6a-ba11-71813c7b92fe",
											"key": "id",
											"value": "{{id_recipe}}",
											"type": "string",
											"description": "(Required) recipe id"
										}
									]
								},
								"description": "Retrieving Recipe."
							},
							"response": [
								{
									"name": "Recipe data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer retrieving collection of Recipe. Active",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26902d04-ee45-44a0-a9c1-e60d9a84088a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is active\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items.status).to.eql(\"active\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/recipes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"recipes"
									]
								},
								"description": "Retrieving Recipe."
							},
							"response": [
								{
									"name": "Recipe data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Close Recipe.",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/recipe/:id/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"recipe",
										":id",
										"close"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{id_recipe}}",
											"type": "string",
											"description": "(Required) Recipe id"
										}
									]
								},
								"description": "Close Recipe."
							},
							"response": [
								{
									"name": "Resipe closed",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id",
												"close"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id",
												"close"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id",
												"close"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Recipe. Closed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bbeb9976-2239-47ca-a2e9-061601d0f471",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is closed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"closed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_doctor}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{id_recipe}}",
											"type": "string",
											"description": "(Required) recipe id"
										}
									]
								},
								"description": "Retrieving Recipe."
							},
							"response": [
								{
									"name": "Recipe data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer retrieving collection of Recipe. Closed",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09eb4808-9c17-4503-a2ce-1fe6aa16dfc7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status is active\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items.status).to.eql(\"Closed\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/recipes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"recipes"
									]
								},
								"description": "Retrieving Recipe."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Recipe data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Recipe. Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a53f6d15-61d6-4c1f-a246-2eeaf5102ab2",
										"exec": [
											"var moment = require('moment')\r",
											"\r",
											"var createdAt = moment().format('DD.MM.YYYY')\r",
											"var validTill = moment().add(30, 'days').format('DD.MM.YYYY')\r",
											"\r",
											"pm.environment.set(\"createdAt\", createdAt);\r",
											"pm.environment.set(\"validTill\", validTill);\r",
											"\r",
											"console.log(createdAt)\r",
											"console.log(validTill)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2102d986-198b-41b0-96db-ffd7077af91e",
										"exec": [
											"pm.environment.set(\"id_recipe\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"uuid_recipe\", pm.response.json().data.item.image.uuid);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_doctor}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"customerId\": {{id_customer}},\n    \"diagnosis\": \"ВЕГЕТОСОСУДИСТАЯ ДИСТОНИЯ\",\n    \"createdAt\": \"{{createdAt}}\",\n    \"validTill\": \"{{validTill}}\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": 748,\n            \"count\": 4\n        }\n    ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"recipe"
									]
								},
								"description": "Creating Recipe."
							},
							"response": [
								{
									"name": "Recipe created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"customerId\": \"<integer>\",\n    \"diagnosis\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"validTill\": \"<string>\",\n    \"recipeProductCreateDataList\": [\n        {\n            \"globalProductId\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User retrieving collection of Recipe.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c287b7be-9943-4d69-87b8-f597fd496f80",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_doctor}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/recipes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"recipes"
									]
								},
								"description": "Retrieving Recipe."
							},
							"response": [
								{
									"name": "Recipe data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User retrieving collection of Recipe. Super_admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "66eb26ee-be91-4074-a8b0-df8b904819b2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/recipes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"recipes"
									]
								},
								"description": "Retrieving Recipe."
							},
							"response": [
								{
									"name": "Recipe data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User retrieving collection of Recipe. Pharmacist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "686af727-24a1-48d3-9ed0-8939b47fd0dd",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_pharmacist}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/recipes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"recipes"
									]
								},
								"description": "Retrieving Recipe."
							},
							"response": [
								{
									"name": "Recipe data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer retrieving collection of Recipe.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/recipes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"recipes"
									]
								},
								"description": "Retrieving Recipe."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Recipe data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/recipe/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"recipe",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating chat recipe message.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_doctor}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chat/chat/:id/recipe/:recipe_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"chat",
										":id",
										"recipe",
										":recipe_id"
									],
									"variable": [
										{
											"id": "e35aac56-106b-42e1-aa56-b1908a2f0981",
											"key": "id",
											"value": "{{ChatIdDoctor}}",
											"type": "string"
										},
										{
											"id": "d0bbe0ce-3240-4737-a306-b7bf73cb5883",
											"key": "recipe_id",
											"value": "{{id_recipe}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Downloading recipe image file Doctor",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15e968f3-e3d4-4473-9279-c705dfd09e26",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_doctor}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/recipe/file/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"recipe",
										"file",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "{{uuid_recipe}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Downloading recipe image file Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "668aa80b-572c-4390-8eae-3463708f8d6a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "responseType",
										"value": "Blob",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/recipe/file/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"recipe",
										"file",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "{{uuid_recipe}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Downloading recipe image file Pmarmacist",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4251fdd1-fcf3-4e7b-ab4d-c114f3be1e84",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_pharmacist}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/recipe/file/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"recipe",
										"file",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "{{uuid_recipe}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving collection of Customer data by phone number or name as user.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a26cc630-905e-40b6-a2a3-16f3ac56025e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_doctor}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/customers/search-by-name-or-phone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"customers",
										"search-by-name-or-phone"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "//api.pharmacies.release.fmc-dev.com",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}