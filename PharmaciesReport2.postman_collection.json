{
	"info": {
		"_postman_id": "ae706007-0535-436f-a5b3-eadae9041941",
		"name": "PharmaciesReport2",
		"description": "Pharmacies",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test",
			"item": [
				{
					"name": "Test pharmacy",
					"item": [
						{
							"name": "User login super-admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f1cb676-5743-453c-8a27-2c06985b8684",
										"exec": [
											"pm.environment.set(\"token_user\", pm.response.json().data.token);\r",
											"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
											"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"login"
									]
								},
								"description": "User login."
							},
							"response": [
								{
									"name": "Returns tokens and user",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "368987ae-6a6b-4d1e-b647-0ac8b0380693",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//pm.environment.set(\"pharmacyPrId\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"PharmaIdCr\", pm.response.json().data.item.id);\r",
											"\r",
											"pm.environment.set(\"RegionId\", pm.response.json().data.item.region.id);\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a4d7e95-a331-4cc4-90e0-7372e70637a9",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"phone\": \"{{rphone}}\",\n  \"regionId\": 6,\n  \"location\": {\n    \"lat\": 0,\n    \"lng\": 0,\n    \"address\": \"ул. Ньютона, 103\"\n  },\n  \"logoUuid\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy"
									]
								},
								"description": "Creating Pharmacy."
							},
							"response": [
								{
									"name": "Pharmacy created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf36f86e-ea5d-4d23-92a1-98a7fb5a5bad",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"        pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											"pm.test(\"regionId=6\", function () {\r",
											"        pm.expect(jsonData.data.item.region.id).to.eql(6);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"id": "f240aaa3-dc4f-44f3-93e8-e611ccb5be18",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								},
								"description": "Retrieving Pharmacy data."
							},
							"response": [
								{
									"name": "Pharmacy information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Uploading_User_image_file.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7717fa6c-75ce-44d8-962a-7f54a908753e",
										"exec": [
											"pm.environment.set(\"imglogo\", pm.response.json().data.item.uuid);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/D:/ProjecTs/Pharma/IMG Pharma/Pharmacy.png"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"image"
									]
								}
							},
							"response": []
						},
						{
							"name": "Editing Pharmacy.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7581fad9-4e8b-4220-9ed0-664963a987e1",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3d611d64-e679-47ab-9e6d-8d324a248580",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"phone\": \"{{rphone}}\",\n  \"regionId\": 4,\n  \"location\": {\n    \"lat\": 0,\n    \"lng\": 0,\n    \"address\": \"ул. Калатушкина, 666\"\n  },\n  \"logoUuid\": \"{{imglogo}}\"\n           \n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Editing Pharmacy."
							},
							"response": [
								{
									"name": "Pharmacy edited",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy data. Сhange",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7eec15dd-a457-4c61-85c3-9bd5a0e58c63",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"regionId=4\", function () {\r",
											"        pm.expect(jsonData.data.item.region.id).to.eql(4);\r",
											"});\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"       pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"id": "cd95a8f6-3c65-4866-a187-905b9cee6635",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								},
								"description": "Retrieving Pharmacy data."
							},
							"response": [
								{
									"name": "Pharmacy information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Pharmacy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d9618af-848f-44bf-9acb-99531e31ad63",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const pharma = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"PharmaIdCr\")));\r",
											"const pharmaid = pharma ? pharma.id : 'not found';\r",
											"\r",
											"console.log(pharma);\r",
											"console.log(pharmaid);\r",
											"\r",
											"pm.test(\"Compare pharma_id\", function () {\r",
											"    pm.expect(pharmaid).to.eql(parseInt(pm.environment.get(\"PharmaIdCr\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacies"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "order[address]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "order[user_count]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "id",
											"value": "19",
											"description": "id",
											"disabled": true
										},
										{
											"key": "name",
											"value": "Pharmacy asd3",
											"description": "Pharmacy name",
											"disabled": true
										},
										{
											"key": "address",
											"value": "ул. Ньютона",
											"description": "Pharmacy address",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "63740984315",
											"description": "Pharmacy phone number",
											"disabled": true
										},
										{
											"key": "enterprise_admin",
											"value": "",
											"description": "Pharmacy enterprise admin name",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "12",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of Pharmacy."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacies?order[id]=<string>&order[name]=<string>&order[address]=<string>&order[user_count]=<string>&id=<integer>&name=<string>&address=<string>&phone_number=<string>&enterprise_admin=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacies"
											],
											"query": [
												{
													"key": "order[id]",
													"value": "<string>"
												},
												{
													"key": "order[name]",
													"value": "<string>"
												},
												{
													"key": "order[address]",
													"value": "<string>"
												},
												{
													"key": "order[user_count]",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "address",
													"value": "<string>"
												},
												{
													"key": "phone_number",
													"value": "<string>"
												},
												{
													"key": "enterprise_admin",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacies list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacies?order[id]=<string>&order[name]=<string>&order[address]=<string>&order[user_count]=<string>&id=<integer>&name=<string>&address=<string>&phone_number=<string>&enterprise_admin=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacies"
											],
											"query": [
												{
													"key": "order[id]",
													"value": "<string>"
												},
												{
													"key": "order[name]",
													"value": "<string>"
												},
												{
													"key": "order[address]",
													"value": "<string>"
												},
												{
													"key": "order[user_count]",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "address",
													"value": "<string>"
												},
												{
													"key": "phone_number",
													"value": "<string>"
												},
												{
													"key": "enterprise_admin",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User registration. EnterpriseAdmin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c52b4aa6-5c8a-4786-b3f6-ea8c345ac510",
										"exec": [
											"pm.environment.set(\"email_EnterpriseAdmin\", pm.response.json().data.item.email);\r",
											"pm.environment.set(\"EnterpriseAdmin_id\", pm.response.json().data.item.id);\r",
											"\r",
											"\r",
											"//enterprise_admin\r",
											"//manager\r",
											"//enterprise_manager\r",
											"//doctor\r",
											"//courier"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"firstName\": \"{{$randomFirstName}}\",\n\"lastName\": \"{{$randomLastName}}\",\n\"email\": \"{{$randomEmail}}\",\n\"password\": \"{{password}}\",\n\"type\": \"enterprise_manager\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"registration",
										"type",
										":type"
									],
									"variable": [
										{
											"id": "14c098cb-3c98-4143-b46b-7a4a72bc838f",
											"key": "type",
											"value": "enterprise_manager",
											"type": "string",
											"description": "(Required) user type"
										}
									]
								},
								"description": "Creating User."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add User to Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e5fec78-ddc0-4d9c-b5df-3b3995cc95a8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"add-user",
										":userEmail"
									],
									"variable": [
										{
											"id": "c2fbb391-4c6f-4a69-abf3-ed158db3e276",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "1b96d69f-4f51-4e94-aab7-bd29be917ffa",
											"key": "userEmail",
											"value": "{{email_EnterpriseAdmin}}",
											"type": "string"
										}
									]
								},
								"description": "Add User to Pharmacy."
							},
							"response": [
								{
									"name": "User added to Pharmacy",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy users.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e05eef9-7c88-4436-81b3-abda604dbcb3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare EnterpriseAdmin_id \", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].id).to.eql(parseInt(pm.environment.get(\"EnterpriseAdmin_id\")));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"users"
									],
									"variable": [
										{
											"id": "ec803f8d-8ed0-4452-b7c8-c3d92a7c7175",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove User from Pharmacy.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/remove-user/:userEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"remove-user",
										":userEmail"
									],
									"variable": [
										{
											"id": "d0435da7-5c63-452d-ba5b-19b5e6e42107",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "9795cda9-8fdc-42d9-88bd-495db1718552",
											"key": "userEmail",
											"value": "{{email_EnterpriseAdmin}}",
											"type": "string"
										}
									]
								},
								"description": "Remove User from Pharmacy."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/remove-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"remove-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/remove-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"remove-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User removed from pharmacy",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/remove-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"remove-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy users. List empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8bb0582-b6ea-4d15-9a44-d0b3f8264c1d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Сart is empty\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var res = (_.isEmpty(jsonData.data.items));\r",
											"    pm.expect(res).to.be.true\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"users"
									],
									"variable": [
										{
											"id": "ec10012a-3c31-4e2d-8899-6bb517ede263",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy product. Required fields Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b602211-2e56-4ce7-885e-b5bde1aaf56c",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"pharmacyPrIdNReq\", pm.response.json().data.item.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 2,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таблетки 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"{{date}}\",\r\n  \"registrationNumber\": \"sacasc234\",\r\n  \"description\": \"Test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": null,\r\n  \"pictureUuids\": [\r\n    \r\n    ],\r\n  \"barCodes\": [\r\n    \r\n  ],\r\n  \"activeSubstances\": [\r\n   \r\n  ],\r\n  \"kfgCodes\": [\r\n    \r\n  ],\r\n  \"nozologyCodes\": [\r\n    \r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "a16e94ce-499c-4a41-9400-d3091807738e",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving Pharmacy products.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50f436e7-f673-4019-ae13-6addb3b0eca7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare global-product_id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].pharmacyProductId).to.eql(parseInt(pm.environment.get(\"pharmacyPrIdNReq\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"products"
									],
									"variable": [
										{
											"id": "282fcae7-851d-4d2d-a067-fec87026a061",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Close Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22020dad-12aa-4188-bac8-050af19e2b9b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/close",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"close"
									],
									"variable": [
										{
											"id": "148325ed-2148-4593-afa0-a626102c1997",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Close Pharmacy."
							},
							"response": [
								{
									"name": "Pharmacy closed",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"close"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"close"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/close",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"close"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy data. isEnabled=false",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "296c2ba8-12b8-445d-873b-1cb7d9f22e02",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"isEnabled=false\", function () {\r",
											"        pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
											"});\r",
											"pm.test(\"regionId=4\", function () {\r",
											"        pm.expect(jsonData.data.item.region.id).to.eql(4);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"id": "42942a8d-123c-4e7f-8b11-8b203f0f44d9",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								},
								"description": "Retrieving Pharmacy data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Open Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d1f8157-f5c6-4a57-9c1b-705c6c3b011c",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/open",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"open"
									],
									"variable": [
										{
											"id": "8fbc4d72-2d21-4da9-b10b-28951c60ab3a",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Open Pharmacy."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/open",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"open"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacy opened",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/open",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"open"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/open",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"open"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy data. isEnabled=true",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d2a2cab-f219-4caf-8991-92eeb08301f3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"        pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id"
									],
									"variable": [
										{
											"id": "746bcd16-41e5-468d-828b-ffe0987dba12",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								},
								"description": "Retrieving Pharmacy data."
							},
							"response": [
								{
									"name": "Pharmacy information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Pharmacy products.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9dd23f7f-eb2e-43de-95b9-ce7dc3385fc1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"products"
									],
									"variable": [
										{
											"id": "6c377875-7de7-47a9-9dc3-efecaaacad9e",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test User",
					"item": [
						{
							"name": "Pharmacist",
							"item": [
								{
									"name": "User login super-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3237f8fb-ec28-45eb-81dd-eafc89cf0b37",
												"exec": [
													"pm.environment.set(\"token_super_admin\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User registration. Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "decd6dbb-17b2-4218-821f-35329f84dcb5",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"email_pharmacist\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"uuid_pharmacist\", pm.response.json().data.item.uuid);\r",
													"\r",
													"//enterprise_admin\r",
													"//manager\r",
													"//enterprise_manager\r",
													"//doctor\r",
													"//courier"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9ea6ae2c-232e-4960-96a0-835a1d9b0f83",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"firstName\": \"{{$randomFirstName}}\",\n\"lastName\": \"{{$randomLastName}}\",\n\"email\": \"{{$randomEmail}}\",\n\"password\": \"{{password}}\",\n\"type\": \"pharmacist\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"id": "8b57b5ea-1252-4be5-bda8-9ac55155c006",
													"key": "type",
													"value": "pharmacist",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login Pharmacist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "19b148d7-3738-4af5-a992-7e87596bc587",
												"exec": [
													"pm.environment.set(\"token_pharmacist\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_pharmacist\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_pharmacist\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"email_pharmacist\", pm.response.json().data.item.email);\r",
													"\r",
													"//pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_pharmacist}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uploading_User_image_file.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cc2d5707-e49a-4c02-ad4e-64f6c90a57aa",
												"exec": [
													"pm.environment.set(\"UserAva\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/20190214174624-8569.png"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Updating User data.Pharmacist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "de856f3b-f2b5-4d93-b425-76a137c12eff",
												"exec": [
													"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
													"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
													"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
													"var shuffle = _.shuffle(phn);\r",
													"pm.environment.set(\"rphone\", shuffle[0]);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "298c7fef-1f02-49e1-a8f3-ba9af14d3415",
												"exec": [
													"pm.environment.set(\"email_pharmacist\", pm.response.json().data.item.email);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.environment.get(\"rphone\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rphone}}\",\r\n  \"aboutMe\": \"{{$randomPhrase}}\",\r\n  \"avatarUuid\": \"{{UserAva}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "2192c2f8-6f02-4189-a608-d0222e749407",
													"key": "uuid",
													"value": "{{uuid_pharmacist}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "User login Pharmacist Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b4653145-fe82-4b0a-891a-ee7cd4d42949",
												"exec": [
													"pm.environment.set(\"token_pharmacist\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_pharmacist\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_pharmacist\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"email_pharmacist\", pm.response.json().data.item.email);\r",
													"\r",
													"//pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_pharmacist}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "self User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "640d09b3-5311-4bd8-aa46-c5d44fef707a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_pharmacist}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving User data by uuid.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "889ed9d7-1db2-4567-aaf6-4a275d887263",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});\r",
													"pm.test(\"Compare email\", function () {\r",
													"    pm.expect(jsonData.data.item.email).to.eql(pm.environment.get(\"email_pharmacist\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "42ab80fc-35b5-4158-895d-4a83b07b6e6d",
													"key": "uuid",
													"value": "{{uuid_pharmacist}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Doctor",
							"item": [
								{
									"name": "User login super-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "57243161-1507-4d70-a1f9-6f2e31ddc5f0",
												"exec": [
													"pm.environment.set(\"token_super_admin\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User registration. Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78a6a581-175c-45c6-bfbe-005ecc6e3663",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"email_doctor\", pm.response.json().data.item.email);\r",
													"pm.environment.set(\"uuid_doctor\", pm.response.json().data.item.uuid);\r",
													"\r",
													"//enterprise_admin\r",
													"//manager\r",
													"//enterprise_manager\r",
													"//doctor\r",
													"//courier"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"description": "Value: Bearer {jwt}",
												"key": "Authorization",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"firstName\": \"{{$randomFirstName}}\",\n\"lastName\": \"{{$randomLastName}}\",\n\"email\": \"{{$randomEmail}}\",\n\"password\": \"{{password}}\",\n\"type\": \"doctor\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"id": "31183b72-4737-4dee-a587-b0dc344408ee",
													"key": "type",
													"value": "doctor",
													"type": "string",
													"description": "(Required) user type"
												}
											]
										},
										"description": "Creating User."
									},
									"response": [
										{
											"name": "User information",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"registration",
														"type",
														":type"
													],
													"variable": [
														{
															"key": "type"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "User login Doctor",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70ea828f-78e5-4ca2-9a8b-052eb3ba8118",
												"exec": [
													"pm.environment.set(\"token_doctor\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_doctor\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_doctor\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"email_doctor\", pm.response.json().data.item.email);\r",
													"\r",
													"//pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_doctor}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Uploading_User_image_file.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7d696cd-09bd-4332-925e-a57f42f0760d",
												"exec": [
													"pm.environment.set(\"UserAva\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/unnamed.jpg"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Updating User data.Doctor",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "67778770-1f34-4e5a-9515-7646657b3d2f",
												"exec": [
													"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
													"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
													"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
													"var shuffle = _.shuffle(phn);\r",
													"pm.environment.set(\"rphone\", shuffle[0]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5e3438c5-4336-4929-a74a-7d08779f4155",
												"exec": [
													"pm.environment.set(\"email_doctor\", pm.response.json().data.item.email);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"console.log(pm.environment.get(\"rphone\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone\": \"{{rphone}}\",\r\n  \"aboutMe\": \"{{$randomPhrase}}\",\r\n  \"avatarUuid\": \"{{UserAva}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "07c67005-2c53-4b7c-a9f7-c7a0dfbaa5a3",
													"key": "uuid",
													"value": "{{uuid_doctor}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "User login Doctor Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eea9158b-8f8d-4eef-8cea-ec431ac050b7",
												"exec": [
													"pm.environment.set(\"token_doctor\", pm.response.json().data.token);\r",
													"pm.environment.set(\"id_doctor\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"uuid_doctor\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"email_doctor\", pm.response.json().data.item.email);\r",
													"\r",
													"//pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{email_doctor}}\",\n    \"password\": \"{{password}}\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "self User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e985a423-56a2-4c81-be9d-bf6e8367271d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_doctor}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving User data by uuid.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "35c9d6b7-62e6-4cdd-959a-82f91603ce12",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Compare avatar\", function () {\r",
													"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"UserAva\"));\r",
													"});\r",
													"pm.test(\"Compare email\", function () {\r",
													"    pm.expect(jsonData.data.item.email).to.eql(pm.environment.get(\"email_doctor\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_super_admin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/user/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"user",
												":uuid"
											],
											"variable": [
												{
													"id": "6a6098b9-6733-4739-b9f7-202351628ae3",
													"key": "uuid",
													"value": "{{uuid_doctor}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Retrieving collection of Pharmacist data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db9641a1-efb8-4d85-9de5-cbbd9bd11d2c",
										"exec": [
											"pm.environment.set(\"uuid_unk\", pm.response.json().data.items[0].uuid);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const pharmacist = jsonData.data.items.find(u => u.email === pm.environment.get(\"email_pharmacist\"));\r",
											"const pharmacist_email = pharmacist ? pharmacist.email : 'not found';\r",
											"\r",
											"console.log(pharmacist);\r",
											"console.log(pharmacist_email);\r",
											"\r",
											"pm.test(\"Compare pharmacist_email\", function () {\r",
											"    pm.expect(pharmacist_email).to.eql(pm.environment.get(\"email_pharmacist\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_super_admin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving collection of Doctor data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44df7182-3c5a-4240-b66d-47a90dfb7ad6",
										"exec": [
											"pm.environment.set(\"uuid_unk\", pm.response.json().data.items[0].uuid);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const doctor = jsonData.data.items.find(u => u.email === pm.environment.get(\"email_doctor\"));\r",
											"const email_doctor = doctor ? doctor.email : 'not found';\r",
											"\r",
											"console.log(doctor);\r",
											"console.log(email_doctor);\r",
											"\r",
											"pm.test(\"Compare doctor_email\", function () {\r",
											"    pm.expect(email_doctor).to.eql(pm.environment.get(\"email_doctor\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_super_admin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/doctors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"doctors"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test global product",
					"item": [
						{
							"name": "Super-admin",
							"item": [
								{
									"name": "Load img",
									"item": [
										{
											"name": "User login super-admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "889a4e96-f4a6-44b9-8f92-2bffb43051c4",
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().data.token);\r",
															"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
															"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												},
												"description": "User login."
											},
											"response": [
												{
													"name": "Returns if authentication failing",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns tokens and user",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if request parameters is not valid",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Uploading_User_image_file.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0077e986-2147-4e5a-86fc-aa9a9e157ce8",
														"exec": [
															"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (31).jpg"
														},
														{
															"key": "",
															"value": "",
															"type": "text",
															"disabled": true
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9381c7cf-aebb-4a80-84b4-7d0ce90482de",
														"exec": [
															"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (30).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3131d620-ba14-4b0c-ba67-6b6e912a6660",
														"exec": [
															"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (32).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "660abf93-a32e-4463-aeae-8737a6d77dac",
														"exec": [
															"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (33).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 5",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4dc87772-9376-4e48-bac1-baefc6570547",
														"exec": [
															"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (34).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "User login super-admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3f9ac466-598f-43d4-95ba-ca5c4b0a3965",
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. Required fields",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "525acdd5-1760-44ac-a674-cf240a96542b",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "83f3fd34-d66a-4115-8c54-818d71207d49",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"kkn131/wqde\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Editing Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "84c6467c-2175-4f73-93f2-d6fae62d0c9b",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}} ",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Вальпро́евая кислота́ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 450 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"A06A\",\n    \"manufacturerName\": \"SANOFI WINTHROP\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"fdbfdb/fewf32\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "3c67a011-675b-409c-9cdc-e74911f42215",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Editing Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product edited",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Editing Global product. Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a5a79f33-b752-431c-ad5c-1f4ac556a3d6",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}} ",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Вальпро́евая кислdота́ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 450 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"A06A\",\n    \"manufacturerName\": \"SANOFI WINTHROP\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"fdbfdb/fewf32\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": false,\n    \"engNameIsCustom\": false,\n    \"barCodesIsCustom\": false,\n    \"activeSubstancesIsCustom\": false,\n    \"nozologiesIsCustom\": false,\n    \"kfgsIsCustom\": false,\n    \"releaseFormIsCustom\": false,\n    \"registrationDateIsCustom\": false,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "50205b0d-5186-4964-90be-feafd63da493",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Editing Global product."
									},
									"response": [
										{
											"name": "Global product edited",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fc5a8e20-de57-419c-867c-a8318cf8680a",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);\r",
													"console.log(pm.environment.get(\"date\"))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4073c848-c3f3-48c6-82c1-99cb4d254dc1",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 742,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": false,\n    \"engNameIsCustom\": false,\n    \"barCodesIsCustom\": false,\n    \"activeSubstancesIsCustom\": false,\n    \"nozologiesIsCustom\": false,\n    \"kfgsIsCustom\": false,\n    \"releaseFormIsCustom\": false,\n    \"registrationDateIsCustom\": false,\n    \"registrationNumberIsCustom\": false,\n    \"descriptionIsCustom\": false,\n    \"categoryIsCustom\": false,\n    \"fgtIsCustom\": false,\n    \"picturesIsCustom\": false,\n    \"manufacturerIsCustom\": false\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. Full",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4980f011-a17a-4ff4-b3c8-24f203172c6f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGPPr\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ruNameGlPr\", pm.response.json().data.item.rusName);\r",
													"console.log(pm.environment.get(\"date\"))\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5e050448-3b73-4401-9b89-3a72d99ccb29",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Цитрат калия\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"VALPROCOM\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": \"04.005\",\n    \"pictureUuids\": [\n    \"{{pharmacyImage1}}\",\n    \"{{pharmacyImage2}}\",\n    \"{{pharmacyImage3}}\",\n    \"{{pharmacyImage4}}\",\n    \"{{pharmacyImage5}}\"\n       \n    ],\n    \"barCodes\": [\n        \"5995327206042\",\n        \"4260085520282\",\n        \"8901086130273\"\n    ],\n    \"activeSubstances\": [\n        \"sulfadoxine\",\n        \"tocopherol\",\n        \"triphosadenine\"\n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \"A54\",\n        \"A56\",\n        \"A69.1\"\n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Disable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "21a888e4-4ed2-4c35-9a88-0577371f76ac",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"id": "ac4c4451-2330-40a6-adc3-7e00ad410685",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Disable Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product disabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check disable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4126295-6c4b-41a2-8937-fb0f0ed9fb67",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=false\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "52021624-394d-411b-9a28-8e8ae27a5f41",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "71c79f3f-02cf-485e-8242-6d297868c440",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"id": "7bbe0059-af6f-4a00-8769-8acff572f0ad",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Enable Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product enabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check Enable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "90bca9b9-7234-4c89-be6c-c4102ac2c1bc",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=true\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "8964d347-b771-425a-8232-86c372f7230b",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of Prototype products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d0361bd6-22e8-4048-8402-773b62ed22d4",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/prototype-products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"prototype-products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product by GlPrprototype Full fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3a5e04e4-b215-44c0-98a8-3279a28688c7",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": {{IdNewGPPr}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": false,\r\n  \"engNameIsCustom\": false,\r\n  \"barCodesIsCustom\": false,\r\n  \"activeSubstancesIsCustom\": false,\r\n  \"nozologiesIsCustom\": false,\r\n  \"kfgsIsCustom\": false,\r\n  \"releaseFormIsCustom\": false,\r\n  \"registrationDateIsCustom\": false,\r\n  \"registrationNumberIsCustom\": false,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": false,\r\n  \"fgtIsCustom\": false,\r\n  \"picturesIsCustom\": false,\r\n  \"manufacturerIsCustom\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{PharmaIdCr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving global products card.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4608a1ce-6428-4999-bca6-0ed50af826ba",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true,
											"user-agent": true
										}
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept-language",
												"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,kn;q=0.6,fr;q=0.5",
												"type": "text"
											},
											{
												"key": "cache-control",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "pragma",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "referer",
												"value": "https://api.pharmacies.fmc-dev.com/api/v1/doc",
												"type": "text"
											},
											{
												"key": "sec-fetch-dest",
												"value": "empty",
												"type": "text"
											},
											{
												"key": "sec-fetch-mode",
												"value": "cors",
												"type": "text"
											},
											{
												"key": "sec-fetch-site",
												"value": "same-origin",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36",
												"type": "text"
											},
											{
												"key": "scheme",
												"value": "https",
												"type": "text"
											},
											{
												"key": "cookie",
												"value": "_ym_d=1600325189; _ym_uid=159911821299971824; _ga=GA1.2.364649818.1600325190; _gid=GA1.2.2069105132.1600325190; _gcl_au=1.1.666428308.1600343177; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1",
												"type": "text"
											},
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "efb7dfce-0757-47ee-98fe-d70ba061ba66",
													"key": "id",
													"value": "{{IdNewGPPr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving products search data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5375f7a8-8630-4a4d-988a-f4fda725e04c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.globalProductId === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.globalProductId : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/search?name={{ruNameGlPr}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"search"
											],
											"query": [
												{
													"key": "regionId",
													"value": "21",
													"disabled": true
												},
												{
													"key": "categoryCode",
													"value": "D07AC14",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{ruNameGlPr}}"
												},
												{
													"key": "barCode",
													"value": "4260085520282",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of Global products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "61c40272-4996-4f48-9145-7dece869a39e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.id : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-products"
											],
											"query": [
												{
													"key": "page",
													"value": "",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "",
													"disabled": true
												},
												{
													"key": "barCode",
													"value": "8901086130273",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{ruNameGlPr}}",
													"disabled": true
												},
												{
													"key": "all",
													"value": "true",
													"disabled": true
												},
												{
													"key": "id",
													"value": "1982",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin",
							"item": [
								{
									"name": "Load img",
									"item": [
										{
											"name": "User login admin",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "925d7ecb-0812-4c3a-89b7-5f2c980d4d6a",
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().data.token);\r",
															"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
															"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"admin1@example.com\",\n    \"password\": \"pw1234\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												},
												"description": "User login."
											},
											"response": [
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if authentication failing",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if request parameters is not valid",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns tokens and user",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Uploading_User_image_file.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a55844de-fea0-4807-87ab-bfd4030964eb",
														"exec": [
															"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (31).jpg"
														},
														{
															"key": "",
															"value": "",
															"type": "text",
															"disabled": true
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36522da8-8b26-451b-a1bf-8ef79bb9cfa0",
														"exec": [
															"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (30).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5995d336-977c-4dfe-a9c3-1992c1510c04",
														"exec": [
															"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (32).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36e3f3cc-6860-4c40-bfc9-e51a557abb96",
														"exec": [
															"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (33).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 5",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c0fae43-17bf-4cfa-b236-46b45c4b7c06",
														"exec": [
															"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (34).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "User login admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "03b67450-48a5-4509-a462-7d4440233a61",
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"super-admin@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. Required fields",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "2db453e4-e017-4029-bd9c-32b16d85776c",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64f985bf-ff2a-4875-9305-db26349f8ed3",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"kkn131/wqde\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Editing Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "89b58087-14f3-49e7-a192-dfae0d28f70f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Вальпро́евая кислота́ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 450 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"A06A\",\n    \"manufacturerName\": \"SANOFI WINTHROP\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"fdbfdb/fewf32\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "8260b763-324b-400e-b4f8-afd6cbb3aeb4",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Editing Global product."
									},
									"response": [
										{
											"name": "Global product edited",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7dda2b40-4183-4b2d-913a-387fc30fcb0d",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);\r",
													"console.log(pm.environment.get(\"date\"))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "08921d23-ca3f-4bdf-8ace-e13471601a83",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 520,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": false,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID Full",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5bf83abe-5e14-4276-a065-724d3ef40561",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGPPr\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ruNameGlPr\", pm.response.json().data.item.rusName);\r",
													"console.log(pm.environment.get(\"date\"))\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7b92cb94-6c27-4626-8417-3f95915f1f4a",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Цитрат калия\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 520,\n    \"engName\": \"VALPROCOM\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": \"04.005\",\n    \"pictureUuids\": [\n    \"{{pharmacyImage1}}\",\n    \"{{pharmacyImage2}}\",\n    \"{{pharmacyImage3}}\",\n    \"{{pharmacyImage4}}\",\n    \"{{pharmacyImage5}}\"\n       \n    ],\n    \"barCodes\": [\n        \"5995327206042\",\n        \"4260085520282\",\n        \"8901086130273\"\n    ],\n    \"activeSubstances\": [\n        \"sulfadoxine\",\n        \"tocopherol\",\n        \"triphosadenine\"\n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \"A54\",\n        \"A56\",\n        \"A69.1\"\n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Disable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ee630490-a359-4417-a676-30410bcb8eff",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"id": "6199bef5-1a91-4fc6-a776-fb51393e1fca",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Disable Global product."
									},
									"response": [
										{
											"name": "Global product disabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check disable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a287d0a-c35f-418e-b3c0-1e988d519cf5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=false\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "d84a3b57-0e2c-4e87-9b70-d81092a7a64c",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ee104164-a302-4cb0-98c2-cedefda6cc26",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"id": "c0b0d009-1bec-4b13-a81c-152e678f56cc",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Enable Global product."
									},
									"response": [
										{
											"name": "Global product enabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check Enable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "772b17ae-d79e-43e0-b930-64670da6ed1d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=true\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "8449f3b5-4833-4775-a486-fb61963f83ef",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of Prototype products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "986ba299-e146-4a97-86dd-e490f19e378b",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/prototype-products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"prototype-products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product by GlPrprototype Full fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "87c3e70e-ed0f-4261-b78b-b6effc134be4",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": {{IdNewGPPr}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": false,\r\n  \"engNameIsCustom\": false,\r\n  \"barCodesIsCustom\": false,\r\n  \"activeSubstancesIsCustom\": false,\r\n  \"nozologiesIsCustom\": false,\r\n  \"kfgsIsCustom\": false,\r\n  \"releaseFormIsCustom\": false,\r\n  \"registrationDateIsCustom\": false,\r\n  \"registrationNumberIsCustom\": false,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": false,\r\n  \"fgtIsCustom\": false,\r\n  \"picturesIsCustom\": false,\r\n  \"manufacturerIsCustom\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"id": "fbb35ba3-38de-4c32-9a9c-a8fd7dec3b8a",
													"key": "id",
													"value": "3",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving global products card.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65a028d2-c2c3-4c78-a6b4-69add6b01206",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true,
											"user-agent": true
										}
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept-language",
												"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,kn;q=0.6,fr;q=0.5",
												"type": "text"
											},
											{
												"key": "cache-control",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "pragma",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "referer",
												"value": "https://api.pharmacies.fmc-dev.com/api/v1/doc",
												"type": "text"
											},
											{
												"key": "sec-fetch-dest",
												"value": "empty",
												"type": "text"
											},
											{
												"key": "sec-fetch-mode",
												"value": "cors",
												"type": "text"
											},
											{
												"key": "sec-fetch-site",
												"value": "same-origin",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36",
												"type": "text"
											},
											{
												"key": "scheme",
												"value": "https",
												"type": "text"
											},
											{
												"key": "cookie",
												"value": "_ym_d=1600325189; _ym_uid=159911821299971824; _ga=GA1.2.364649818.1600325190; _gid=GA1.2.2069105132.1600325190; _gcl_au=1.1.666428308.1600343177; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1",
												"type": "text"
											},
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "be4ad10f-4eb1-42f8-ba31-a45e6c293099",
													"key": "id",
													"value": "{{IdNewGPPr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving products search data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4f2bd47-0d44-4090-97e6-0c803a2f07ae",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.globalProductId === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.globalProductId : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/search?name={{ruNameGlPr}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"search"
											],
											"query": [
												{
													"key": "regionId",
													"value": "21",
													"disabled": true
												},
												{
													"key": "categoryCode",
													"value": "D07AC14",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{ruNameGlPr}}"
												},
												{
													"key": "barCode",
													"value": "4260085520282",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of Global products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "38e5157b-99bf-491e-b213-9c5dc7fd9408",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.id : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-products?barCode=8901086130273",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-products"
											],
											"query": [
												{
													"key": "page",
													"value": "",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "",
													"disabled": true
												},
												{
													"key": "barCode",
													"value": "8901086130273"
												},
												{
													"key": "name",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Manager",
							"item": [
								{
									"name": "Load img",
									"item": [
										{
											"name": "User login manager",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e36b782a-25b4-4ff6-892f-853efb74d585",
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().data.token);\r",
															"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
															"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"manager1@example.com\",\n    \"password\": \"pw1234\"\n}",
													"options": {
														"raw": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												},
												"description": "User login."
											},
											"response": [
												{
													"name": "Returns if request parameters is not valid",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not found",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns if authentication failing",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returns tokens and user",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/api/v1/user/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v1",
																"user",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Uploading_User_image_file.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "244ee69f-d851-4ede-a1cd-c6d7145dc173",
														"exec": [
															"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (31).jpg"
														},
														{
															"key": "",
															"value": "",
															"type": "text",
															"disabled": true
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d795e427-0faf-4a03-98c9-8f3f5c80ce63",
														"exec": [
															"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (30).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 3",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f1aff0af-6116-40fb-8549-0dfacf9aa002",
														"exec": [
															"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (32).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 4",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "49eced92-e1d9-4a1f-ac41-6e1edb4c1e1b",
														"exec": [
															"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (33).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										},
										{
											"name": "Uploading User image file. 5",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "51ecdc77-7a36-4f46-a97e-2d1419ba0cdb",
														"exec": [
															"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": "/D:/Новая папка/Без названия (34).jpg"
														}
													],
													"options": {
														"formdata": {}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"image"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "User login manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9f35e8be-b0ba-47f1-9f80-5c48ec272c80",
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().data.token);\r",
													"pm.environment.set(\"uuid_user\", pm.response.json().data.item.uuid);\r",
													"pm.environment.set(\"refreshToken_user\", pm.response.json().data.refreshToken);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"manager1@example.com\",\n    \"password\": \"pw1234\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"login"
											]
										},
										"description": "User login."
									},
									"response": [
										{
											"name": "Returns tokens and user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if authentication failing",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returns if request parameters is not valid",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. Required fields",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "873e8698-38d7-4550-a48d-e9cc4b9418bd",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2503c627-ada9-484b-8ff9-19b8fafe73dc",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"kkn131/wqde\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Editing Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ed447ba2-2f67-4098-bf36-12aaa8418568",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Вальпро́евая кислота́ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 450 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"A06A\",\n    \"manufacturerName\": \"SANOFI WINTHROP\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"fdbfdb/fewf32\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}\n",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "15c975f4-e683-492c-b7d3-9846c65076bc",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Editing Global product."
									},
									"response": [
										{
											"name": "Global product edited",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "274856cb-fc9e-44c9-8c6c-d4fcad424062",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGP\", pm.response.json().data.item.id);\r",
													"console.log(pm.environment.get(\"date\"))"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "90c40e98-4351-4e67-886b-b60279993a02",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"ВАЛЬПРОКОМ <SUP>&reg;</SUP> ХРОНО\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 520,\n    \"engName\": \"\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": null,\n    \"pictureUuids\": [\n       \n    ],\n    \"barCodes\": [\n        \n    ],\n    \"activeSubstances\": [\n        \n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": false,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creating Global product. by prototypeID Full",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "11a1fb8d-8f10-425e-82cb-e604fd3bf83d",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"IdNewGPPr\", pm.response.json().data.item.id);\r",
													"pm.environment.set(\"ruNameGlPr\", pm.response.json().data.item.rusName);\r",
													"console.log(pm.environment.get(\"date\"))\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "20e5d19c-ee84-4819-93c5-ddb09b1d55b8",
												"exec": [
													"var min_day=1;\r",
													"var max_day=28;\r",
													"var min_mon=1; \r",
													"var max_mon=12;\r",
													"var min_year=1900; \r",
													"var max_year=2020;\r",
													"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
													"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
													"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
													"pm.environment.set(\"day\", random_day);\r",
													"pm.environment.set(\"month\", random_month);\r",
													"pm.environment.set(\"year\", random_year);\r",
													"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
													"pm.environment.set(\"date\", random_date);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Цитрат калия\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": 520,\n    \"engName\": \"VALPROCOM\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": \"04.005\",\n    \"pictureUuids\": [\n    \"{{pharmacyImage1}}\",\n    \"{{pharmacyImage2}}\",\n    \"{{pharmacyImage3}}\",\n    \"{{pharmacyImage4}}\",\n    \"{{pharmacyImage5}}\"\n       \n    ],\n    \"barCodes\": [\n        \"5995327206042\",\n        \"4260085520282\",\n        \"8901086130273\"\n    ],\n    \"activeSubstances\": [\n        \"sulfadoxine\",\n        \"tocopherol\",\n        \"triphosadenine\"\n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \"A54\",\n        \"A56\",\n        \"A69.1\"\n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										},
										"description": "Creating Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Disable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ea39a116-e101-4c7b-88fb-56039c402e10",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"id": "b39a1b7a-3f8f-4a87-bab9-af4e9d1d4af9",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Disable Global product."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product disabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"disable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check disable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aef07735-d99e-4426-a477-6bb53538e114",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=false\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "d2bf1632-8082-49bc-b246-c6aaaf2bcf48",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Enable Global product.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e22a0ff-71ea-4547-bb3b-c216a7e36b6f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id",
												"enable"
											],
											"variable": [
												{
													"id": "4a0aba26-a6b3-48a7-b438-6f31611a91ac",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Enable Global product."
									},
									"response": [
										{
											"name": "Not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Global product enabled",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id",
														"enable"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving Global product. Check Enable",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "537fccaa-b386-49e0-b899-845cc3be6e39",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"    var jsonData = pm.response.json();\r",
													"pm.test(\"Compare isEnabled=true\", function () {\r",
													"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "828c7c8c-56d3-467d-8c9e-f5a1390b7c26",
													"key": "id",
													"value": "{{IdNewGP}}",
													"type": "string",
													"description": "(Required) Global product id"
												}
											]
										},
										"description": "Retrieving Global product."
									},
									"response": [
										{
											"name": "Global product data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": {
															"content": "Added as a part of security scheme: apikey",
															"type": "text/plain"
														},
														"key": "Authorization",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/global-product/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														"global-product",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieving collection of Prototype products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1979819e-db19-43b0-90ba-96a708d05bee",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/prototype-products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"prototype-products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product by GlPrprototype Full fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "96002fa5-df53-499a-aee0-33c170da63c1",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.environment.set(\"pharmacyPrIdNull\", pm.response.json().data.item.id);\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": {{IdNewGPPr}},\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": false,\r\n  \"engNameIsCustom\": false,\r\n  \"barCodesIsCustom\": false,\r\n  \"activeSubstancesIsCustom\": false,\r\n  \"nozologiesIsCustom\": false,\r\n  \"kfgsIsCustom\": false,\r\n  \"releaseFormIsCustom\": false,\r\n  \"registrationDateIsCustom\": false,\r\n  \"registrationNumberIsCustom\": false,\r\n  \"descriptionIsCustom\": false,\r\n  \"categoryIsCustom\": false,\r\n  \"fgtIsCustom\": false,\r\n  \"picturesIsCustom\": false,\r\n  \"manufacturerIsCustom\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"id": "eb47b3fc-2cf9-4a21-9a94-c3635b22e480",
													"key": "id",
													"value": "3",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving global products card.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "581ee56b-30bb-480c-8317-6473b26feea8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"pm.test(\"Compare global-product name\", function () {\r",
													"    pm.expect(pm.environment.get(\"ruNameGlPr\")).to.eql(jsonData.data.item.rusName);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true,
											"user-agent": true
										}
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept-language",
												"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,kn;q=0.6,fr;q=0.5",
												"type": "text"
											},
											{
												"key": "cache-control",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "pragma",
												"value": "no-cache",
												"type": "text"
											},
											{
												"key": "referer",
												"value": "https://api.pharmacies.fmc-dev.com/api/v1/doc",
												"type": "text"
											},
											{
												"key": "sec-fetch-dest",
												"value": "empty",
												"type": "text"
											},
											{
												"key": "sec-fetch-mode",
												"value": "cors",
												"type": "text"
											},
											{
												"key": "sec-fetch-site",
												"value": "same-origin",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36",
												"type": "text"
											},
											{
												"key": "scheme",
												"value": "https",
												"type": "text"
											},
											{
												"key": "cookie",
												"value": "_ym_d=1600325189; _ym_uid=159911821299971824; _ga=GA1.2.364649818.1600325190; _gid=GA1.2.2069105132.1600325190; _gcl_au=1.1.666428308.1600343177; SL_GWPT_Show_Hide_tmp=1; SL_wptGlobTipTmp=1",
												"type": "text"
											},
											{
												"key": "accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/global-product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"global-product",
												":id"
											],
											"variable": [
												{
													"id": "2e09f7ac-daea-427e-8bd0-005b06795636",
													"key": "id",
													"value": "{{IdNewGPPr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving products search data.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ff9223d-366d-484d-95ce-22fcf9d8da22",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.globalProductId === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.globalProductId : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/public/products/search?name={{ruNameGlPr}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"public",
												"products",
												"search"
											],
											"query": [
												{
													"key": "regionId",
													"value": "21",
													"disabled": true
												},
												{
													"key": "categoryCode",
													"value": "D07AC14",
													"disabled": true
												},
												{
													"key": "name",
													"value": "{{ruNameGlPr}}"
												},
												{
													"key": "barCode",
													"value": "4260085520282",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Retrieving collection of Global products.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d6702e7f-5305-4e09-b4c9-0ab449d7975c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"const idGlPr = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"const idGlPr2 = idGlPr ? idGlPr.id : 'not found';\r",
													"console.log (idGlPr)\r",
													"\r",
													"pm.test(\"Compare Global product_id\", function () {\r",
													"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
													"});\r",
													"pm.test(\"Compare Global product_name\", function () {\r",
													"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-products?barCode=8901086130273",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-products"
											],
											"query": [
												{
													"key": "page",
													"value": "",
													"disabled": true
												},
												{
													"key": "per_page",
													"value": "",
													"disabled": true
												},
												{
													"key": "barCode",
													"value": "8901086130273"
												},
												{
													"key": "name",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test collection",
					"item": [
						{
							"name": "Customer registration.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07544aa1-5efe-4048-8b66-3693bff10441",
										"exec": [
											"pm.environment.set(\"phone_customer\", pm.response.json().data.item.phone);\r",
											"pm.environment.set(\"custId\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"custName\", pm.response.json().data.item.name);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "61a3b139-4619-4576-aa34-33d36a61d069",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"registration"
									]
								},
								"description": "Creating Customer, generating code for it and sending sms."
							},
							"response": [
								{
									"name": "Customer created and sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Customer data as user.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ed5db64-c44b-469b-a96e-76e4d7a70aab",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const idCust = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"custId\")));\r",
											"const idCust2 = idCust ? idCust.id : 'not found';\r",
											"console.log (idCust)\r",
											"\r",
											"pm.test(\"Compare customer_id\", function () {\r",
											"    pm.expect(idCust2).to.eql(parseInt(pm.environment.get(\"custId\")));\r",
											"});\r",
											"pm.test(\"Compare customer_name\", function () {\r",
											"    pm.expect(idCust.name).to.eql(pm.environment.get(\"custName\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"customers"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "10",
											"disabled": true
										},
										{
											"key": "id",
											"value": "61",
											"disabled": true
										},
										{
											"key": "name",
											"value": "Lorna.Klein63",
											"disabled": true
										},
										{
											"key": "email",
											"value": "Blanche.OKon@hotmail.com",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "258852677007",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "desc",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Global product. Full",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17e71c05-5228-4b8e-a299-626f914e1132",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"IdNewGPPr\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"ruNameGlPr\", pm.response.json().data.item.rusName);\r",
											"console.log(pm.environment.get(\"date\"))\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "466bdb5c-c312-487e-b047-c93cd63be3c2",
										"exec": [
											"var min_day=1;\r",
											"var max_day=28;\r",
											"var min_mon=1; \r",
											"var max_mon=12;\r",
											"var min_year=1900; \r",
											"var max_year=2020;\r",
											"var random_day = Math.floor(Math.random() * (+max_day - +min_day)) + +min_day; \r",
											"var random_month = Math.floor(Math.random() * (+max_mon - +min_mon)) + +min_mon; \r",
											"var random_year = Math.floor(Math.random() * (+max_year - +min_year)) + +min_year; \r",
											"pm.environment.set(\"day\", random_day);\r",
											"pm.environment.set(\"month\", random_month);\r",
											"pm.environment.set(\"year\", random_year);\r",
											"var random_date = random_year  + \"-\" + random_month + \"-\" + random_day;\r",
											"pm.environment.set(\"date\", random_date);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isEnabled\": true,\n    \"isApproved\": true,\n    \"rusName\": \"Цитрат калия\",\n    \"releaseForm\": \"таблетки 500 мг: 50 шт.\",\n    \"description\": \"противосудорожного препарата-стабилизатора центральной нервной системы. Для устранения приступов, а также улучшения общего психического состояния больного врач, основываясь на инструкции Вальпроком, подбирает дозировку средства и устанавливает индивидуальную схему лечения\",\n    \"categoryAtcCode\": \"N03AG01\",\n    \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\n    \"manufacturerCountry\": 10,\n    \"prototypeProductId\": null,\n    \"engName\": \"VALPROCOM\",\n    \"registrationDate\": \"{{date}}\",\n    \"registrationNumber\": \"924\",\n    \"fgtCode\": \"04.005\",\n    \"pictureUuids\": [\n    \"{{pharmacyImage1}}\",\n    \"{{pharmacyImage2}}\",\n    \"{{pharmacyImage3}}\",\n    \"{{pharmacyImage4}}\",\n    \"{{pharmacyImage5}}\"\n       \n    ],\n    \"barCodes\": [\n        \"5995327206042\",\n        \"4260085520282\",\n        \"8901086130273\"\n    ],\n    \"activeSubstances\": [\n        \"sulfadoxine\",\n        \"tocopherol\",\n        \"triphosadenine\"\n    ],\n    \"kfgCodes\": [\n        \"04.05\",                  \n        \"29.02.01\"   \n    ],\n    \"nozologyCodes\": [\n        \"A54\",\n        \"A56\",\n        \"A69.1\"\n    ],\n    \"rusNameIsCustom\": true,\n    \"engNameIsCustom\": true,\n    \"barCodesIsCustom\": true,\n    \"activeSubstancesIsCustom\": true,\n    \"nozologiesIsCustom\": true,\n    \"kfgsIsCustom\": true,\n    \"releaseFormIsCustom\": true,\n    \"registrationDateIsCustom\": true,\n    \"registrationNumberIsCustom\": true,\n    \"descriptionIsCustom\": true,\n    \"categoryIsCustom\": true,\n    \"fgtIsCustom\": true,\n    \"picturesIsCustom\": true,\n    \"manufacturerIsCustom\": true\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/global-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"global-product"
									]
								},
								"description": "Creating Global product."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Global product created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"isEnabled\": \"<boolean>\",\n    \"isApproved\": \"<boolean>\",\n    \"rusName\": \"<string>\",\n    \"releaseForm\": \"<string>\",\n    \"description\": \"<string>\",\n    \"categoryAtcCode\": \"<string>\",\n    \"manufacturerName\": \"<string>\",\n    \"manufacturerCountry\": \"<integer>\",\n    \"prototypeProductId\": \"<integer>\",\n    \"engName\": \"<string>\",\n    \"registrationDate\": \"<string>\",\n    \"registrationNumber\": \"<string>\",\n    \"fgtCode\": \"<string>\",\n    \"pictureUuids\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"barCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"activeSubstances\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"kfgCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"nozologyCodes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"rusNameIsCustom\": \"<boolean>\",\n    \"engNameIsCustom\": \"<boolean>\",\n    \"barCodesIsCustom\": \"<boolean>\",\n    \"activeSubstancesIsCustom\": \"<boolean>\",\n    \"nozologiesIsCustom\": \"<boolean>\",\n    \"kfgsIsCustom\": \"<boolean>\",\n    \"releaseFormIsCustom\": \"<boolean>\",\n    \"registrationDateIsCustom\": \"<boolean>\",\n    \"registrationNumberIsCustom\": \"<boolean>\",\n    \"descriptionIsCustom\": \"<boolean>\",\n    \"categoryIsCustom\": \"<boolean>\",\n    \"fgtIsCustom\": \"<boolean>\",\n    \"picturesIsCustom\": \"<boolean>\",\n    \"manufacturerIsCustom\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/global-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"global-product"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Global products.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73b1e87c-634e-42d1-ac23-9b6232853204",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const idGlPr = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
											"const idGlPr2 = idGlPr ? idGlPr.id : 'not found';\r",
											"console.log (idGlPr)\r",
											"\r",
											"pm.test(\"Compare Global product_id\", function () {\r",
											"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
											"});\r",
											"pm.test(\"Compare Global product_name\", function () {\r",
											"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/global-products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"global-products"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										},
										{
											"key": "barCode",
											"value": "8901086130273",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{ruNameGlPr}}",
											"disabled": true
										},
										{
											"key": "all",
											"value": "false",
											"disabled": true
										},
										{
											"key": "id",
											"value": "{{IdNewGPPr}}",
											"disabled": true
										},
										{
											"key": "barCode",
											"value": "4605095001534",
											"disabled": true
										},
										{
											"key": "atc_code",
											"value": "N03AG01",
											"disabled": true
										},
										{
											"key": "active_substance",
											"value": "sulfadoxine",
											"disabled": true
										},
										{
											"key": "enabled",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving products search data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf3bfa32-c287-4778-8e1f-e10698ca3f04",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const idGlPr = jsonData.data.items.find(u => u.globalProductId === parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
											"const idGlPr2 = idGlPr ? idGlPr.globalProductId : 'not found';\r",
											"console.log (idGlPr)\r",
											"\r",
											"pm.test(\"Compare Global product_id\", function () {\r",
											"    pm.expect(idGlPr2).to.eql(parseInt(pm.environment.get(\"IdNewGPPr\")));\r",
											"});\r",
											"pm.test(\"Compare Global product_name\", function () {\r",
											"    pm.expect(idGlPr.rusName).to.eql(pm.environment.get(\"ruNameGlPr\"));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/public/products/search?name={{ruNameGlPr}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"public",
										"products",
										"search"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										},
										{
											"key": "barCode",
											"value": "8901086130273",
											"disabled": true
										},
										{
											"key": "name",
											"value": "{{ruNameGlPr}}"
										},
										{
											"key": "all",
											"value": "false",
											"disabled": true
										},
										{
											"key": "id",
											"value": "{{IdNewGPPr}}",
											"disabled": true
										},
										{
											"key": "barCode",
											"value": "4605095001534",
											"disabled": true
										},
										{
											"key": "atc_code",
											"value": "N03AG01",
											"disabled": true
										},
										{
											"key": "active_substance",
											"value": "sulfadoxine",
											"disabled": true
										},
										{
											"key": "enabled",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User registration. Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4eae9ba-fa6b-42dc-872a-39e003380db5",
										"exec": [
											"pm.environment.set(\"idAdmin\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"emailAdmin\", pm.response.json().data.item.email);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Created admin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.type).to.eql(\"admin\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"admin\",\n    \"adminTestFirstField\":\"{{$randomCompanyName}} test\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"registration",
										"type",
										":type"
									],
									"variable": [
										{
											"id": "d4430880-9f35-4675-b603-9b42fdd499a2",
											"key": "type",
											"value": "admin",
											"type": "string",
											"description": "(Required) user type"
										}
									]
								},
								"description": "Creating User."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Admin data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fed2333c-6842-418b-83e7-f2d5ab8c1fac",
										"exec": [
											"//count quantity users in response\r",
											"let jsonData = pm.response.json();\r",
											"let items = jsonData.data.items;\r",
											"console.log(items.length);\r",
											"\r",
											"\r",
											"const idAdmin = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"idAdmin\")));\r",
											"const idAdmin2 = idAdmin ? idAdmin.id : 'not found';\r",
											"console.log (idAdmin)\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare Admin_id\", function () {\r",
											"    pm.expect(idAdmin2).to.eql(parseInt(pm.environment.get(\"idAdmin\")));\r",
											"});\r",
											"pm.test(\"Compare Global Admin_email\", function () {\r",
											"    pm.expect(idAdmin.email).to.eql(pm.environment.get(\"emailAdmin\"));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"admins"
									],
									"query": [
										{
											"key": "order[full_name]",
											"value": "asc",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "id",
											"value": "64",
											"description": "Page items count",
											"disabled": true
										},
										{
											"key": "first_name",
											"value": "Theron",
											"disabled": true
										},
										{
											"key": "last_name",
											"value": "Gutmann",
											"disabled": true
										},
										{
											"key": "email",
											"value": "Dandre.Rogahn19@yahoo.com",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "10",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of Admin data."
							},
							"response": [
								{
									"name": "Admins list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/admins?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"admins"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/admins?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"admins"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User registration enterprise_admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b44f509-8e7c-4f85-804a-b3fd38d857a6",
										"exec": [
											"pm.test(\"Created type-enterprise_admin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.type).to.eql(\"enterprise_admin\");\r",
											"});\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"idEntAd\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"emailEntAd\", pm.response.json().data.item.email);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"enterprise_admin\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"registration",
										"type",
										":type"
									],
									"variable": [
										{
											"id": "a472d3f1-efe4-44c4-8cec-12cabf74be5e",
											"key": "type",
											"value": "enterprise_admin",
											"type": "string",
											"description": "(Required) user type"
										}
									]
								},
								"description": "Creating User."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add User to Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "631410fc-3266-446e-b2dc-3fd5577c2edc",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"add-user",
										":userEmail"
									],
									"variable": [
										{
											"id": "a0d450b2-149d-437d-bb1e-b224e0b71be9",
											"key": "id",
											"value": "3",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "97c26c96-702c-49a8-b646-917ae770a135",
											"key": "userEmail",
											"value": "{{emailEntAd}}",
											"type": "string"
										}
									]
								},
								"description": "Add User to Pharmacy."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User added to Pharmacy",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of EnterpriseAdmin data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac73d7c0-82fb-4ba1-a8ae-e867116262ea",
										"exec": [
											"//count quantity users in response\r",
											"let jsonData = pm.response.json();\r",
											"let items = jsonData.data.items;\r",
											"console.log(items.length);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const idAdmin = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"idEntAd\")));\r",
											"const idAdmin2 = idAdmin ? idAdmin.id : 'not found';\r",
											"console.log (idAdmin)\r",
											"\r",
											"pm.test(\"Compare EntAdmin_id\", function () {\r",
											"    pm.expect(idAdmin2).to.eql(parseInt(pm.environment.get(\"idEntAd\")));\r",
											"});\r",
											"pm.test(\"Compare EntAdmin_email\", function () {\r",
											"    pm.expect(idAdmin.email).to.eql(pm.environment.get(\"emailEntAd\"));\r",
											"});\r",
											"pm.test(\"Compare EntAdmin_pharmacy_id\", function () {\r",
											"    pm.expect(idAdmin.pharmacies[0].id).to.eql(3);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/enterprise-admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"enterprise-admins"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Page items count",
											"disabled": true
										},
										{
											"key": "id",
											"value": "5",
											"disabled": true
										},
										{
											"key": "first_name",
											"value": "Joshuah",
											"disabled": true
										},
										{
											"key": "last_name",
											"value": "Vandervort",
											"disabled": true
										},
										{
											"key": "email",
											"value": "Dasia_Streich96@yahoo.com",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "3",
											"disabled": true
										},
										{
											"key": "pharmacy_name",
											"value": "Pharmacy 3",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of EnterpriseAdmin data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/enterprise-admins?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"enterprise-admins"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Enterprise admins list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/enterprise-admins?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"enterprise-admins"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "User registration. Enterprise_manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9b78fe5-b43c-4f46-97b1-2dcc501ce3a4",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Created enterprise_manager\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.type).to.eql(\"enterprise_manager\");\r",
											"});\r",
											"\r",
											"pm.environment.set(\"idEntMan\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"emailEntMan\", pm.response.json().data.item.email);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"type\": \"enterprise_manager\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"registration",
										"type",
										":type"
									],
									"variable": [
										{
											"id": "583dd7e1-af34-406b-a2af-a852b6a5dfa8",
											"key": "type",
											"value": "enterprise_manager",
											"type": "string",
											"description": "(Required) user type"
										}
									]
								},
								"description": "Creating User."
							},
							"response": [
								{
									"name": "User information",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"type\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/registration/type/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"registration",
												"type",
												":type"
											],
											"variable": [
												{
													"key": "type"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add EntMan to Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0085a55b-21f8-41f7-b1b1-1c48fc731788",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"add-user",
										":userEmail"
									],
									"variable": [
										{
											"id": "e15352f2-645f-443b-9e93-0146f8d0f4b7",
											"key": "id",
											"value": "3",
											"type": "string",
											"description": "(Required) "
										},
										{
											"id": "00fec3da-4052-4d3f-be64-a9808a36af45",
											"key": "userEmail",
											"value": "{{emailEntMan}}",
											"type": "string"
										}
									]
								},
								"description": "Add User to Pharmacy."
							},
							"response": [
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User added to Pharmacy",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/add-user/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"add-user",
												":userId"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of EnterpriseManager data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b2e951f-e503-4b5f-8457-dbc3ab8a4f1e",
										"exec": [
											"let jsonData = pm.response.json();\r",
											"let items = jsonData.data.items;\r",
											"console.log(items.length);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const idAdmin = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"idEntMan\")));\r",
											"const idAdmin2 = idAdmin ? idAdmin.id : 'not found';\r",
											"console.log (idAdmin)\r",
											"\r",
											"pm.test(\"Compare EntMan_id\", function () {\r",
											"    pm.expect(idAdmin2).to.eql(parseInt(pm.environment.get(\"idEntMan\")));\r",
											"});\r",
											"pm.test(\"Compare EntMan_email\", function () {\r",
											"    pm.expect(idAdmin.email).to.eql(pm.environment.get(\"emailEntMan\"));\r",
											"});\r",
											"pm.test(\"Compare EntMan_pharmacy_id\", function () {\r",
											"    pm.expect(idAdmin.pharmacies[0].id).to.eql(3);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/enterprise-managers?page=1&per_page=20&order[id]=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"enterprise-managers"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number"
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Page items count"
										},
										{
											"key": "id",
											"value": "72",
											"disabled": true
										},
										{
											"key": "first_name",
											"value": "Bernice",
											"disabled": true
										},
										{
											"key": "last_name",
											"value": "Walker",
											"disabled": true
										},
										{
											"key": "email",
											"value": "Amara_Tremblay@gmail.com",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "3",
											"disabled": true
										},
										{
											"key": "pharmacy_name",
											"value": "Pharmacy 3",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc"
										},
										{
											"key": "order[full_name]",
											"value": "desc",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of EnterpriseManager data."
							},
							"response": [
								{
									"name": "Enreprise managers list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/enterprise-managers?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"enterprise-managers"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/enterprise-managers?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"enterprise-managers"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Creating Order- delivery_adress",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fc63aaa-b3ff-4c4d-9213-f952d4ad2886",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.environment.set(\"orderId\", pm.response.json().data.item.orderId);\r",
											"\r",
											"pm.test(\"Status new\", function () {\r",
											"    pm.expect(jsonData.data.item.status).to.eql(\"new\");\r",
											"});\r",
											"\r",
											"pm.test(\"Sum order\", function () {\r",
											"   pm.expect((jsonData.data.item.pharmacyProductOrderDataList[0].price)*(jsonData.data.item.pharmacyProductOrderDataList[0].productCount)).to.eql(jsonData.data.item.pharmacyProductsTotalPrice);\r",
											"});\r",
											"pm.environment.set(\"Order_cost\", (pm.response.json().data.item.pharmacyProductsTotalPrice)+(pm.response.json().data.item.deliveryPrice));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pharmacyId\": 3,\n  \"contactInfo\": {\n   \"name\": \"{{$randomFullName}}\",\n   \"phone\": \"{{rphone}}\",\n   \"email\": \"{{$randomEmail}}\"\n  },\n  \"deliveryInfo\": {\n     \"type\": \"delivery_address\",\n     \"comment\": \"{{$randomPhrase}}\",\n     \"address\": {\n     \"city\": \"{{$randomCity}}\",\n     \"street\": \"{{$randomStreetAddress}}\",\n     \"house\": \"{{$randomInt}}\",\n     \"apartment\": \"{{$randomInt}}\"\n     }\n  },\n  \"paymentType\": \"1\",\n  \"pharmacyProductOrderCreateDataList\": [\n    {\n     \"pharmacyProductId\": {{pharmacyPrIdNull}},\n      \"requestedPrice\": 12.435435399,\n      \"count\": {{random_count}}\n    }\n  ],\n  \"deliveryPrice\": 50\n}\n",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"order"
									]
								},
								"description": "Creating Order."
							},
							"response": [
								{
									"name": "Order created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": {
													"content": "Added as a part of security scheme: apikey",
													"type": "text/plain"
												},
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"paymentType\": \"<string>\",\n    \"pharmacyId\": \"<integer>\",\n    \"contactInfoCreateData\": {\n        \"name\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"email\": \"<string>\"\n    },\n    \"deliveryInfoCreateData\": {\n        \"type\": \"<string>\",\n        \"comment\": \"<string>\",\n        \"addressCreateData\": {\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"house\": \"<string>\",\n            \"apartment\": \"<string>\"\n        }\n    },\n    \"pharmacyProductOrderCreateDataList\": [\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        },\n        {\n            \"pharmacyProductId\": \"<integer>\",\n            \"price\": \"<integer>\",\n            \"count\": \"<integer>\"\n        }\n    ],\n    \"deliveryPrice\": \"<number>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of orders. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a58f0596-aeb4-4fa2-a655-01d04ddf57c3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const idAdmin = jsonData.data.items.find(u => u.orderId === parseInt(pm.environment.get(\"orderId\")));\r",
											"const idAdmin2 = idAdmin ? idAdmin.orderId : 'not found';\r",
											"console.log (idAdmin)\r",
											"\r",
											"pm.test(\"Compare Order_id\", function () {\r",
											"    pm.expect(idAdmin2).to.eql(parseInt(pm.environment.get(\"orderId\")));\r",
											"});\r",
											"pm.test(\"Compare Order_sum\", function () {\r",
											"    pm.expect(idAdmin.totalPrice).to.eql(pm.environment.get(\"Order_cost\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"orders"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "",
											"disabled": true
										},
										{
											"key": "order[total_price]",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "3",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_progress",
											"disabled": true
										},
										{
											"key": "status",
											"value": "done",
											"disabled": true
										},
										{
											"key": "status",
											"value": "canceled",
											"disabled": true
										},
										{
											"key": "status",
											"value": "new",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ready",
											"disabled": true
										},
										{
											"key": "status",
											"value": "to_delivery",
											"disabled": true
										},
										{
											"key": "status",
											"value": "in_delivery",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "delivery_address",
											"disabled": true
										},
										{
											"key": "delivery_type",
											"value": "pickup",
											"disabled": true
										},
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "",
											"disabled": true
										},
										{
											"key": "pharmacy_id",
											"value": "",
											"disabled": true
										},
										{
											"key": "name",
											"value": "Lorna.Klein63",
											"disabled": true
										},
										{
											"key": "min_total_price",
											"value": "7633.6",
											"disabled": true
										},
										{
											"key": "max_total_price",
											"value": "7633.7",
											"disabled": true
										},
										{
											"key": "id",
											"value": "11",
											"disabled": true
										},
										{
											"key": "phone",
											"value": "258852677007",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26dea2f1-bd9b-4dd9-94e1-d08f1575cda4",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"PharmaIdCr\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"RegionId\", pm.response.json().data.item.region.id);\r",
											"\r",
											"pm.test(\"isEnabled=true\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.isEnabled).to.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "281033f9-0f91-4489-aaac-7c17654a9df1",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"phone\": \"{{rphone}}\",\n  \"regionId\": 6,\n  \"location\": {\n    \"lat\": 0,\n    \"lng\": 0,\n    \"address\": \"ул. Ньютона, 103\"\n  },\n  \"logoUuid\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy"
									]
								},
								"description": "Creating Pharmacy."
							},
							"response": [
								{
									"name": "Pharmacy created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"regionId\": \"<integer>\",\n    \"location\": {\n        \"latitude\": \"<number>\",\n        \"longitude\": \"<number>\",\n        \"address\": \"<string>\"\n    },\n    \"logoUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Pharmacy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "18c899e4-3ec6-4d75-b1c9-eafb337d9986",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"const pharma = jsonData.data.items.find(u => u.id === parseInt(pm.environment.get(\"PharmaIdCr\")));\r",
											"const pharmaid = pharma ? pharma.id : 'not found';\r",
											"\r",
											"console.log(pharma);\r",
											"console.log(pharmaid);\r",
											"\r",
											"pm.test(\"Compare pharma_id\", function () {\r",
											"    pm.expect(pharmaid).to.eql(parseInt(pm.environment.get(\"PharmaIdCr\")));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacies"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[name]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "order[address]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "order[user_count]",
											"value": "<string>",
											"disabled": true
										},
										{
											"key": "id",
											"value": "9",
											"description": "id",
											"disabled": true
										},
										{
											"key": "name",
											"value": "Practical Steel Salad",
											"description": "Pharmacy name",
											"disabled": true
										},
										{
											"key": "address",
											"value": "ул. Ньютона",
											"description": "Pharmacy address",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "256930985096",
											"description": "Pharmacy phone number",
											"disabled": true
										},
										{
											"key": "enterprise_admin",
											"value": "",
											"description": "Pharmacy enterprise admin name",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number",
											"disabled": true
										},
										{
											"key": "per_page",
											"value": "12",
											"description": "Page items count",
											"disabled": true
										}
									]
								},
								"description": "Retrieving collection of Pharmacy."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacies?order[id]=<string>&order[name]=<string>&order[address]=<string>&order[user_count]=<string>&id=<integer>&name=<string>&address=<string>&phone_number=<string>&enterprise_admin=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacies"
											],
											"query": [
												{
													"key": "order[id]",
													"value": "<string>"
												},
												{
													"key": "order[name]",
													"value": "<string>"
												},
												{
													"key": "order[address]",
													"value": "<string>"
												},
												{
													"key": "order[user_count]",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "address",
													"value": "<string>"
												},
												{
													"key": "phone_number",
													"value": "<string>"
												},
												{
													"key": "enterprise_admin",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pharmacies list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacies?order[id]=<string>&order[name]=<string>&order[address]=<string>&order[user_count]=<string>&id=<integer>&name=<string>&address=<string>&phone_number=<string>&enterprise_admin=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacies"
											],
											"query": [
												{
													"key": "order[id]",
													"value": "<string>"
												},
												{
													"key": "order[name]",
													"value": "<string>"
												},
												{
													"key": "order[address]",
													"value": "<string>"
												},
												{
													"key": "order[user_count]",
													"value": "<string>"
												},
												{
													"key": "id",
													"value": "<integer>"
												},
												{
													"key": "name",
													"value": "<string>"
												},
												{
													"key": "address",
													"value": "<string>"
												},
												{
													"key": "phone_number",
													"value": "<string>"
												},
												{
													"key": "enterprise_admin",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving collection of Prototype products.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}​/api/v1/user/prototype-products",
									"host": [
										"{{baseUrl}}​"
									],
									"path": [
										"api",
										"v1",
										"user",
										"prototype-products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving collection of Customer data by phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58ac21be-5eab-4a5d-aff7-a930260668bb",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare id_customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].id).to.eql(pm.environment.get(\"custId\"));\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/customers/search-by-name-or-phone?name_or_phone={{phone_customer}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"customers",
										"search-by-name-or-phone"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "name_or_phone",
											"value": "{{phone_customer}}"
										},
										{
											"key": "name_or_phone",
											"value": "{{custName}}",
											"disabled": true
										},
										{
											"key": "page",
											"value": null,
											"disabled": true
										},
										{
											"key": "per_page",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving collection of Customer data by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c5d73bc-bd7d-41e8-b155-c3407707135d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Compare id_customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.items[0].id).to.eql(pm.environment.get(\"custId\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/customers/search-by-name-or-phone?name_or_phone={{custName}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"customers",
										"search-by-name-or-phone"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "asc",
											"disabled": true
										},
										{
											"key": "order[id]",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "name_or_phone",
											"value": "{{phone_customer}}",
											"disabled": true
										},
										{
											"key": "name_or_phone",
											"value": "{{custName}}"
										},
										{
											"key": "page",
											"value": null,
											"disabled": true
										},
										{
											"key": "per_page",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieves collection of Region data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19e62f8e-4dc5-4d7e-bac1-b2d60903b87a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/public/regions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"public",
										"regions"
									],
									"query": [
										{
											"key": "id",
											"value": "",
											"disabled": true
										},
										{
											"key": "maxLevelCount",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test Customer",
					"item": [
						{
							"name": "Customer registration.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7dcf097-327e-4cbc-aa5b-b9c1e9b33cfa",
										"exec": [
											"pm.environment.set(\"phone_customer\", pm.response.json().data.item.phone);\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "330fe0da-6880-4597-ae1d-af2dda77db51",
										"exec": [
											"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
											"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
											"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
											"var shuffle = _.shuffle(phn);\r",
											"pm.environment.set(\"rphone\", shuffle[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"registration"
									]
								},
								"description": "Creating Customer, generating code for it and sending sms."
							},
							"response": [
								{
									"name": "Customer created and sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/registration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"registration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer authentication.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "96f992ad-9b83-4908-8e1f-e53a797ecbf1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{phone_customer}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"auth"
									]
								},
								"description": "Generating code for Customer and sending sms."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Sent verification code",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"auth"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer login. Phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b65413f-1e2e-4a9a-ad18-d4e429e8044b",
										"exec": [
											"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
											"pm.environment.set(\"uuid_customer\", pm.response.json().data.item.uuid);\r",
											"pm.environment.set(\"refreshToken_customer\", pm.response.json().data.refreshToken);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"login"
									]
								},
								"description": "Customer login."
							},
							"response": [
								{
									"name": "Returns tokens",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving self Customer data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7daa61c2-d976-45a1-bffb-b1ebc56a921b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								},
								"description": "Retrieving self Customer data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer self information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Uploading Customer image file. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0927b5c5-d998-47d3-a4d7-b8148d525b82",
										"exec": [
											"pm.environment.set(\"uuidImageCustomer\", pm.response.json().data.item.uuid);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/D:/ProjecTs/Pharma/IMG Pharma/main_frederic.jpg"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"image"
									]
								}
							},
							"response": []
						},
						{
							"name": "Updating Customer data.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a64db840-caf4-4446-aed5-dd19642a2c47",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"avatarUuid\":\"{{uuidImageCustomer}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								},
								"description": "Updating Customer data."
							},
							"response": [
								{
									"name": "Customer edit self information",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"avatarUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"avatarUuid\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieving Customer data by uuid.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "529ca7ba-7c2c-4764-afed-11d08c8f14b8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer",
										":uuid"
									],
									"variable": [
										{
											"id": "8649b59d-1d3a-4995-82d8-c2c5c91c59fd",
											"key": "uuid",
											"value": "{{uuid_customer}}",
											"type": "string",
											"description": "(Required) customer uuid"
										}
									]
								},
								"description": "Retrieving Customer data by uuid."
							},
							"response": [
								{
									"name": "Customer information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updating Customer region.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"regionId\": 8\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer/region",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer",
										"region"
									]
								}
							},
							"response": []
						},
						{
							"name": "Retrieving self Customer data. Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "beb72955-aec6-45aa-93fd-0317b695d982",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Compare uuid avatar\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"uuidImageCustomer\"));\r",
											"});\r",
											"pm.test(\"Compare uuid customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.uuid).to.eql(pm.environment.get(\"uuid_customer\"));\r",
											"});\r",
											"pm.test(\"Compare phone customer\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.phone).to.eql(pm.environment.get(\"phone_customer\"));\r",
											"});\r",
											"pm.test(\"Compare region\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.item.region.id).to.eql(8);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								},
								"description": "Retrieving self Customer data."
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer self information",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/customer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"customer"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Customer logout.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a199eda4-87b1-4b01-9e43-0fc58d462920",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_customer}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refreshToken\": \"{{refreshToken_customer}}\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"logout"
									]
								},
								"description": "Customer logout."
							},
							"response": [
								{
									"name": "Returns if authentication failing",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"logout"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returns if request parameters is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"logout"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Customer logout",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/customer/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"customer",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Test pharmacy-product/{id}",
					"item": [
						{
							"name": "Picture",
							"item": [
								{
									"name": "Uploading_User_image_file.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c76fa32b-7e39-480f-88b2-9c2c5c78c8a6",
												"exec": [
													"pm.environment.set(\"pharmacyImage1\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (31).jpg"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0108de57-a0cf-4490-8ec0-805434fe5527",
												"exec": [
													"pm.environment.set(\"pharmacyImage2\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (30).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "31420c68-9cf8-462e-b066-854c1187e833",
												"exec": [
													"pm.environment.set(\"pharmacyImage3\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (32).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c02ae71d-1230-48de-b820-48a55b66c226",
												"exec": [
													"pm.environment.set(\"pharmacyImage4\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (33).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Uploading User image file. 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3732508e-e339-4b15-bbd0-f18d6f1069d9",
												"exec": [
													"pm.environment.set(\"pharmacyImage5\", pm.response.json().data.item.uuid);\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/D:/ProjecTs/Pharma/IMG Pharma/Без названия (34).jpg"
												}
											],
											"options": {
												"formdata": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"image"
											]
										}
									},
									"response": []
								},
								{
									"name": "Creating Pharmacy product.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "27eae8af-087d-4e1f-a49e-8578a6fb67e2",
												"exec": [
													"//postman.setNextRequest(\"Uploading_User_image_file.\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b04b2612-4478-4b86-8bde-dddf1b979392",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.environment.set(\"pharmacyPrId\", pm.response.json().data.item.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token_user}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"globalProductId\": 749,\r\n  \"price\": 61.321166,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true, \r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658406\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 4,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy",
												":id",
												"pharmacy-product"
											],
											"variable": [
												{
													"id": "e50d6423-55ba-4f1d-a4d5-ff0e399395c0",
													"key": "id",
													"value": "{{PharmaIdCr}}",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Creating Pharmacy product.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8eebaa6f-3aa7-4163-a8cd-ca7e4397fc04",
										"exec": [
											"//postman.setNextRequest(\"Uploading_User_image_file.\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1cb7f41c-b87a-4385-93e0-e814e1e05021",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.environment.set(\"pharmacyPrId\", pm.response.json().data.item.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": 749,\r\n  \"price\": 61.321166,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true, \r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n  ],\r\n  \"barCodes\": [\r\n    \"3587789658406\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 4,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "03df164d-38d9-47e1-be36-762a24925083",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Pharmacy product. NULL",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dfb8eaf8-ac1e-4200-9d30-4da59572d071",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"pharmacyPrIdNullFull\", pm.response.json().data.item.id);\r",
											"pm.environment.set(\"pharmacyGlPrIdNullFull\", pm.response.json().data.item.globalProduct.id);\r",
											"console.log(pm.environment.get(\"pharmacyPrIdNullFull\", ));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"globalProductId\": null,\r\n  \"price\": 693.151551511598,\r\n  \"count\": 14,\r\n  \"isEnabled\": true,\r\n  \"isApproved\": true,\r\n  \"rusName\": \"ДЕПАКИН<SUP>&reg;</SUP> ХРОНО\",\r\n  \"engName\": \"DEPAKINE<SUP>&reg;</SUP> CHRONO\",\r\n  \"releaseForm\": \"таб. пролонгир. действия, покр. оболочкой, 300 мг: 100 шт.\",\r\n  \"registrationDate\": \"2012-03-29T00:00:00+03:00\",\r\n  \"registrationNumber\": \"П N013004/01\",\r\n  \"description\": \"test\",\r\n  \"categoryAtcCode\": \"N03AG01\",\r\n  \"fgtCode\": \"02.011\",\r\n  \"pictureUuids\": [\r\n    \"{{pharmacyImage1}}\",\r\n    \"{{pharmacyImage2}}\",\r\n    \"{{pharmacyImage3}}\",\r\n    \"{{pharmacyImage4}}\",\r\n    \"{{pharmacyImage5}}\"\r\n    ],\r\n  \"barCodes\": [\r\n    \"3587789658439\"\r\n  ],\r\n  \"activeSubstances\": [\r\n    \"valproic acid\"\r\n  ],\r\n  \"kfgCodes\": [\r\n    \"02.05.05\"\r\n  ],\r\n  \"nozologyCodes\": [\r\n    \"B15\"\r\n  ],\r\n  \"manufacturerName\": \"SANOFI WINTHROP INDUSTRIE\",\r\n  \"manufacturerCountry\": 9,\r\n  \"rusNameIsCustom\": true,\r\n  \"engNameIsCustom\": true,\r\n  \"barCodesIsCustom\": true,\r\n  \"activeSubstancesIsCustom\": true,\r\n  \"nozologiesIsCustom\": true,\r\n  \"kfgsIsCustom\": true,\r\n  \"releaseFormIsCustom\": true,\r\n  \"registrationDateIsCustom\": true,\r\n  \"registrationNumberIsCustom\": true,\r\n  \"descriptionIsCustom\": true,\r\n  \"categoryIsCustom\": true,\r\n  \"fgtIsCustom\": true,\r\n  \"picturesIsCustom\": true,\r\n  \"manufacturerIsCustom\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy/:id/pharmacy-product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy",
										":id",
										"pharmacy-product"
									],
									"variable": [
										{
											"id": "bb4773f4-945a-4b5d-b704-a20c2322ddda",
											"key": "id",
											"value": "{{PharmaIdCr}}",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Pharmacy product.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6dff8d7-ada9-4379-9ba5-8bb1fd91dd79",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "Value: Bearer {jwt}",
										"key": "Authorization",
										"value": ""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										"pharmacy-product",
										":id",
										"disable"
									],
									"variable": [
										{
											"id": "eacbe1e4-c775-446f-b28e-889110750206",
											"key": "id",
											"value": "{{pharmacyPrIdNullFull}}",
											"type": "string",
											"description": "(Required) Pharmacy product id"
										}
									]
								},
								"description": "Disable Pharmacy product."
							},
							"response": [
								{
									"name": "Pharmacy disabled",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/pharmacy-product/:id/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												"pharmacy-product",
												":id",
												"disable"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "//api.pharmacies.release.fmc-dev.com",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}