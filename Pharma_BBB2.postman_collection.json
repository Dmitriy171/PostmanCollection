{
	"info": {
		"_postman_id": "3432b7e7-0998-4451-8fc3-810692be3ae6",
		"name": "Pharma_BBB2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test Customer",
			"item": [
				{
					"name": "Customer registration.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "506a3d1f-073e-4be1-9e29-d4622203e297",
								"exec": [
									"pm.environment.set(\"phone_customer\", pm.response.json().data.item.phone);\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0b09e667-383e-4d04-8c79-e6704a8c3968",
								"exec": [
									"pm.environment.set(\"random_phone\", _.random(10000000000, 90000000000));\r",
									"pm.environment.set(\"random_phone2\", _.random(100000000000, 900000000000));\r",
									"var phn = [pm.environment.get(\"random_phone\"),pm.environment.get(\"random_phone2\"),];\r",
									"var shuffle = _.shuffle(phn);\r",
									"pm.environment.set(\"rphone\", shuffle[0]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"phone\": \"{{rphone}}\",\n\"name\": \"{{$randomUserName}}\",\n\"email\": \"{{$randomEmail}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/registration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"registration"
							]
						},
						"description": "Creating Customer, generating code for it and sending sms."
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"registration"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Customer created and sent verification code",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"<string>\",\n    \"name\": \"<string>\",\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/registration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"registration"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Customer authentication.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08b65fa1-ce03-4a61-ba33-05f752fde523",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": \"{{phone_customer}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"auth"
							]
						},
						"description": "Generating code for Customer and sending sms."
					},
					"response": [
						{
							"name": "Sent verification code",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"auth"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"auth"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Customer login. Phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "580b719f-bada-425f-ab70-ea16d329bf0d",
								"exec": [
									"pm.environment.set(\"token_customer\", pm.response.json().data.token);\r",
									"pm.environment.set(\"uuid_customer\", pm.response.json().data.item.uuid);\r",
									"pm.environment.set(\"refreshToken_customer\", pm.response.json().data.refreshToken);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": \"{{rphone}}\",\n    \"code\": \"11111\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"login"
							]
						},
						"description": "Customer login."
					},
					"response": [
						{
							"name": "Returns tokens",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returns if authentication failing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returns if request parameters is not valid",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone\": \"<string>\",\n    \"code\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieving self Customer data.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "996c8f34-e4b7-473f-8b57-16cb46b7cc41",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "Value: Bearer {jwt}",
								"key": "Authorization",
								"value": ""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/customer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"customer"
							]
						},
						"description": "Retrieving self Customer data."
					},
					"response": [
						{
							"name": "Customer self information",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Uploading Customer image file. Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3635e38c-7853-4733-93ce-0422dc3c050b",
								"exec": [
									"pm.environment.set(\"uuidImageCustomer\", pm.response.json().data.item.uuid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/ProjecTs/Pharma/IMG Pharma/main_frederic.jpg"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/image",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"image"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating Customer data.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5857129a-8a46-4a4a-9ee6-e7ad79fa7d3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"description": "Value: Bearer {jwt}",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"avatarUuid\":\"{{uuidImageCustomer}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/customer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"customer"
							]
						},
						"description": "Updating Customer data."
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"avatarUuid\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Customer edit self information",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"email\": \"<string>\",\n    \"avatarUuid\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieving Customer data by uuid.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d54e96a9-a28c-4af3-9210-648fabc5dde9",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "Value: Bearer {jwt}",
								"key": "Authorization",
								"value": ""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"customer",
								":uuid"
							],
							"variable": [
								{
									"id": "8649b59d-1d3a-4995-82d8-c2c5c91c59fd",
									"key": "uuid",
									"value": "{{uuid_customer}}",
									"type": "string",
									"description": "(Required) customer uuid"
								}
							]
						},
						"description": "Retrieving Customer data by uuid."
					},
					"response": [
						{
							"name": "Customer information",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Updating Customer region.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"regionId\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/customer/region",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"customer",
								"region"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieving self Customer data. Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cefa08eb-e5d3-488a-8c89-d468caf450ce",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Compare uuid avatar\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.item.avatar.uuid).to.eql(pm.environment.get(\"uuidImageCustomer\"));\r",
									"});\r",
									"pm.test(\"Compare uuid customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.item.uuid).to.eql(pm.environment.get(\"uuid_customer\"));\r",
									"});\r",
									"pm.test(\"Compare phone customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.item.phone).to.eql(pm.environment.get(\"phone_customer\"));\r",
									"});\r",
									"pm.test(\"Compare region\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.item.region.id).to.eql(8);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "Value: Bearer {jwt}",
								"key": "Authorization",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/customer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"customer"
							]
						},
						"description": "Retrieving self Customer data."
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Customer self information",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"customer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Customer logout.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed04450c-2050-42f5-b135-d5159750e845",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_customer}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "Value: Bearer {jwt}",
								"key": "Authorization",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refreshToken_customer}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/customer/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"customer",
								"logout"
							]
						},
						"description": "Customer logout."
					},
					"response": [
						{
							"name": "Returns if request parameters is not valid",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"logout"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Customer logout",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returns if authentication failing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/customer/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"customer",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}